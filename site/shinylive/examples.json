[
  {
    "category": "Basic",
    "apps": [
      {
        "title": "Basic App",
        "about": "",
        "files": [
          {
            "name": "app.py",
            "content": "from shiny import App, render, ui\n\napp_ui = ui.page_fluid(\n    ui.input_slider(\"n\", \"N\", 0, 100, 20),\n    ui.output_text_verbatim(\"txt\"),\n)\n\n\ndef server(input, output, session):\n    @output\n    @render.text\n    def txt():\n        return f\"n*2 is {input.n() * 2}\"\n\n\napp = App(app_ui, server)\n",
            "type": "text"
          }
        ]
      },
      {
        "title": "App with plot",
        "about": "",
        "files": [
          {
            "name": "app.py",
            "content": "from shiny import App, render, ui\n\n# Import modules for plot rendering\nimport numpy as np\nimport matplotlib.pyplot as plt\n\napp_ui = ui.page_fluid(\n    ui.layout_sidebar(\n        ui.panel_sidebar(\n            ui.input_slider(\"n\", \"N\", 0, 100, 20),\n        ),\n        ui.panel_main(\n            ui.output_plot(\"plot\"),\n        ),\n    ),\n)\n\n\ndef server(input, output, session):\n    @output\n    @render.plot(alt=\"A histogram\")\n    def plot():\n        np.random.seed(19680801)\n        x = 100 + 15 * np.random.randn(437)\n\n        fig, ax = plt.subplots()\n        ax.hist(x, input.n(), density=True)\n        return fig\n\n\napp = App(app_ui, server, debug=True)\n",
            "type": "text"
          }
        ]
      }
    ]
  },
  {
    "category": "Featured",
    "apps": [
      {
        "title": "CPU info",
        "about": "CPU load monitor",
        "files": [
          {
            "name": "app.py",
            "content": "import sys\n\nif \"pyodide\" in sys.modules:\n    # psutil doesn't work on pyodide--use fake data instead\n    from fakepsutil import cpu_count, cpu_percent\n\n    shinylive_message = \"Note: the CPU data is simulated when running in Shinylive.\"\nelse:\n    from psutil import cpu_count, cpu_percent\n\n    shinylive_message = \"\"\n\nfrom math import ceil\n\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\nfrom shiny import App, Inputs, Outputs, Session, reactive, render, ui\n\n# The agg matplotlib backend seems to be a little more efficient than the default when\n# running on macOS, and also gives more consistent results across operating systems\nmatplotlib.use(\"agg\")\n\n# max number of samples to retain\nMAX_SAMPLES = 1000\n# secs between samples\nSAMPLE_PERIOD = 1\n\n\nncpu = cpu_count(logical=True)\n\napp_ui = ui.page_fluid(\n    ui.tags.style(\n        \"\"\"\n        /* Don't apply fade effect, it's constantly recalculating */\n        .recalculating {\n            opacity: 1;\n        }\n        tbody > tr:last-child {\n            /*border: 3px solid var(--bs-dark);*/\n            box-shadow:\n                0 0 2px 1px #fff, /* inner white */\n                0 0 4px 2px #0ff, /* middle cyan */\n                0 0 5px 3px #00f; /* outer blue */\n        }\n        #table table {\n            table-layout: fixed;\n            width: %s;\n            font-size: 0.8em;\n        }\n        th, td {\n            text-align: center;\n        }\n        \"\"\"\n        % f\"{ncpu*4}em\"\n    ),\n    ui.h3(\"CPU Usage %\", class_=\"mt-2\"),\n    ui.layout_sidebar(\n        ui.panel_sidebar(\n            ui.input_select(\n                \"cmap\",\n                \"Colormap\",\n                {\n                    \"inferno\": \"inferno\",\n                    \"viridis\": \"viridis\",\n                    \"copper\": \"copper\",\n                    \"prism\": \"prism (not recommended)\",\n                },\n            ),\n            ui.p(ui.input_action_button(\"reset\", \"Clear history\", class_=\"btn-sm\")),\n            ui.input_switch(\"hold\", \"Freeze output\", value=False),\n            shinylive_message,\n            class_=\"mb-3\",\n        ),\n        ui.panel_main(\n            ui.div(\n                {\"class\": \"card mb-3\"},\n                ui.div(\n                    {\"class\": \"card-body\"},\n                    ui.h5({\"class\": \"card-title mt-0\"}, \"Graphs\"),\n                    ui.output_plot(\"plot\", height=f\"{ncpu * 40}px\"),\n                ),\n                ui.div(\n                    {\"class\": \"card-footer\"},\n                    ui.input_numeric(\"sample_count\", \"Number of samples per graph\", 50),\n                ),\n            ),\n            ui.div(\n                {\"class\": \"card\"},\n                ui.div(\n                    {\"class\": \"card-body\"},\n                    ui.h5({\"class\": \"card-title m-0\"}, \"Heatmap\"),\n                ),\n                ui.div(\n                    {\"class\": \"card-body overflow-auto pt-0\"},\n                    ui.output_table(\"table\"),\n                ),\n                ui.div(\n                    {\"class\": \"card-footer\"},\n                    ui.input_numeric(\"table_rows\", \"Rows to display\", 5),\n                ),\n            ),\n        ),\n    ),\n)\n\n\n@reactive.Calc\ndef cpu_current():\n    reactive.invalidate_later(SAMPLE_PERIOD)\n    return cpu_percent(percpu=True)\n\n\ndef server(input: Inputs, output: Outputs, session: Session):\n    cpu_history = reactive.Value(None)\n\n    @reactive.Calc\n    def cpu_history_with_hold():\n        # If \"hold\" is on, grab an isolated snapshot of cpu_history; if not, then do a\n        # regular read\n        if not input.hold():\n            return cpu_history()\n        else:\n            # Even if frozen, we still want to respond to input.reset()\n            input.reset()\n            with reactive.isolate():\n                return cpu_history()\n\n    @reactive.Effect\n    def collect_cpu_samples():\n        \"\"\"cpu_percent() reports just the current CPU usage sample; this Effect gathers\n        them up and stores them in the cpu_history reactive value, in a numpy 2D array\n        (rows are CPUs, columns are time).\"\"\"\n\n        new_data = np.vstack(cpu_current())\n        with reactive.isolate():\n            if cpu_history() is None:\n                cpu_history.set(new_data)\n            else:\n                combined_data = np.hstack([cpu_history(), new_data])\n                # Throw away extra data so we don't consume unbounded amounts of memory\n                if combined_data.shape[1] > MAX_SAMPLES:\n                    combined_data = combined_data[:, -MAX_SAMPLES:]\n                cpu_history.set(combined_data)\n\n    @reactive.Effect(priority=100)\n    @reactive.event(input.reset)\n    def reset_history():\n        cpu_history.set(None)\n\n    @output\n    @render.plot\n    def plot():\n        history = cpu_history_with_hold()\n\n        if history is None:\n            history = np.array([])\n            history.shape = (ncpu, 0)\n\n        nsamples = input.sample_count()\n\n        # Throw away samples too old to fit on the plot\n        if history.shape[1] > nsamples:\n            history = history[:, -nsamples:]\n\n        ncols = 2\n        nrows = int(ceil(ncpu / ncols))\n        fig, axeses = plt.subplots(\n            nrows=nrows,\n            ncols=ncols,\n            squeeze=False,\n        )\n        for i in range(0, ncols * nrows):\n            row = i // ncols\n            col = i % ncols\n            axes = axeses[row, col]\n            if i >= len(history):\n                axes.set_visible(False)\n                continue\n            data = history[i]\n            axes.yaxis.set_label_position(\"right\")\n            axes.yaxis.tick_right()\n            axes.set_xlim(-(nsamples - 1), 0)\n            axes.set_ylim(0, 100)\n\n            assert len(data) <= nsamples\n\n            # Set up an array of x-values that will right-align the data relative to the\n            # plotting area\n            x = np.arange(0, len(data))\n            x = np.flip(-x)\n\n            # Color bars by cmap\n            color = plt.get_cmap(input.cmap())(data / 100)\n            axes.bar(x, data, color=color, linewidth=0, width=1.0)\n\n            axes.set_yticks([25, 50, 75])\n            for ytl in axes.get_yticklabels():\n                if col == ncols - 1 or i == ncpu - 1 or True:\n                    ytl.set_fontsize(7)\n                else:\n                    ytl.set_visible(False)\n                    hide_ticks(axes.yaxis)\n            for xtl in axes.get_xticklabels():\n                xtl.set_visible(False)\n            hide_ticks(axes.xaxis)\n            axes.grid(True, linewidth=0.25)\n\n        return fig\n\n    @output\n    @render.table\n    def table():\n        history = cpu_history_with_hold()\n        latest = pd.DataFrame(history).transpose().tail(input.table_rows())\n        if latest.shape[0] == 0:\n            return latest\n        return (\n            latest.style.format(precision=0)\n            .hide(axis=\"index\")\n            .set_table_attributes(\n                'class=\"dataframe shiny-table table table-borderless font-monospace\"'\n            )\n            .background_gradient(cmap=input.cmap(), vmin=0, vmax=100)\n        )\n\n\ndef hide_ticks(axis):\n    for ticks in [axis.get_major_ticks(), axis.get_minor_ticks()]:\n        for tick in ticks:\n            tick.tick1line.set_visible(False)\n            tick.tick2line.set_visible(False)\n            tick.label1.set_visible(False)\n            tick.label2.set_visible(False)\n\n\napp = App(app_ui, server)\n",
            "type": "text"
          },
          {
            "name": "fakepsutil.py",
            "content": "\"\"\"Generates synthetic data\"\"\"\n\nimport numpy as np\n\n\ndef cpu_count(logical: bool = True):\n    return 8 if logical else 4\n\n\nlast_sample = np.random.uniform(0, 100, size=cpu_count(True))\n\n\ndef cpu_percent(interval=None, percpu=False):\n    global last_sample\n    delta = np.random.normal(scale=10, size=len(last_sample))\n    last_sample = (last_sample + delta).clip(0, 100)\n    if percpu:\n        return last_sample.tolist()\n    else:\n        return last_sample.mean()\n",
            "type": "text"
          },
          {
            "name": "requirements.txt",
            "content": "# Pandas needs Jinja2 for table styling, but it doesn't (yet) load automatically\n# in Pyodide, so we need to explicitly list it here.\nJinja2\n",
            "type": "text"
          }
        ]
      },
      {
        "title": "Orbit simulation",
        "about": "Earth-Moon gravity",
        "files": [
          {
            "name": "app.py",
            "content": "from pathlib import Path\nfrom simulation import Body, Simulation, nbody_solve, spherical_to_cartesian\nimport matplotlib.pyplot as plt\nimport astropy.units as u\nimport numpy as np\n\nfrom shiny import App, reactive, render, ui\n\n# This application adapted from RK4 Orbit Integrator tutorial in Python for Astronomers\n# https://prappleizer.github.io/\n\n\ndef panel_box(*args, **kwargs):\n    return ui.div(\n        ui.div(*args, class_=\"card-body\"),\n        **kwargs,\n        class_=\"card mb-3\",\n    )\n\n\napp_ui = ui.page_fluid(\n    {\"class\": \"p-4\"},\n    ui.row(\n        ui.column(\n            4,\n            panel_box(\n                ui.input_slider(\"days\", \"Simulation duration (days)\", 0, 200, value=60),\n                ui.input_slider(\n                    \"step_size\",\n                    \"Simulation time step (hours)\",\n                    0,\n                    24,\n                    value=4,\n                    step=0.5,\n                ),\n                ui.input_action_button(\n                    \"run\", \"Run simulation\", class_=\"btn-primary w-100\"\n                ),\n            ),\n            ui.navset_tab_card(\n                ui.nav(\n                    \"Earth\",\n                    ui.input_checkbox(\"earth\", \"Enable\", True),\n                    ui.panel_conditional(\n                        \"input.earth\",\n                        ui.input_numeric(\n                            \"earth_mass\",\n                            \"Mass (10^22 kg)\",\n                            597.216,\n                        ),\n                        ui.input_slider(\n                            \"earth_speed\",\n                            \"Speed (km/s)\",\n                            0,\n                            1,\n                            value=0.0126,\n                            step=0.001,\n                        ),\n                        ui.input_slider(\"earth_theta\", \"Angle (𝜃)\", 0, 360, value=270),\n                        ui.input_slider(\"earth_phi\", \"𝜙\", 0, 180, value=90),\n                    ),\n                ),\n                ui.nav(\n                    \"Moon\",\n                    ui.input_checkbox(\"moon\", \"Enable\", True),\n                    ui.panel_conditional(\n                        \"input.moon\",\n                        ui.input_numeric(\"moon_mass\", \"Mass (10^22 kg)\", 7.347),\n                        ui.input_slider(\n                            \"moon_speed\", \"Speed (km/s)\", 0, 2, value=1.022, step=0.001\n                        ),\n                        ui.input_slider(\"moon_theta\", \"Angle (𝜃)\", 0, 360, value=90),\n                        ui.input_slider(\"moon_phi\", \"𝜙\", 0, 180, value=90),\n                    ),\n                ),\n                ui.nav(\n                    \"Planet X\",\n                    ui.input_checkbox(\"planetx\", \"Enable\", False),\n                    ui.output_ui(\"planetx_controls\"),\n                    ui.panel_conditional(\n                        \"input.planetx\",\n                        ui.input_numeric(\"planetx_mass\", \"Mass (10^22 kg)\", 7.347),\n                        ui.input_slider(\n                            \"planetx_speed\",\n                            \"Speed (km/s)\",\n                            0,\n                            2,\n                            value=1.022,\n                            step=0.001,\n                        ),\n                        ui.input_slider(\"planetx_theta\", \"Angle (𝜃)\", 0, 360, 270),\n                        ui.input_slider(\"planetx_phi\", \"𝜙\", 0, 180, 90),\n                    ),\n                ),\n            ),\n        ),\n        ui.column(\n            8,\n            ui.output_plot(\"orbits\", width=\"500px\", height=\"500px\"),\n            ui.img(src=\"coords.png\", style=\"width: 100%; max-width: 250px;\"),\n        ),\n    ),\n)\n\n\ndef server(input, output, session):\n    def earth_body():\n        v = spherical_to_cartesian(\n            input.earth_theta(), input.earth_phi(), input.earth_speed()\n        )\n\n        return Body(\n            mass=input.earth_mass() * 10e21 * u.kg,\n            x_vec=np.array([0, 0, 0]) * u.km,\n            v_vec=np.array(v) * u.km / u.s,\n            name=\"Earth\",\n        )\n\n    def moon_body():\n        v = spherical_to_cartesian(\n            input.moon_theta(), input.moon_phi(), input.moon_speed()\n        )\n\n        return Body(\n            mass=input.moon_mass() * 10e21 * u.kg,\n            x_vec=np.array([3.84e5, 0, 0]) * u.km,\n            v_vec=np.array(v) * u.km / u.s,\n            name=\"Moon\",\n        )\n\n    def planetx_body():\n        v = spherical_to_cartesian(\n            input.planetx_theta(), input.planetx_phi(), input.planetx_speed()\n        )\n\n        return Body(\n            mass=input.planetx_mass() * 10e21 * u.kg,\n            x_vec=np.array([-3.84e5, 0, 0]) * u.km,\n            v_vec=np.array(v) * u.km / u.s,\n            name=\"Planet X\",\n        )\n\n    def simulation():\n        bodies = []\n        if input.earth():\n            bodies.append(earth_body())\n        if input.moon():\n            bodies.append(moon_body())\n        if input.planetx():\n            bodies.append(planetx_body())\n\n        simulation_ = Simulation(bodies)\n        simulation_.set_diff_eq(nbody_solve)\n\n        return simulation_\n\n    has_run = False\n\n    @output\n    @render.plot\n    @reactive.event(input.run, ignore_none=False)\n    def orbits():\n        return make_orbit_plot()\n\n    def make_orbit_plot():\n        sim = simulation()\n        n_steps = input.days() * 24 / input.step_size()\n        with ui.Progress(min=1, max=n_steps) as p:\n            sim.run(input.days() * u.day, input.step_size() * u.hr, progress=p)\n\n        sim_hist = sim.history\n        end_idx = len(sim_hist) - 1\n\n        fig = plt.figure()\n\n        ax = plt.axes(projection=\"3d\")\n\n        n_bodies = int(sim_hist.shape[1] / 6)\n        for i in range(0, n_bodies):\n            ax.scatter3D(\n                sim_hist[end_idx, i * 6],\n                sim_hist[end_idx, i * 6 + 1],\n                sim_hist[end_idx, i * 6 + 2],\n                s=50,\n            )\n            ax.plot3D(\n                sim_hist[:, i * 6],\n                sim_hist[:, i * 6 + 1],\n                sim_hist[:, i * 6 + 2],\n            )\n\n        ax.view_init(30, 20)\n        set_axes_equal(ax)\n\n        return fig\n\n\nwww_dir = Path(__file__).parent / \"www\"\napp = App(app_ui, server, static_assets=www_dir)\n\n\n# https://stackoverflow.com/a/31364297/412655\ndef set_axes_equal(ax):\n    \"\"\"Make axes of 3D plot have equal scale so that spheres appear as spheres,\n    cubes as cubes, etc..  This is one possible solution to Matplotlib's\n    ax.set_aspect('equal') and ax.axis('equal') not working for 3D.\n\n    Input\n      ax: a matplotlib axis, e.g., as output from plt.gca().\n    \"\"\"\n\n    x_limits = ax.get_xlim3d()\n    y_limits = ax.get_ylim3d()\n    z_limits = ax.get_zlim3d()\n\n    x_range = abs(x_limits[1] - x_limits[0])\n    x_middle = np.mean(x_limits)\n    y_range = abs(y_limits[1] - y_limits[0])\n    y_middle = np.mean(y_limits)\n    z_range = abs(z_limits[1] - z_limits[0])\n    z_middle = np.mean(z_limits)\n\n    # The plot bounding box is a sphere in the sense of the infinity\n    # norm, hence I call half the max range the plot radius.\n    plot_radius = 0.5 * max([x_range, y_range, z_range])\n\n    ax.set_xlim3d([x_middle - plot_radius, x_middle + plot_radius])\n    ax.set_ylim3d([y_middle - plot_radius, y_middle + plot_radius])\n    ax.set_zlim3d([z_middle - plot_radius, z_middle + plot_radius])\n",
            "type": "text"
          },
          {
            "name": "requirements.txt",
            "content": "astropy==5.1",
            "type": "text"
          },
          {
            "name": "simulation.py",
            "content": "from typing import Any\nimport numpy as np\nimport astropy.constants as c\nimport time\n\n# Adapted from Python for Astronomers: An Introduction to Scientific Computing\n# by Imad Pasha & Christopher Agostino\n# https://prappleizer.github.io/Tutorials/RK4/RK4_Tutorial.html\n\n# Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License\n# http://creativecommons.org/licenses/by-nc-sa/4.0/\n\n\nclass Body:\n    def __init__(self, mass, x_vec, v_vec, name=None, has_units=True):\n        \"\"\"\n        spawn instance of the Body class, which is used in Simulations.\n\n        :param: mass | mass of particle. if has_units=True, an Astropy Quantity, otherwise a float\n        :param: x_vec | a vector len(3) containing the x, y, z initial positions of the body.\n                     the array can be unitless if has_units=False, or be of the form np.array([0,0,0])*u.km\n        :param: v_vec | vector len(3) containing the v_x, v_y, v_z initial velocities of the body.\n        :param: name | string containing a name, used for plotting later\n        :param: has_units | defines how the code treats the problem, as unit-ed, or unitless.\n        \"\"\"\n        self.name = name\n        self.has_units = has_units\n        if self.has_units:\n            self.mass = mass.cgs\n            self.x_vec = x_vec.cgs.value\n            self.v_vec = v_vec.cgs.value\n        else:\n            self.mass = mass\n            self.x_vec = x_vec\n            self.v_vec = v_vec\n\n    def return_vec(self):\n        \"\"\"\n        Concatenates the x and v vector into 1 vector 'y' used in RK formalism.\n        \"\"\"\n        return np.concatenate((self.x_vec, self.v_vec))\n\n    def return_mass(self):\n        \"\"\"\n        handler to strip the mass units if present (after converting to cgs) or return float\n        \"\"\"\n        if self.has_units:\n            return self.mass.cgs.value\n        else:\n            return self.mass\n\n    def return_name(self):\n        return self.name\n\n\nclass Simulation:\n    def __init__(self, bodies, has_units=True):\n        \"\"\"\n        Initializes instance of Simulation object.\n        -------------------------------------------\n        Params:\n            bodies (list): a list of Body() objects\n            has_units (bool): set whether bodies entered have units or not.\n        \"\"\"\n        self.has_units = has_units\n        self.bodies = bodies\n        self.N_bodies = len(self.bodies)\n        self.nDim = 6.0\n        self.quant_vec = np.concatenate(np.array([i.return_vec() for i in self.bodies]))\n        self.mass_vec = np.array([i.return_mass() for i in self.bodies])\n        self.name_vec = [i.return_name() for i in self.bodies]\n\n    def set_diff_eq(self, calc_diff_eqs, **kwargs):\n        \"\"\"\n        Method which assigns an external solver function as the diff-eq solver for RK4.\n        For N-body or gravitational setups, this is the function which calculates accelerations.\n        ---------------------------------\n        Params:\n            calc_diff_eqs: A function which returns a [y] vector for RK4\n            **kwargs: Any additional inputs/hyperparameters the external function requires\n        \"\"\"\n        self.diff_eq_kwargs = kwargs\n        self.calc_diff_eqs = calc_diff_eqs\n\n    def rk4(self, t, dt):\n        \"\"\"\n        RK4 integrator. Calculates the K values and returns a new y vector\n        --------------------------------\n        Params:\n            t: a time. Only used if the diff eq depends on time (gravity doesn't).\n            dt: timestep. Non adaptive in this case\n        \"\"\"\n        k1 = dt * self.calc_diff_eqs(\n            t, self.quant_vec, self.mass_vec, **self.diff_eq_kwargs\n        )\n        k2 = dt * self.calc_diff_eqs(\n            t + 0.5 * dt,\n            self.quant_vec + 0.5 * k1,\n            self.mass_vec,\n            **self.diff_eq_kwargs,\n        )\n        k3 = dt * self.calc_diff_eqs(\n            t + 0.5 * dt,\n            self.quant_vec + 0.5 * k2,\n            self.mass_vec,\n            **self.diff_eq_kwargs,\n        )\n        k4 = dt * self.calc_diff_eqs(\n            t + dt, self.quant_vec + k2, self.mass_vec, **self.diff_eq_kwargs\n        )\n\n        y_new = self.quant_vec + ((k1 + 2 * k2 + 2 * k3 + k4) / 6.0)\n\n        return y_new\n\n    def run(self, T, dt, t0=0, progress=None):\n        \"\"\"\n        Method which runs the simulation on a given set of bodies.\n        ---------------------\n        Params:\n            T: total time (in simulation units) to run the simulation. Can have units or not, just set has_units appropriately.\n            dt: timestep (in simulation units) to advance the simulation. Same as above\n            t0 (optional): set a non-zero start time to the simulation.\n            progress (optional): A shiny.ui.Progress object which will be used to send progress updates.\n\n        Returns:\n            None, but leaves an attribute history accessed via\n            'simulation.history' which contains all y vectors for the simulation.\n            These are of shape (Nstep,Nbodies * 6), so the x and y positions of particle 1 are\n            simulation.history[:,0], simulation.history[:,1], while the same for particle 2 are\n            simulation.history[:,6], simulation.history[:,7]. Velocities are also extractable.\n        \"\"\"\n        if not hasattr(self, \"calc_diff_eqs\"):\n            raise AttributeError(\"You must set a diff eq solver first.\")\n        if self.has_units:\n            try:\n                _ = t0.unit\n            except:\n                t0 = (t0 * T.unit).cgs.value\n            T = T.cgs.value\n            dt = dt.cgs.value\n\n        self.history: Any = [self.quant_vec]\n        clock_time = t0\n        nsteps = int((T - t0) / dt)\n        start_time = time.time()\n        for step in range(nsteps):\n            if progress is not None and step % 5 == 0:\n                progress.set(\n                    step,\n                    message=f\"Integrating step = {step} / {nsteps}\",\n                    detail=f\"Elapsed time = {round(clock_time/1e6, 1)}\",\n                )\n            y_new = self.rk4(0, dt)\n            self.history.append(y_new)\n            self.quant_vec = y_new\n            clock_time += dt\n        runtime = time.time() - start_time\n        self.history = np.array(self.history)\n\n\ndef nbody_solve(t, y, masses):\n    N_bodies = int(len(y) / 6)\n    solved_vector = np.zeros(y.size)\n    for i in range(N_bodies):\n        ioffset = i * 6\n        for j in range(N_bodies):\n            joffset = j * 6\n            solved_vector[ioffset] = y[ioffset + 3]\n            solved_vector[ioffset + 1] = y[ioffset + 4]\n            solved_vector[ioffset + 2] = y[ioffset + 5]\n            if i != j:\n                dx = y[ioffset] - y[joffset]\n                dy = y[ioffset + 1] - y[joffset + 1]\n                dz = y[ioffset + 2] - y[joffset + 2]\n                r = (dx**2 + dy**2 + dz**2) ** 0.5\n                ax = (-c.G.cgs * masses[j] / r**3) * dx\n                ay = (-c.G.cgs * masses[j] / r**3) * dy\n                az = (-c.G.cgs * masses[j] / r**3) * dz\n                ax = ax.value\n                ay = ay.value\n                az = az.value\n                solved_vector[ioffset + 3] += ax\n                solved_vector[ioffset + 4] += ay\n                solved_vector[ioffset + 5] += az\n    return solved_vector\n\n\ndef spherical_to_cartesian(\n    theta: float, phi: float, rho: float\n) -> tuple[float, float, float]:\n    x = rho * sind(phi) * cosd(theta)\n    y = rho * sind(phi) * sind(theta)\n    z = rho * cosd(phi)\n    return (x, y, z)\n\n\ndef cosd(x):\n    return np.cos(x / 180 * np.pi)\n\n\ndef sind(x):\n    return np.sin(x / 180 * np.pi)\n",
            "type": "text"
          },
          {
            "name": "www/coords.png",
            "content": "",
            "type": "binary"
          }
        ]
      },
      {
        "title": "Regularization",
        "about": "Regularization strength and coefficient estimates",
        "files": [
          {
            "name": "app.py",
            "content": "## By Chelsea Parlett Pelleriti\n\nfrom shiny import *\n\n# Import modules for plot rendering\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n\n# Import modules for modeling\nimport pandas as pd\nfrom sklearn.linear_model import LinearRegression, Ridge, Lasso, ElasticNet\n\n# Import custom Python Functions from local file\nfrom compare import compare, sim_data\n\n\n# data\nnsims = 100\nsim = [sim_data(n=1000) for i in range(0, nsims)]\n\n\n# app\napp_ui = ui.page_fluid(\n    # add head that allows LaTeX to be displayed via MathJax\n    ui.head_content(\n        ui.tags.script(\n            src=\"https://mathjax.rstudio.com/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML\"\n        ),\n        ui.tags.script(\n            \"if (window.MathJax) MathJax.Hub.Queue(['Typeset', MathJax.Hub]);\"\n        ),\n    ),\n    # Title\n    ui.h1(\"How Does Regularization Strength Affect Coefficient Estimates?\"),\n    # input slider\n    ui.input_slider(\"a\", \"Regularization Strength\", 0.000000001, 1, 0.1, step=0.01),\n    ui.p(\n        \"Warning: each time you change the slider input, the simulation will take some time to run.\"\n    ),\n    # output plot\n    ui.output_plot(\"plot\"),\n    # Explanation and Explore text row with two equal-width columns\n    ui.row(\n        ui.column(\n            6,\n            ui.h4(\"Explanation\"),\n            ui.p(\n                \"\"\"\n                When we train Machine Learning models like linear regressions, logistic\n                regressions, or neural networks, we do so by defining a loss function\n                and minimizing that loss function. A loss function is a metric for\n                measuring how your model is performing where lower is better. For\n                example, Mean Squared Error is a loss function that measures the squared\n                distance (on average) between a model's guesses and the true values.\"\"\"\n            ),\n            # LaTeX\n            ui.p(\"$$MSE = \\\\frac{1}{n} \\\\sum_{i=1}^{n} (Y_i - \\hat{Y}_i)^2$$\"),\n            ui.p(\n                \"\"\"\n                Regularization works by adding a penalty to the loss function in order\n                to penalize large model parameters. In Linear Regression, the penalty\n                increases when the size of the coefficients increases. Because the loss\n                function is made up of two things: the original loss function (the MSE,\n                here) and the penalty, predictors must 'pull their weight' by reducing\n                the MSE enough to be 'worth' the penalty. This causes small, unimportant\n                predictors to have small or zero coefficients.\"\"\"\n            ),\n            ui.p(\n                \"\"\"\n                LASSO (L1) and Ridge (L2) are two common forms of Regularization. LASSO\n                adds a penalty to the loss function by taking the absolute value of each\n                parameter/coefficient, and adding them all together. Ridge adds a\n                penalty to the loss function by taking the square of each\n                parameter/coefficient, and adding them all together.\"\"\"\n            ),\n            # LaTeX\n            ui.p(\n                \"$$LASSO = \\\\frac{1}{n} \\\\sum_{i=1}^{n} (Y_i - \\hat{Y}_i)^2 + \\\\lambda \\\\underbrace{\\\\sum_{j=1}^{p} |\\\\beta_j|}_\\\\text{penalty}$$\"\n            ),\n            ui.p(\n                \"$$Ridge = \\\\frac{1}{n} \\\\sum_{i=1}^{n} (Y_i - \\hat{Y}_i)^2 + \\\\lambda \\\\underbrace{\\\\sum_{j=1}^{p} \\\\beta_j^2}_\\\\text{penalty}$$\"\n            ),\n            ui.p(\n                \"\"\"\n                When using regularization, we must choose the regularization strength\n                (see slider above) which is a number that scales how harshly we\n                penalize. If we multiply the penalty by 0, that's the same as not having\n                a penalty at all. But if we multiply the penalty by 500, that would\n                penalize the parameters a lot more.\"\"\"\n            ),\n            ui.p(\"$$\\\\lambda \\\\text{ is the regularization strength.}$$\"),\n        ),\n        ui.column(\n            6,\n            ui.h4(\"Explore\"),\n            ui.h5(\"Comparing LASSO, Ridge, and Linear Regression\"),\n            ui.p(\n                \"\"\"\n                With the slider at 0.1 (the default) look at the boxplot at the top of\n                the page. This shows the coefficients from 1000 simulated data sets. For\n                each data set the 'vowels' (A, E, I, O, U, Y, W) do have some\n                relationship with the outcome (X) that our model is predicting. A has\n                the largest effect then E, I, O, U, Y and finally W has the smallest\n                effect on X. The Consonants (B,C,D,G,H,J,K) have absolutely no effect on\n                X.\"\"\"\n            ),\n            ui.p(\"Look at the Graph and ask yourself these questions:\"),\n            ui.tags.ul(\n                ui.tags.li(\n                    \"\"\"\n                        Which model (Linear, LASSO, Ridge) tends to have the highest\n                        coefficients? What does this tell you about the various\n                        penalties each model has?\"\"\"\n                ),\n                ui.tags.li(\n                    \"\"\"\n                        What happens to the LASSO coefficients for the Consonant\n                        predictors (B-K) which have no real effect on X?\"\"\"\n                ),\n                ui.tags.li(\n                    \"\"\"\n                        The Linear and Ridge Coefficients look similar for the\n                        Consonants (B-K) but what's slightly different between them?\n                        What does that tell you about what Ridge penalties do?\"\"\"\n                ),\n                ui.tags.li(\n                    \"\"\"\n                        Are the larger effects (A-I) affected differently than the\n                        smaller effects (O-W) when you increase the Regularization\n                        Strength?\"\"\"\n                ),\n            ),\n            ui.h5(\"Comparing Different Regularization Strengths\"),\n            ui.p(\n                \"\"\"\n                Now, using the slider at the top of the page, change the Regularization\n                Strength. Try values that are very low, moderate, and very high.\"\"\"\n            ),\n            ui.p(\"Look at the Graph and ask yourself these questions:\"),\n            ui.tags.ul(\n                ui.tags.li(\n                    \"\"\"\n                    What happens to the LASSO and Ridge models when the Regularization\n                    Strength is almost 0?\"\"\"\n                ),\n                ui.tags.li(\n                    \"\"\"\n                    What happens to the LASSO model's coefficients when the\n                    Regularization Strength is very high?\"\"\"\n                ),\n                ui.tags.li(\n                    \"\"\"\n                    Do the Linear Regression coefficients change when you change\n                    Regularization Strength? (if so, why, if not, why not?)\"\"\"\n                ),\n            ),\n        ),\n    ),\n    # output plots separated by real effects (vowels), and zero-effects (consonants)\n    ui.h3(\"Plots Separated by Vowels and Consonants\"),\n    ui.output_plot(\"plotVOWELS\"),\n    ui.output_plot(\"plotCONSONANTS\"),\n)\n\n\ndef server(input: Inputs, output: Outputs, session: Session):\n\n    # reactive Calc that runs LASSO, Ridge, and Linear models on generated data\n    @reactive.Calc\n    def models():\n        sim_alpha = [compare(df, alpha=input.a()) for df in sim]\n        sim_alpha = pd.concat(sim_alpha)\n\n        return sim_alpha\n\n    # output plot of all simulation coefficients\n    @output\n    @render.plot()\n    def plot():\n        # get data from reactive Calc\n        sim_alpha = models()\n\n        # create plot and manage aesthetics\n        fig, ax = plt.subplots()\n        ax2 = sns.boxplot(\n            x=\"conames\",\n            y=\"coefs\",\n            hue=\"model\",\n            data=sim_alpha,\n            ax=ax,\n            order=[\n                \"A\",\n                \"E\",\n                \"I\",\n                \"O\",\n                \"U\",\n                \"Y\",\n                \"W\",\n                \"B\",\n                \"C\",\n                \"D\",\n                \"G\",\n                \"H\",\n                \"J\",\n                \"K\",\n            ],\n        )\n        tt = \"Coefficient Estimates when alpha = \" + str(input.a())\n        ax2.set(xlabel=\"\", ylabel=\"Coefficient Value\", title=tt)\n        return fig\n\n    # output plot of all simulation coefficients (vowels only)\n    @output\n    @render.plot()\n    def plotVOWELS():\n        # get data from reactive Calc\n        sim_alpha = models()\n        vowels = [n in [\"A\", \"E\", \"I\", \"O\", \"U\", \"Y\", \"W\"] for n in sim_alpha.conames]\n        sim_alpha_V = sim_alpha.loc[vowels]\n\n        # create plot and manage aesthetics\n        fig, ax = plt.subplots()\n        ax2 = sns.boxplot(\n            x=\"conames\",\n            y=\"coefs\",\n            hue=\"model\",\n            data=sim_alpha_V,\n            ax=ax,\n            order=[\"A\", \"E\", \"I\", \"O\", \"U\", \"Y\", \"W\"],\n        )\n        tt = \"VOWEL Coefficient Estimates when alpha = \" + str(input.a())\n        ax2.set(xlabel=\"\", ylabel=\"Coefficient Value\", title=tt)\n        return fig\n\n    # output plot of all simulation coefficients (consonants only)\n    @output\n    @render.plot()\n    def plotCONSONANTS():\n        # get data from reactive Calc\n        sim_alpha = models()\n\n        consonants = [\n            n in [\"B\", \"C\", \"D\", \"G\", \"H\", \"J\", \"K\"] for n in sim_alpha.conames\n        ]\n        sim_alpha_C = sim_alpha.loc[consonants]\n\n        # create plot and manage aesthetics\n        fig, ax = plt.subplots()\n        ax2 = sns.boxplot(\n            x=\"conames\",\n            y=\"coefs\",\n            hue=\"model\",\n            data=sim_alpha_C,\n            ax=ax,\n            order=[\"B\", \"C\", \"D\", \"G\", \"H\", \"J\", \"K\"],\n        )\n        tt = \"CONSONANT Coefficient Estimates when alpha = \" + str(input.a())\n        ax2.set(xlabel=\"\", ylabel=\"Coefficient Value\", title=tt)\n        return fig\n\n\napp = App(app_ui, server)\n",
            "type": "text"
          },
          {
            "name": "compare.py",
            "content": "import numpy as np\nimport pandas as pd\nfrom sklearn.linear_model import LinearRegression, Ridge, Lasso, ElasticNet\n\n# define functions\ndef sim_data(n=1000):\n    # Real Variables\n    A = np.random.normal(0, 1, n)\n    E = np.random.normal(0, 1, n)\n    I = np.random.normal(0, 1, n)\n    O = np.random.normal(0, 1, n)\n    U = np.random.normal(0, 1, n)\n    Y = np.random.normal(0, 1, n)\n    W = np.random.normal(0, 1, n)\n\n    # Unrelated Variables\n    B = np.random.normal(0, 1, n)\n    C = np.random.normal(0, 1, n)\n    D = np.random.normal(0, 1, n)\n    G = np.random.normal(0, 1, n)\n    H = np.random.normal(0, 1, n)\n    J = np.random.normal(0, 1, n)\n    K = np.random.normal(0, 1, n)\n\n    # coefficients\n    a = 12.34\n    e = 8.23\n    i = 7.83\n    o = 5.12\n    u = 3.48\n    y = 2.97\n    w = 1.38\n\n    # Outcome\n    X = (\n        100\n        + A * a\n        + E * e\n        + I * i\n        + O * o\n        + U * u\n        + Y * y\n        + W * w\n        + np.random.normal(0, 15, n)\n    )\n\n    X = (X - np.mean(X)) / np.std(X)  # z-score X\n    # the other variables already have a mean of 0 and sd of 1\n\n    # Data Frame\n    df = pd.DataFrame(\n        {\n            \"A\": A,\n            \"E\": E,\n            \"I\": I,\n            \"O\": O,\n            \"U\": U,\n            \"B\": B,\n            \"C\": C,\n            \"D\": D,\n            \"G\": G,\n            \"H\": H,\n            \"J\": J,\n            \"K\": K,\n            \"Y\": Y,\n            \"W\": W,\n            \"X\": X,\n        }\n    )\n    return df\n\n\ndef compare(df, alpha=1):\n    feat = [\"A\", \"B\", \"C\", \"D\", \"E\", \"G\", \"H\", \"I\", \"O\", \"U\", \"J\", \"K\", \"Y\", \"W\"]\n\n    # linear\n    lr = LinearRegression()\n    lr.fit(df[feat], df[\"X\"])\n    lr_co = lr.coef_\n\n    # lasso\n    lasso = Lasso(alpha=alpha, fit_intercept=True, tol=0.0000001, max_iter=100000)\n    lasso.fit(df[feat], df[\"X\"])\n    lasso_co = lasso.coef_\n\n    # ridge\n    ridge = Ridge(\n        alpha=df.shape[0] * alpha, fit_intercept=True, tol=0.0000001, max_iter=100000\n    )\n    ridge.fit(df[feat], df[\"X\"])\n    ridge_co = ridge.coef_\n\n    conames = feat * 3\n    coefs = np.concatenate([lr_co, lasso_co, ridge_co])\n\n    model = np.repeat(\n        np.array([\"Linear\", \"LASSO\", \"Ridge\"]),\n        [len(feat), len(feat), len(feat)],\n        axis=0,\n    )\n\n    df = pd.DataFrame({\"conames\": conames, \"coefs\": coefs, \"model\": model})\n\n    return df\n",
            "type": "text"
          }
        ]
      },
      {
        "title": "Wordle",
        "about": "A clone of Wordle",
        "files": [
          {
            "name": "app.py",
            "content": "# pyright: strict\n# pyright: reportUnusedFunction=false\n\nimport random\nfrom dataclasses import dataclass\nfrom pathlib import Path\nfrom typing import cast\nfrom typing_extensions import Literal\n\nfrom shiny import App, Inputs, Outputs, Session, reactive, render, ui\nfrom shiny.ui import TagList, div, h3, head_content, tags\n\nimport words\n\n# The state of each key on the keyboard.\nLetterMatch = Literal[\"correct\", \"in-word\", \"not-in-word\"]\n\n# Information about each guess made by the player.\n@dataclass(init=True)\nclass GuessInfo:\n    word: str\n    letters: list[str]\n    match_types: list[LetterMatch]\n    win: bool\n\n\napp_ui = ui.page_fluid(\n    head_content(\n        tags.meta(name=\"viewport\", content=\"width=device-width, initial-scale=1.0\"),\n        tags.style((Path(__file__).parent / \"style.css\").read_text()),\n    ),\n    div(\n        h3(\"Shiny Wordle\"),\n        ui.output_ui(\"previous_guesses\"),\n        ui.output_ui(\"current_guess\"),\n        ui.output_ui(\"endgame\"),\n        ui.output_ui(\"new_game_ui\"),\n        class_=\"guesses\",\n    ),\n    ui.output_ui(\"keyboard\"),\n    # div(input_checkbox(\"hard\", \"Hard mode\"), style=\"display: inline-block;\"),\n    tags.script(\n        \"\"\"\n    const letters = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M',\n                     'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\n    const all_key_ids = [ ...letters, 'Enter', 'Back'];\n    document.addEventListener('keydown', function(e) {\n      let key = e.code.replace(/^Key/, '');\n      if (letters.includes(key)) {\n        document.getElementById(key).click();\n      } else if (key == 'Enter') {\n        document.getElementById('Enter').click();\n      } else if (key == 'Backspace') {\n        document.getElementById('Back').click();\n      }\n    });\n\n    // For better responsiveness on touch devices, trigger a click on the button\n    // when a touchstart event occurs; don't wait for the touchend event. So\n    // that a click event doesn't happen when the touchend event happens (and\n    // cause the letter to be typed a second time), we set the 'pointer-events'\n    // CSS property to 'none' on the button. Then when there's _any_ touchend\n    // event, unset the 'pointer-events' CSS property on all of the buttons, so\n    // that the button can be touched again.\n    let in_button_touch = false;\n    document.addEventListener('touchstart', function(e) {\n        if (all_key_ids.includes(e.target.id)) {\n            e.target.click();\n            e.target.style.pointerEvents = 'none';\n            e.preventDefault();   // Disable text selection\n            in_button_touch = true;\n        }\n    });\n    document.addEventListener('touchend', function(e) {\n        all_key_ids.map((id) => {\n            document.getElementById(id).style.pointerEvents = null;\n        });\n        if (in_button_touch) {\n            if (all_key_ids.includes(e.target.id)) {\n                // Disable text selection and triggering of click event.\n                e.preventDefault();\n            }\n            in_button_touch = false;\n        }\n    });\n    \"\"\"\n    ),\n    title=\"Shiny Wordle\",\n)\n\n\n# This subclass of Inputs is used to help the static type checker.\nclass ShinyInputs(Inputs):\n    Enter: reactive.Value[int]\n    Back: reactive.Value[int]\n    new_game: reactive.Value[int]\n    hard: reactive.Value[bool]\n\n\ndef server(input: Inputs, output: Outputs, session: Session):\n    # Treat `input` as a ShinyInputs object, for the static type checker.\n    input = cast(ShinyInputs, input)\n\n    # These reactive.Values represent the current state of the game.\n    target_word = reactive.Value[str]()\n    all_guesses = reactive.Value[list[GuessInfo]]()\n    game_has_ended = reactive.Value[bool]()\n    current_guess_letters = reactive.Value[list[str]]()\n\n    def reset_game():\n        target_word.set(random.choice(tuple(words.targets)))\n        all_guesses.set([])\n        game_has_ended.set(False)\n        current_guess_letters.set([])\n\n    reset_game()\n\n    # ==========================================================================\n    # UI displaying guesses\n    # ==========================================================================\n    @output\n    @render.ui\n    def previous_guesses() -> TagList:\n        res = TagList()\n        for guess in all_guesses():\n            letters = guess.letters\n\n            row = div(class_=\"word\")\n            for i in range(len(letters)):\n                match = guess.match_types[i]\n                row.children.append(div(letters[i].upper(), class_=\"letter \" + match))\n            res.append(row)\n\n        # Add JS code to scroll to bottom\n        scroll_js = \"\"\"\n            document.querySelector('.guesses')\n              .scrollTo(0, document.querySelector('.guesses').scrollHeight);\n        \"\"\"\n        res.append(tags.script(scroll_js))\n\n        return res\n\n    @output\n    @render.ui\n    @reactive.event(current_guess_letters, game_has_ended)\n    def current_guess():\n        if game_has_ended():\n            return\n\n        letters = current_guess_letters().copy()\n\n        # Fill in blanks for letters up to length of target word. If letters is:\n        #   \"a\" \"r\"\n        # then result is:\n        #   \"a\" \"r\" \"\" \"\" \"\"\n        target_length = len(target_word())\n        for _i in range(target_length - len(letters)):\n            letters.append(\"\")\n\n        res = div(class_=\"word\")\n        for i in range(target_length):\n            res.children.append(div(letters[i].upper(), class_=\"letter guess\"))\n\n        return res\n\n    @reactive.Calc\n    def used_letters() -> dict[str, LetterMatch]:\n        # This is a dictionary. The structure will be something like:\n        # {\"p\": \"not-in-word\", \"a\": \"in-word\", \"e\": \"correct\")\n        letter_matches: dict[str, LetterMatch] = {}\n\n        # Populate `letter_matches` by iterating over all letters in all the guesses.\n        for guess in all_guesses():\n            for i in range(len(guess.letters)):\n                letter = guess.letters[i]\n                match_type = guess.match_types[i]\n                if letter not in letter_matches:\n                    # If there isn't an existing entry for that letter, just use it.\n                    letter_matches[\"letter\"] = match_type\n                else:\n                    prev_match_type = letter_matches[\"letter\"]\n                    if match_type == \"correct\" and prev_match_type in [\n                        \"not-in-word\",\n                        \"in-word\",\n                    ]:\n                        # If an entry is already present, it can be \"upgraded\":\n                        # \"not-in-word\" < \"in-word\" < \"correct\"\n                        letter_matches[letter] = match_type\n                    elif match_type == \"in-word\" and prev_match_type in [\"not-in-word\"]:\n                        letter_matches[letter] = match_type\n\n        return letter_matches\n\n    # ==========================================================================\n    # Keyboard input\n    # ==========================================================================\n    keys = [\n        [\"Q\", \"W\", \"E\", \"R\", \"T\", \"Y\", \"U\", \"I\", \"O\", \"P\"],\n        [\"A\", \"S\", \"D\", \"F\", \"G\", \"H\", \"J\", \"K\", \"L\"],\n        [\"Enter\", \"Z\", \"X\", \"C\", \"V\", \"B\", \"N\", \"M\", \"Back\"],\n    ]\n\n    @output\n    @render.ui\n    def keyboard():\n        prev_match_type = used_letters()\n        keyboard_div = div(class_=\"keyboard\")\n        for row_keys in keys:\n            row_div = div(class_=\"keyboard-row\")\n            for key in row_keys:\n                class_ = \"key\"\n                if key.lower() in prev_match_type:\n                    class_ += \" \" + prev_match_type[key.lower()]\n                if key in [\"Enter\", \"Back\"]:\n                    class_ += \" wide-key\"\n\n                key_button = ui.input_action_button(key, key)\n                key_button.attrs.update(class_=key_button.attrs[\"class\"] + \" \" + class_)\n                row_div.children.append(key_button)\n\n            keyboard_div.children.append(row_div)\n\n        return keyboard_div\n\n    @reactive.Effect\n    @reactive.event(input.Back)  # Take a dependency on the Back button\n    def _():\n        if game_has_ended():\n            return\n        current_letters = current_guess_letters().copy()\n        if len(current_letters) > 0:\n            current_letters.pop()\n            current_guess_letters.set(current_letters)\n\n    @reactive.Effect\n    @reactive.event(input.Enter)  # Take a dependency on the Enter button\n    def _():\n        if game_has_ended():\n            return\n\n        guess = \"\".join(current_guess_letters())\n\n        if guess not in words.all:\n            return\n\n        # if input[\"hard\"]:\n        #     # Letters in the target word that the player has previously\n        #     # guessed correctly.\n        #     matched_letters = used_letters().intersection(set(target_word()))\n        #     if not set(guess).issuperset(matched_letters):\n        #         return\n\n        check_result = check_word(guess, target_word())\n\n        # This copy is needed because the list is returned by reference, and is a\n        # mutable object. If we didn't copy it and simply assigned it back to\n        # all_guesses, then it wouldn't invalidate anything that depends on all_guesses.\n        all_guesses_new: list[GuessInfo] = all_guesses().copy()\n        all_guesses_new.append(check_result)\n        all_guesses.set(all_guesses_new)\n\n        if check_result.win:\n            game_has_ended.set(True)\n\n        current_guess_letters.set([])\n\n    # ==========================================================================\n    # Create observers to listen to each possible keypress\n    # ==========================================================================\n    def make_key_listener(key: str):\n        @reactive.Effect\n        @reactive.event(input[key])\n        def _():\n            if game_has_ended():\n                return\n\n            cur_letters = current_guess_letters().copy()\n            if len(cur_letters) >= len(target_word()):\n                return\n            cur_letters.append(key.lower())\n            current_guess_letters.set(cur_letters)\n\n    for keyboard_row in keys:\n        for key in keyboard_row:\n            if key == \"Enter\" or key == \"Back\":\n                pass\n            else:\n                make_key_listener(key)\n\n    # ==========================================================================\n    # Endgame dialog\n    # ==========================================================================\n    @output\n    @render.ui\n    @reactive.event(game_has_ended)\n    def endgame():\n        if not game_has_ended():\n            return tags.script(\n                \"\"\"\n                document.querySelector('.guesses').classList.remove('finished');\n                \"\"\"\n            )\n\n        res = div(class_=\"endgame-content\")\n        res.append(\n            tags.script(\n                \"\"\"\n                document.querySelector('.guesses').classList.add('finished');\n                \"\"\"\n            )\n        )\n\n        for guess in all_guesses():\n            line_text = \"\"\n            for match in guess.match_types:\n                if match == \"correct\":\n                    line_text += \"🟩\"\n                elif match == \"in-word\":\n                    line_text += \"🟨\"\n                elif match == \"not-in-word\":\n                    line_text += \"⬜\"\n            res.children.append(div(line_text))\n        return res\n\n    # ==========================================================================\n    # New game button\n    # ==========================================================================\n    @output\n    @render.ui\n    def new_game_ui():\n        if game_has_ended():\n            return ui.input_action_button(\"new_game\", \"New Game\")\n\n    @reactive.Effect\n    @reactive.event(input.new_game)\n    def _():\n        reset_game()\n\n\napp = App(app_ui, server, debug=False)\n\n\ndef check_word(guess_str: str, target_str: str) -> GuessInfo:\n    guess = list(guess_str)\n    target = list(target_str)\n    remaining: list[str] = []\n\n    if len(guess) != len(target):\n        raise Exception(\"Word lengths don't match.\")\n\n    result: list[LetterMatch] = [\"not-in-word\"] * len(guess)\n\n    # First pass: find matches in correct position. Letters in the target that do not\n    # match the guess are added to the remaining list.\n    for i in range(len(guess)):\n        if guess[i] == target[i]:\n            result[i] = \"correct\"\n        else:\n            remaining.append(target[i])\n\n    # Second pass: find matches in remaining letters, using them up as we find matches\n    # in the guess.\n    for i in range(len(guess)):\n        if guess[i] != target[i] and guess[i] in remaining:\n            result[i] = \"in-word\"\n            remaining.remove(guess[i])\n\n    return GuessInfo(\n        word=guess_str,\n        letters=guess,\n        match_types=result,\n        win=all(x == \"correct\" for x in result),\n    )\n",
            "type": "text"
          },
          {
            "name": "style.css",
            "content": ".container-fluid {\n  text-align: center;\n  height: calc(100vh - 30px);\n  display: grid;\n  grid-template-rows: 1fr auto;\n}\n.guesses {\n  overflow-y: auto;\n  height: 100%;\n}\n.guesses.finished {\n  overflow-y: visible;\n}\n.guesses .word {\n  margin: 5px;\n}\n.guesses .word > .letter {\n  display: inline-block;\n  width: 50px;\n  height: 50px;\n  text-align: center;\n  vertical-align: middle;\n  border-radius: 3px;\n  line-height: 50px;\n  font-size: 32px;\n  font-weight: bold;\n  vertical-align: middle;\n  user-select: none;\n  color: white;\n  font-family: \"Clear Sans\", \"Helvetica Neue\", Arial, sans-serif;\n}\n.guesses .word > .correct {\n  background-color: #6a5;\n}\n.guesses .word > .in-word {\n  background-color: #db5;\n}\n.guesses .word > .not-in-word {\n  background-color: #888;\n}\n.guesses .word > .guess {\n  color: black;\n  background-color: white;\n  border: 1px solid black;\n}\n.keyboard {\n  height: 240px;\n  user-select: none;\n}\n.keyboard .keyboard-row {\n  margin: 3px;\n}\n.keyboard .keyboard-row .key {\n  display: inline-block;\n  padding: 0;\n  width: 30px;\n  height: 50px;\n  text-align: center;\n  vertical-align: middle;\n  border-radius: 3px;\n  line-height: 50px;\n  font-size: 18px;\n  font-weight: bold;\n  vertical-align: middle;\n  color: black;\n  font-family: \"Clear Sans\", \"Helvetica Neue\", Arial, sans-serif;\n  background-color: #ddd;\n  touch-action: none;\n}\n.keyboard .keyboard-row .key:focus {\n  outline: none;\n}\n.keyboard .keyboard-row .key.wide-key {\n  font-size: 15px;\n  width: 50px;\n}\n.keyboard .keyboard-row .key.correct {\n  background-color: #6a5;\n  color: white;\n}\n.keyboard .keyboard-row .key.in-word {\n  background-color: #db5;\n  color: white;\n}\n.keyboard .keyboard-row .key.not-in-word {\n  background-color: #888;\n  color: white;\n}\n.endgame-content {\n  font-family: Helvetica, Arial, sans-serif;\n  display: inline-block;\n  line-height: 1.4;\n  letter-spacing: 0.2em;\n  margin: 20px 8px;\n  width: fit-content;\n  padding: 20px;\n  border-radius: 5px;\n  box-shadow: 4px 4px 19px rgb(0 0 0 / 17%);\n}\n",
            "type": "text"
          },
          {
            "name": "words.py",
            "content": "# `all` are all words, from http://www.poslarchive.com/math/scrabble/lists/common-5.html\n\n# fmt: off\ntargets = {\n\"aback\",\n\"abate\",\n\"abbey\",\n\"abbot\",\n\"abhor\",\n\"abide\",\n\"abode\",\n\"abort\",\n\"about\",\n\"above\",\n\"abuse\",\n\"abyss\",\n\"ached\",\n\"aches\",\n\"acids\",\n\"acorn\",\n\"acres\",\n\"acrid\",\n\"acted\",\n\"actor\",\n\"acute\",\n\"adage\",\n\"adapt\",\n\"added\",\n\"adder\",\n\"admit\",\n\"adobe\",\n\"adopt\",\n\"adore\",\n\"adorn\",\n\"adult\",\n\"aegis\",\n\"aeons\",\n\"affix\",\n\"afoot\",\n\"after\",\n\"again\",\n\"agate\",\n\"agave\",\n\"agent\",\n\"agile\",\n\"aging\",\n\"agony\",\n\"agree\",\n\"ahead\",\n\"ahold\",\n\"aided\",\n\"aides\",\n\"ailed\",\n\"aimed\",\n\"aioli\",\n\"aisle\",\n\"alarm\",\n\"album\",\n\"alder\",\n\"aleph\",\n\"alert\",\n\"algae\",\n\"alias\",\n\"alibi\",\n\"alien\",\n\"align\",\n\"alike\",\n\"alive\",\n\"allay\",\n\"alley\",\n\"allot\",\n\"allow\",\n\"alloy\",\n\"aloft\",\n\"aloha\",\n\"alone\",\n\"along\",\n\"aloof\",\n\"aloud\",\n\"alpha\",\n\"altar\",\n\"alter\",\n\"amass\",\n\"amaze\",\n\"amber\",\n\"amend\",\n\"amino\",\n\"amiss\",\n\"among\",\n\"ample\",\n\"amuse\",\n\"angel\",\n\"anger\",\n\"angle\",\n\"angry\",\n\"anime\",\n\"ankle\",\n\"annex\",\n\"annoy\",\n\"annul\",\n\"anode\",\n\"antsy\",\n\"anvil\",\n\"aorta\",\n\"apace\",\n\"apart\",\n\"aphid\",\n\"apnea\",\n\"apple\",\n\"apply\",\n\"apron\",\n\"arbor\",\n\"ardor\",\n\"arena\",\n\"argue\",\n\"arise\",\n\"armed\",\n\"armor\",\n\"aroma\",\n\"arose\",\n\"array\",\n\"arrow\",\n\"arson\",\n\"artsy\",\n\"ascot\",\n\"ashen\",\n\"ashes\",\n\"aside\",\n\"asked\",\n\"askew\",\n\"aspen\",\n\"assay\",\n\"asset\",\n\"atlas\",\n\"atoll\",\n\"atoms\",\n\"atone\",\n\"attic\",\n\"audio\",\n\"audit\",\n\"auger\",\n\"aught\",\n\"auras\",\n\"avail\",\n\"avers\",\n\"avert\",\n\"avian\",\n\"avoid\",\n\"avows\",\n\"await\",\n\"awake\",\n\"award\",\n\"aware\",\n\"awash\",\n\"awful\",\n\"awoke\",\n\"axial\",\n\"axiom\",\n\"axles\",\n\"axons\",\n\"azure\",\n\"bacon\",\n\"badge\",\n\"badly\",\n\"bagel\",\n\"baggy\",\n\"bails\",\n\"baits\",\n\"baked\",\n\"baker\",\n\"bakes\",\n\"bales\",\n\"balls\",\n\"balmy\",\n\"balsa\",\n\"banal\",\n\"bands\",\n\"bandy\",\n\"bangs\",\n\"banjo\",\n\"banks\",\n\"barbs\",\n\"bared\",\n\"bares\",\n\"barge\",\n\"barks\",\n\"barns\",\n\"baron\",\n\"barre\",\n\"basal\",\n\"based\",\n\"bases\",\n\"basic\",\n\"basil\",\n\"basin\",\n\"basis\",\n\"batch\",\n\"bated\",\n\"bathe\",\n\"baths\",\n\"baton\",\n\"bawdy\",\n\"bawls\",\n\"bayou\",\n\"beach\",\n\"beads\",\n\"beaks\",\n\"beams\",\n\"beans\",\n\"beard\",\n\"bears\",\n\"beast\",\n\"beats\",\n\"beaux\",\n\"beeps\",\n\"beers\",\n\"beets\",\n\"befit\",\n\"began\",\n\"beget\",\n\"begin\",\n\"begun\",\n\"beige\",\n\"being\",\n\"belay\",\n\"belch\",\n\"belie\",\n\"bells\",\n\"belly\",\n\"below\",\n\"belts\",\n\"bench\",\n\"bends\",\n\"bento\",\n\"beret\",\n\"berry\",\n\"beset\",\n\"bevel\",\n\"bicep\",\n\"bidet\",\n\"bigot\",\n\"biked\",\n\"bikes\",\n\"bilge\",\n\"bills\",\n\"binds\",\n\"binge\",\n\"bingo\",\n\"biome\",\n\"bipod\",\n\"birch\",\n\"birds\",\n\"black\",\n\"blade\",\n\"blame\",\n\"bland\",\n\"blank\",\n\"blare\",\n\"blase\",\n\"blast\",\n\"blaze\",\n\"bleak\",\n\"bleat\",\n\"bleed\",\n\"bleep\",\n\"blend\",\n\"bless\",\n\"blimp\",\n\"blind\",\n\"bling\",\n\"blink\",\n\"bliss\",\n\"blitz\",\n\"bloat\",\n\"block\",\n\"bloke\",\n\"blond\",\n\"blood\",\n\"bloom\",\n\"blown\",\n\"blows\",\n\"blues\",\n\"bluff\",\n\"blunt\",\n\"blurb\",\n\"blurs\",\n\"blurt\",\n\"blush\",\n\"board\",\n\"boars\",\n\"boast\",\n\"boats\",\n\"bodes\",\n\"bogey\",\n\"bogus\",\n\"boils\",\n\"bolts\",\n\"bolus\",\n\"bones\",\n\"bongo\",\n\"booed\",\n\"books\",\n\"booms\",\n\"boost\",\n\"booth\",\n\"boots\",\n\"booze\",\n\"bored\",\n\"borer\",\n\"bores\",\n\"borne\",\n\"bossy\",\n\"boule\",\n\"bound\",\n\"bowed\",\n\"bowls\",\n\"boxed\",\n\"boxer\",\n\"boxes\",\n\"bozos\",\n\"brace\",\n\"brads\",\n\"brags\",\n\"braid\",\n\"brain\",\n\"brake\",\n\"brand\",\n\"brash\",\n\"brass\",\n\"brats\",\n\"brave\",\n\"bravo\",\n\"brawl\",\n\"brawn\",\n\"bread\",\n\"break\",\n\"breed\",\n\"brews\",\n\"briar\",\n\"bribe\",\n\"brick\",\n\"bride\",\n\"brief\",\n\"brine\",\n\"bring\",\n\"brink\",\n\"brisk\",\n\"broad\",\n\"broil\",\n\"broke\",\n\"brood\",\n\"brook\",\n\"broom\",\n\"broth\",\n\"brown\",\n\"brows\",\n\"brunt\",\n\"brush\",\n\"brute\",\n\"buddy\",\n\"budge\",\n\"buggy\",\n\"bugle\",\n\"build\",\n\"built\",\n\"bulbs\",\n\"bulge\",\n\"bulks\",\n\"bulky\",\n\"bully\",\n\"bumps\",\n\"bumpy\",\n\"bunch\",\n\"bunks\",\n\"bunny\",\n\"bunts\",\n\"buoys\",\n\"burly\",\n\"burns\",\n\"burnt\",\n\"burps\",\n\"burro\",\n\"burrs\",\n\"burst\",\n\"bused\",\n\"buses\",\n\"bushy\",\n\"butte\",\n\"buyer\",\n\"bytes\",\n\"cabal\",\n\"cabby\",\n\"cabin\",\n\"cable\",\n\"cacao\",\n\"cache\",\n\"cacti\",\n\"caddy\",\n\"cadet\",\n\"cadre\",\n\"cafes\",\n\"caged\",\n\"cages\",\n\"cagey\",\n\"cairn\",\n\"cakes\",\n\"calls\",\n\"calms\",\n\"calve\",\n\"camel\",\n\"cameo\",\n\"camps\",\n\"campy\",\n\"canal\",\n\"candy\",\n\"caned\",\n\"canes\",\n\"canny\",\n\"canoe\",\n\"canon\",\n\"caper\",\n\"capes\",\n\"carat\",\n\"cards\",\n\"cared\",\n\"carer\",\n\"cares\",\n\"cargo\",\n\"carry\",\n\"carts\",\n\"carve\",\n\"cased\",\n\"cases\",\n\"casks\",\n\"caste\",\n\"casts\",\n\"catch\",\n\"cater\",\n\"catty\",\n\"caulk\",\n\"cause\",\n\"caved\",\n\"caver\",\n\"caves\",\n\"cease\",\n\"cedar\",\n\"ceded\",\n\"cello\",\n\"cells\",\n\"cents\",\n\"chafe\",\n\"chaff\",\n\"chain\",\n\"chair\",\n\"chalk\",\n\"champ\",\n\"chant\",\n\"chaos\",\n\"charm\",\n\"chart\",\n\"chase\",\n\"chasm\",\n\"chats\",\n\"cheap\",\n\"cheat\",\n\"check\",\n\"cheek\",\n\"cheep\",\n\"cheer\",\n\"chefs\",\n\"chess\",\n\"chest\",\n\"chews\",\n\"chewy\",\n\"chick\",\n\"chide\",\n\"chief\",\n\"child\",\n\"chili\",\n\"chill\",\n\"chime\",\n\"chimp\",\n\"chips\",\n\"choir\",\n\"choke\",\n\"chomp\",\n\"chops\",\n\"chord\",\n\"chore\",\n\"chose\",\n\"chows\",\n\"chuck\",\n\"chuff\",\n\"chunk\",\n\"churn\",\n\"chute\",\n\"cider\",\n\"cigar\",\n\"cinch\",\n\"cited\",\n\"cites\",\n\"civic\",\n\"civil\",\n\"clack\",\n\"clade\",\n\"claim\",\n\"clamp\",\n\"clams\",\n\"clank\",\n\"claps\",\n\"clash\",\n\"clasp\",\n\"class\",\n\"claws\",\n\"clean\",\n\"clear\",\n\"cleat\",\n\"cleft\",\n\"clerk\",\n\"click\",\n\"cliff\",\n\"climb\",\n\"cling\",\n\"clink\",\n\"clips\",\n\"cloak\",\n\"clock\",\n\"clogs\",\n\"clone\",\n\"close\",\n\"cloth\",\n\"clots\",\n\"cloud\",\n\"clout\",\n\"clove\",\n\"clown\",\n\"clubs\",\n\"cluck\",\n\"clued\",\n\"clues\",\n\"clump\",\n\"clung\",\n\"clunk\",\n\"coach\",\n\"coals\",\n\"coast\",\n\"coats\",\n\"cobra\",\n\"cocky\",\n\"cocoa\",\n\"codas\",\n\"coded\",\n\"coder\",\n\"codes\",\n\"codex\",\n\"codon\",\n\"coifs\",\n\"coils\",\n\"coins\",\n\"colds\",\n\"colic\",\n\"colon\",\n\"color\",\n\"colts\",\n\"combo\",\n\"combs\",\n\"comes\",\n\"comet\",\n\"comfy\",\n\"comic\",\n\"comma\",\n\"commo\",\n\"conch\",\n\"condo\",\n\"cones\",\n\"conga\",\n\"conic\",\n\"cooed\",\n\"cooks\",\n\"cools\",\n\"coops\",\n\"coopt\",\n\"coped\",\n\"copes\",\n\"copse\",\n\"coral\",\n\"cords\",\n\"cored\",\n\"corer\",\n\"cores\",\n\"corks\",\n\"corny\",\n\"corps\",\n\"costs\",\n\"couch\",\n\"cough\",\n\"could\",\n\"count\",\n\"coupe\",\n\"court\",\n\"coven\",\n\"cover\",\n\"coves\",\n\"covet\",\n\"cowed\",\n\"cower\",\n\"cowls\",\n\"coyly\",\n\"crabs\",\n\"crack\",\n\"craft\",\n\"crags\",\n\"cramp\",\n\"crams\",\n\"crane\",\n\"crank\",\n\"crash\",\n\"crass\",\n\"crate\",\n\"crave\",\n\"crawl\",\n\"craze\",\n\"crazy\",\n\"creak\",\n\"cream\",\n\"credo\",\n\"creed\",\n\"creek\",\n\"creep\",\n\"crepe\",\n\"crept\",\n\"crest\",\n\"crews\",\n\"cribs\",\n\"crick\",\n\"cried\",\n\"cries\",\n\"crime\",\n\"crimp\",\n\"crisp\",\n\"croak\",\n\"crocs\",\n\"croft\",\n\"crone\",\n\"crony\",\n\"crook\",\n\"croon\",\n\"crops\",\n\"cross\",\n\"crowd\",\n\"crown\",\n\"crows\",\n\"crude\",\n\"cruel\",\n\"crumb\",\n\"crush\",\n\"crust\",\n\"crypt\",\n\"cubed\",\n\"cubes\",\n\"cubic\",\n\"cubit\",\n\"cults\",\n\"cumin\",\n\"curbs\",\n\"curds\",\n\"cured\",\n\"cures\",\n\"curio\",\n\"curls\",\n\"curly\",\n\"curry\",\n\"curse\",\n\"curve\",\n\"curvy\",\n\"cushy\",\n\"cuter\",\n\"cutie\",\n\"cycle\",\n\"cynic\",\n\"daffy\",\n\"daily\",\n\"dairy\",\n\"daisy\",\n\"dance\",\n\"dandy\",\n\"dared\",\n\"dares\",\n\"darns\",\n\"darts\",\n\"dated\",\n\"dates\",\n\"datum\",\n\"dazed\",\n\"deals\",\n\"dealt\",\n\"deans\",\n\"death\",\n\"debit\",\n\"debts\",\n\"debug\",\n\"debut\",\n\"decaf\",\n\"decal\",\n\"decay\",\n\"decks\",\n\"decor\",\n\"decoy\",\n\"deeds\",\n\"deems\",\n\"defer\",\n\"deify\",\n\"deign\",\n\"deism\",\n\"deity\",\n\"delay\",\n\"delta\",\n\"delve\",\n\"demon\",\n\"denim\",\n\"dense\",\n\"dents\",\n\"depot\",\n\"depth\",\n\"derby\",\n\"desks\",\n\"deter\",\n\"detox\",\n\"deuce\",\n\"devil\",\n\"dewar\",\n\"dials\",\n\"diary\",\n\"diced\",\n\"dices\",\n\"dicey\",\n\"digit\",\n\"dimes\",\n\"dimly\",\n\"dined\",\n\"diner\",\n\"dines\",\n\"dingo\",\n\"dings\",\n\"dingy\",\n\"dinky\",\n\"diode\",\n\"dirge\",\n\"dirty\",\n\"disco\",\n\"discs\",\n\"disks\",\n\"ditch\",\n\"ditto\",\n\"ditty\",\n\"ditzy\",\n\"dived\",\n\"diver\",\n\"dives\",\n\"divot\",\n\"divvy\",\n\"dizzy\",\n\"docks\",\n\"dodge\",\n\"dodgy\",\n\"doers\",\n\"dogma\",\n\"doing\",\n\"doled\",\n\"doles\",\n\"dolls\",\n\"dolts\",\n\"domed\",\n\"domes\",\n\"donor\",\n\"donut\",\n\"dooms\",\n\"doors\",\n\"doozy\",\n\"doped\",\n\"dopey\",\n\"dorks\",\n\"dorky\",\n\"dosed\",\n\"doses\",\n\"doted\",\n\"dotes\",\n\"doubt\",\n\"dough\",\n\"doula\",\n\"douse\",\n\"doves\",\n\"dowdy\",\n\"dowel\",\n\"downy\",\n\"dowry\",\n\"doyen\",\n\"dozed\",\n\"dozen\",\n\"dozer\",\n\"dozes\",\n\"draft\",\n\"drags\",\n\"drain\",\n\"drama\",\n\"drank\",\n\"drape\",\n\"drawl\",\n\"drawn\",\n\"draws\",\n\"dread\",\n\"dream\",\n\"dreck\",\n\"dregs\",\n\"dress\",\n\"dried\",\n\"drier\",\n\"dries\",\n\"drift\",\n\"drill\",\n\"drink\",\n\"drips\",\n\"drive\",\n\"droid\",\n\"droll\",\n\"drone\",\n\"drool\",\n\"droop\",\n\"drops\",\n\"drove\",\n\"drown\",\n\"drugs\",\n\"druid\",\n\"drums\",\n\"drunk\",\n\"dryer\",\n\"dryly\",\n\"ducat\",\n\"duchy\",\n\"ducks\",\n\"ducky\",\n\"ducts\",\n\"dudes\",\n\"duels\",\n\"duets\",\n\"dulls\",\n\"dummy\",\n\"dumps\",\n\"dunes\",\n\"dunks\",\n\"duped\",\n\"dupes\",\n\"dusky\",\n\"dusts\",\n\"dusty\",\n\"duvet\",\n\"dwarf\",\n\"dwell\",\n\"dwelt\",\n\"dying\",\n\"eager\",\n\"eagle\",\n\"early\",\n\"earns\",\n\"earth\",\n\"eased\",\n\"easel\",\n\"eases\",\n\"eaten\",\n\"eater\",\n\"eaves\",\n\"ebbed\",\n\"ebony\",\n\"echos\",\n\"edged\",\n\"edger\",\n\"edges\",\n\"edict\",\n\"edify\",\n\"edits\",\n\"eerie\",\n\"egged\",\n\"egret\",\n\"eight\",\n\"eject\",\n\"elbow\",\n\"elder\",\n\"elect\",\n\"elegy\",\n\"elide\",\n\"elite\",\n\"elope\",\n\"elude\",\n\"elven\",\n\"elves\",\n\"email\",\n\"embed\",\n\"ember\",\n\"emery\",\n\"emits\",\n\"emote\",\n\"empty\",\n\"enact\",\n\"ended\",\n\"endow\",\n\"enemy\",\n\"enjoy\",\n\"ennui\",\n\"ensue\",\n\"epics\",\n\"epoch\",\n\"epoxy\",\n\"equal\",\n\"equip\",\n\"erase\",\n\"erect\",\n\"erode\",\n\"erred\",\n\"error\",\n\"erupt\",\n\"essay\",\n\"ether\",\n\"ethic\",\n\"ethos\",\n\"etude\",\n\"euros\",\n\"evade\",\n\"event\",\n\"every\",\n\"evict\",\n\"evils\",\n\"evoke\",\n\"exact\",\n\"exalt\",\n\"exams\",\n\"excel\",\n\"exert\",\n\"exile\",\n\"exist\",\n\"exits\",\n\"expat\",\n\"expel\",\n\"extol\",\n\"extra\",\n\"exude\",\n\"exult\",\n\"fable\",\n\"faced\",\n\"faces\",\n\"facet\",\n\"facia\",\n\"facts\",\n\"faded\",\n\"fades\",\n\"fails\",\n\"faint\",\n\"fairs\",\n\"fairy\",\n\"faith\",\n\"faked\",\n\"faker\",\n\"fakes\",\n\"falls\",\n\"false\",\n\"famed\",\n\"fancy\",\n\"fangs\",\n\"farce\",\n\"fared\",\n\"fares\",\n\"farms\",\n\"fasts\",\n\"fatal\",\n\"fated\",\n\"fates\",\n\"fault\",\n\"fauna\",\n\"favor\",\n\"fawns\",\n\"faxed\",\n\"faxes\",\n\"fazed\",\n\"fears\",\n\"feast\",\n\"feats\",\n\"feeds\",\n\"feels\",\n\"feign\",\n\"feint\",\n\"fells\",\n\"felon\",\n\"femur\",\n\"fence\",\n\"feral\",\n\"ferns\",\n\"ferry\",\n\"fetch\",\n\"feted\",\n\"fetid\",\n\"fetus\",\n\"feuds\",\n\"fever\",\n\"fewer\",\n\"fiber\",\n\"fibre\",\n\"field\",\n\"fiend\",\n\"fiery\",\n\"fifth\",\n\"fifty\",\n\"fight\",\n\"filed\",\n\"files\",\n\"fills\",\n\"films\",\n\"filth\",\n\"final\",\n\"finch\",\n\"finds\",\n\"fined\",\n\"finer\",\n\"fines\",\n\"fired\",\n\"fires\",\n\"firms\",\n\"first\",\n\"fishy\",\n\"fists\",\n\"fives\",\n\"fixed\",\n\"fixer\",\n\"fixes\",\n\"fizzy\",\n\"fjord\",\n\"flack\",\n\"flags\",\n\"flail\",\n\"flair\",\n\"flake\",\n\"flaky\",\n\"flame\",\n\"flank\",\n\"flaps\",\n\"flare\",\n\"flash\",\n\"flask\",\n\"flats\",\n\"flaws\",\n\"fleas\",\n\"fleck\",\n\"flees\",\n\"fleet\",\n\"flesh\",\n\"flick\",\n\"flier\",\n\"flies\",\n\"fling\",\n\"flips\",\n\"float\",\n\"flock\",\n\"flood\",\n\"floor\",\n\"flops\",\n\"floss\",\n\"flour\",\n\"flown\",\n\"flows\",\n\"fluff\",\n\"fluid\",\n\"flute\",\n\"flyer\",\n\"foams\",\n\"foamy\",\n\"focal\",\n\"focus\",\n\"foggy\",\n\"foils\",\n\"folds\",\n\"folks\",\n\"fonts\",\n\"foods\",\n\"fools\",\n\"foots\",\n\"footy\",\n\"force\",\n\"forge\",\n\"forks\",\n\"forms\",\n\"forth\",\n\"forts\",\n\"forty\",\n\"forum\",\n\"found\",\n\"foxes\",\n\"frame\",\n\"fraud\",\n\"fresh\",\n\"fried\",\n\"fries\",\n\"frogs\",\n\"front\",\n\"frost\",\n\"froth\",\n\"frown\",\n\"froze\",\n\"fruit\",\n\"fryer\",\n\"fudge\",\n\"fuels\",\n\"fully\",\n\"fumes\",\n\"funds\",\n\"funny\",\n\"furry\",\n\"fuzzy\",\n\"gains\",\n\"gamer\",\n\"games\",\n\"gases\",\n\"gates\",\n\"gauge\",\n\"gawks\",\n\"gazed\",\n\"gazes\",\n\"gears\",\n\"gecko\",\n\"geese\",\n\"genes\",\n\"genre\",\n\"geode\",\n\"ghost\",\n\"giant\",\n\"gifts\",\n\"girls\",\n\"given\",\n\"gives\",\n\"gland\",\n\"glare\",\n\"glass\",\n\"glaze\",\n\"gleam\",\n\"glide\",\n\"globe\",\n\"glory\",\n\"gloss\",\n\"glove\",\n\"glows\",\n\"glued\",\n\"goals\",\n\"goats\",\n\"going\",\n\"goods\",\n\"gooey\",\n\"goofy\",\n\"goose\",\n\"gorge\",\n\"grace\",\n\"grade\",\n\"grain\",\n\"grand\",\n\"grant\",\n\"grape\",\n\"graph\",\n\"grasp\",\n\"grass\",\n\"grate\",\n\"grave\",\n\"gravy\",\n\"graze\",\n\"great\",\n\"green\",\n\"greet\",\n\"grids\",\n\"grief\",\n\"grill\",\n\"grind\",\n\"grips\",\n\"groom\",\n\"gross\",\n\"group\",\n\"grove\",\n\"growl\",\n\"grown\",\n\"grows\",\n\"guard\",\n\"guess\",\n\"guest\",\n\"guide\",\n\"guild\",\n\"guilt\",\n\"gulch\",\n\"gummy\",\n\"gusts\",\n\"gusty\",\n\"gutsy\",\n\"habit\",\n\"hacks\",\n\"hails\",\n\"hairs\",\n\"hairy\",\n\"halls\",\n\"halts\",\n\"halve\",\n\"hands\",\n\"handy\",\n\"hangs\",\n\"happy\",\n\"hardy\",\n\"harps\",\n\"harsh\",\n\"haste\",\n\"hasty\",\n\"hatch\",\n\"hated\",\n\"hates\",\n\"hauls\",\n\"haven\",\n\"havoc\",\n\"hawks\",\n\"hazel\",\n\"heads\",\n\"heals\",\n\"heaps\",\n\"heard\",\n\"heart\",\n\"heavy\",\n\"hedge\",\n\"heeds\",\n\"heels\",\n\"heirs\",\n\"heist\",\n\"hello\",\n\"helps\",\n\"hence\",\n\"herbs\",\n\"herds\",\n\"hides\",\n\"hiked\",\n\"hiker\",\n\"hikes\",\n\"hills\",\n\"hilly\",\n\"hints\",\n\"hippo\",\n\"hired\",\n\"hires\",\n\"hitch\",\n\"hives\",\n\"hoard\",\n\"hobby\",\n\"holds\",\n\"holes\",\n\"holly\",\n\"homes\",\n\"honey\",\n\"honor\",\n\"hooks\",\n\"hoops\",\n\"hoped\",\n\"hopes\",\n\"horns\",\n\"horse\",\n\"hosts\",\n\"hotel\",\n\"hours\",\n\"house\",\n\"hover\",\n\"howdy\",\n\"human\",\n\"humid\",\n\"humor\",\n\"hunch\",\n\"hurry\",\n\"hurts\",\n\"hutch\",\n\"hyena\",\n\"icing\",\n\"icons\",\n\"ideal\",\n\"ideas\",\n\"idled\",\n\"idles\",\n\"image\",\n\"imply\",\n\"incur\",\n\"index\",\n\"inlet\",\n\"inner\",\n\"input\",\n\"irons\",\n\"irony\",\n\"issue\",\n\"items\",\n\"jeans\",\n\"jelly\",\n\"jests\",\n\"jewel\",\n\"joins\",\n\"joint\",\n\"joked\",\n\"jokes\",\n\"jolly\",\n\"judge\",\n\"juice\",\n\"juicy\",\n\"jumps\",\n\"juror\",\n\"kayak\",\n\"kazoo\",\n\"keeps\",\n\"kicks\",\n\"kinds\",\n\"kings\",\n\"kites\",\n\"kitty\",\n\"knead\",\n\"knees\",\n\"knife\",\n\"knits\",\n\"knobs\",\n\"knock\",\n\"knots\",\n\"known\",\n\"knows\",\n\"koala\",\n\"kudos\",\n\"label\",\n\"labor\",\n\"lacks\",\n\"ladle\",\n\"lakes\",\n\"lambs\",\n\"lamps\",\n\"lands\",\n\"lanes\",\n\"large\",\n\"larva\",\n\"laser\",\n\"latch\",\n\"later\",\n\"laugh\",\n\"layer\",\n\"leads\",\n\"leafs\",\n\"leafy\",\n\"leaks\",\n\"leaky\",\n\"leans\",\n\"leaps\",\n\"leapt\",\n\"learn\",\n\"lease\",\n\"least\",\n\"leave\",\n\"ledge\",\n\"legal\",\n\"lemon\",\n\"lends\",\n\"level\",\n\"lever\",\n\"light\",\n\"liked\",\n\"likes\",\n\"limbs\",\n\"limes\",\n\"limit\",\n\"lined\",\n\"linen\",\n\"liner\",\n\"lines\",\n\"links\",\n\"lions\",\n\"lists\",\n\"lived\",\n\"liver\",\n\"lives\",\n\"llama\",\n\"loans\",\n\"lobby\",\n\"local\",\n\"locks\",\n\"lodge\",\n\"lofts\",\n\"lofty\",\n\"logic\",\n\"logos\",\n\"looks\",\n\"loops\",\n\"loose\",\n\"lords\",\n\"loses\",\n\"loved\",\n\"lover\",\n\"loves\",\n\"lower\",\n\"loyal\",\n\"lucks\",\n\"lucky\",\n\"lunar\",\n\"lunch\",\n\"lungs\",\n\"lying\",\n\"macro\",\n\"magic\",\n\"major\",\n\"maker\",\n\"makes\",\n\"males\",\n\"maple\",\n\"march\",\n\"marks\",\n\"marry\",\n\"masks\",\n\"match\",\n\"mates\",\n\"maths\",\n\"matte\",\n\"maybe\",\n\"mayor\",\n\"meals\",\n\"means\",\n\"meant\",\n\"meats\",\n\"medal\",\n\"media\",\n\"medic\",\n\"meets\",\n\"melee\",\n\"melon\",\n\"melts\",\n\"memos\",\n\"menus\",\n\"mercy\",\n\"merge\",\n\"merit\",\n\"merry\",\n\"messy\",\n\"metal\",\n\"meter\",\n\"metro\",\n\"micro\",\n\"midst\",\n\"might\",\n\"miles\",\n\"mimic\",\n\"minds\",\n\"mines\",\n\"minor\",\n\"mints\",\n\"minty\",\n\"minus\",\n\"misty\",\n\"mitts\",\n\"mixed\",\n\"mixer\",\n\"mixes\",\n\"model\",\n\"modem\",\n\"modes\",\n\"moist\",\n\"molar\",\n\"molds\",\n\"moldy\",\n\"moles\",\n\"money\",\n\"month\",\n\"moods\",\n\"moody\",\n\"moose\",\n\"moral\",\n\"motor\",\n\"motto\",\n\"mound\",\n\"mount\",\n\"mouse\",\n\"mouth\",\n\"moved\",\n\"mover\",\n\"moves\",\n\"movie\",\n\"mowed\",\n\"mulch\",\n\"mural\",\n\"murky\",\n\"mused\",\n\"music\",\n\"muted\",\n\"myths\",\n\"nacho\",\n\"nails\",\n\"naive\",\n\"naked\",\n\"named\",\n\"names\",\n\"nasal\",\n\"nasty\",\n\"naval\",\n\"navel\",\n\"nears\",\n\"needs\",\n\"nerve\",\n\"nests\",\n\"never\",\n\"newer\",\n\"nexus\",\n\"nicer\",\n\"niche\",\n\"niece\",\n\"nifty\",\n\"night\",\n\"ninja\",\n\"ninth\",\n\"noble\",\n\"nodes\",\n\"noise\",\n\"noisy\",\n\"norms\",\n\"north\",\n\"noses\",\n\"nosey\",\n\"notch\",\n\"noted\",\n\"notes\",\n\"nouns\",\n\"novel\",\n\"nudge\",\n\"nurse\",\n\"nylon\",\n\"oasis\",\n\"occur\",\n\"ocean\",\n\"oddly\",\n\"odors\",\n\"offer\",\n\"often\",\n\"oiled\",\n\"older\",\n\"olive\",\n\"omega\",\n\"omits\",\n\"onion\",\n\"onset\",\n\"oozes\",\n\"opens\",\n\"opera\",\n\"opted\",\n\"optic\",\n\"orbit\",\n\"orcas\",\n\"order\",\n\"organ\",\n\"other\",\n\"otter\",\n\"ought\",\n\"ounce\",\n\"outer\",\n\"ovals\",\n\"ovens\",\n\"overt\",\n\"owned\",\n\"owner\",\n\"oxide\",\n\"ozone\",\n\"paauw\",\n\"paced\",\n\"paces\",\n\"packs\",\n\"paged\",\n\"pages\",\n\"pails\",\n\"pains\",\n\"paint\",\n\"pairs\",\n\"palms\",\n\"panda\",\n\"panel\",\n\"panic\",\n\"pants\",\n\"paper\",\n\"pared\",\n\"parka\",\n\"parks\",\n\"parse\",\n\"parts\",\n\"party\",\n\"pasta\",\n\"paste\",\n\"patch\",\n\"paths\",\n\"patio\",\n\"pause\",\n\"paved\",\n\"paves\",\n\"pawns\",\n\"peace\",\n\"peach\",\n\"peaks\",\n\"pearl\",\n\"pears\",\n\"pecan\",\n\"pedal\",\n\"peels\",\n\"peers\",\n\"penny\",\n\"peony\",\n\"perch\",\n\"perks\",\n\"pests\",\n\"petty\",\n\"phase\",\n\"phone\",\n\"phony\",\n\"photo\",\n\"piano\",\n\"picks\",\n\"picky\",\n\"piece\",\n\"piles\",\n\"pills\",\n\"pilot\",\n\"pinch\",\n\"pings\",\n\"pipes\",\n\"pitch\",\n\"pivot\",\n\"pixel\",\n\"pizza\",\n\"place\",\n\"plaid\",\n\"plain\",\n\"plane\",\n\"plank\",\n\"plans\",\n\"plant\",\n\"plate\",\n\"plays\",\n\"plaza\",\n\"plead\",\n\"plots\",\n\"plows\",\n\"plugs\",\n\"plums\",\n\"poems\",\n\"poets\",\n\"point\",\n\"poise\",\n\"poker\",\n\"polar\",\n\"poles\",\n\"polls\",\n\"ponds\",\n\"pools\",\n\"porch\",\n\"pores\",\n\"ports\",\n\"posed\",\n\"poses\",\n\"posts\",\n\"pouch\",\n\"pound\",\n\"power\",\n\"press\",\n\"price\",\n\"pride\",\n\"prime\",\n\"print\",\n\"prior\",\n\"prize\",\n\"probe\",\n\"prone\",\n\"proof\",\n\"props\",\n\"proud\",\n\"prove\",\n\"proxy\",\n\"psalm\",\n\"pulls\",\n\"pulse\",\n\"pumps\",\n\"punch\",\n\"pupil\",\n\"puppy\",\n\"purse\",\n\"quack\",\n\"quail\",\n\"quake\",\n\"quart\",\n\"queen\",\n\"query\",\n\"quest\",\n\"queue\",\n\"quick\",\n\"quiet\",\n\"quill\",\n\"quilt\",\n\"quite\",\n\"quota\",\n\"quote\",\n\"raced\",\n\"races\",\n\"radar\",\n\"radio\",\n\"rafts\",\n\"rails\",\n\"rains\",\n\"rainy\",\n\"raise\",\n\"rally\",\n\"ranch\",\n\"range\",\n\"ranks\",\n\"rapid\",\n\"rated\",\n\"rates\",\n\"ratio\",\n\"raven\",\n\"razor\",\n\"reach\",\n\"react\",\n\"reads\",\n\"ready\",\n\"realm\",\n\"rebel\",\n\"reeds\",\n\"reels\",\n\"refer\",\n\"regal\",\n\"reign\",\n\"relax\",\n\"relay\",\n\"relic\",\n\"renal\",\n\"renew\",\n\"repay\",\n\"reply\",\n\"reset\",\n\"resin\",\n\"retro\",\n\"retry\",\n\"reuse\",\n\"rhino\",\n\"rhyme\",\n\"rider\",\n\"rides\",\n\"ridge\",\n\"rifle\",\n\"right\",\n\"rigid\",\n\"rings\",\n\"rinse\",\n\"risen\",\n\"riser\",\n\"rises\",\n\"risks\",\n\"risky\",\n\"rival\",\n\"river\",\n\"roads\",\n\"roams\",\n\"roars\",\n\"roast\",\n\"robes\",\n\"robin\",\n\"robot\",\n\"rocks\",\n\"rocky\",\n\"rodeo\",\n\"rogue\",\n\"roles\",\n\"rolls\",\n\"rooms\",\n\"roomy\",\n\"roost\",\n\"roots\",\n\"ropes\",\n\"roses\",\n\"rough\",\n\"round\",\n\"route\",\n\"rover\",\n\"rowdy\",\n\"rowed\",\n\"rower\",\n\"royal\",\n\"rugby\",\n\"ruins\",\n\"ruled\",\n\"ruler\",\n\"rules\",\n\"rungs\",\n\"rural\",\n\"rusts\",\n\"rusty\",\n\"sadly\",\n\"safer\",\n\"sails\",\n\"salad\",\n\"sales\",\n\"salon\",\n\"salsa\",\n\"salty\",\n\"sands\",\n\"sandy\",\n\"satin\",\n\"sauce\",\n\"saved\",\n\"saves\",\n\"savvy\",\n\"scale\",\n\"scalp\",\n\"scans\",\n\"scare\",\n\"scarf\",\n\"scary\",\n\"scene\",\n\"scent\",\n\"scoop\",\n\"scope\",\n\"score\",\n\"scout\",\n\"scrap\",\n\"screw\",\n\"scrub\",\n\"seals\",\n\"seams\",\n\"seats\",\n\"seeds\",\n\"seeks\",\n\"seems\",\n\"sells\",\n\"sends\",\n\"sense\",\n\"serum\",\n\"serve\",\n\"setup\",\n\"seven\",\n\"sewer\",\n\"shade\",\n\"shady\",\n\"shaft\",\n\"shake\",\n\"shaky\",\n\"shall\",\n\"shame\",\n\"shape\",\n\"share\",\n\"shark\",\n\"sharp\",\n\"shawl\",\n\"sheds\",\n\"sheep\",\n\"sheer\",\n\"sheet\",\n\"shelf\",\n\"shell\",\n\"shift\",\n\"shine\",\n\"shiny\",\n\"ships\",\n\"shirt\",\n\"shock\",\n\"shoes\",\n\"shook\",\n\"shoot\",\n\"shops\",\n\"shore\",\n\"short\",\n\"shots\",\n\"shout\",\n\"shove\",\n\"shown\",\n\"shows\",\n\"shred\",\n\"shrew\",\n\"sided\",\n\"sides\",\n\"siege\",\n\"sighs\",\n\"sight\",\n\"sigma\",\n\"signs\",\n\"silly\",\n\"since\",\n\"sings\",\n\"sinks\",\n\"siren\",\n\"sites\",\n\"sixth\",\n\"sixty\",\n\"sized\",\n\"sizes\",\n\"skier\",\n\"skies\",\n\"skill\",\n\"skims\",\n\"skirt\",\n\"skull\",\n\"skunk\",\n\"slack\",\n\"slang\",\n\"slate\",\n\"sleek\",\n\"sleep\",\n\"slept\",\n\"slice\",\n\"slick\",\n\"slide\",\n\"slime\",\n\"slimy\",\n\"slope\",\n\"sloth\",\n\"slots\",\n\"slush\",\n\"small\",\n\"smart\",\n\"smash\",\n\"smell\",\n\"smile\",\n\"smock\",\n\"smoke\",\n\"snack\",\n\"snail\",\n\"snake\",\n\"sneak\",\n\"snore\",\n\"snows\",\n\"snowy\",\n\"soaks\",\n\"soaps\",\n\"soars\",\n\"socks\",\n\"soils\",\n\"solar\",\n\"soles\",\n\"solid\",\n\"solve\",\n\"sonar\",\n\"songs\",\n\"sonic\",\n\"sorry\",\n\"sorts\",\n\"souls\",\n\"sound\",\n\"south\",\n\"space\",\n\"spade\",\n\"spare\",\n\"spark\",\n\"speak\",\n\"speed\",\n\"spell\",\n\"spend\",\n\"spent\",\n\"spice\",\n\"spicy\",\n\"spike\",\n\"spill\",\n\"spine\",\n\"spite\",\n\"split\",\n\"spoil\",\n\"spoke\",\n\"spoon\",\n\"spore\",\n\"sport\",\n\"spots\",\n\"spout\",\n\"spray\",\n\"spurs\",\n\"squad\",\n\"squid\",\n\"stack\",\n\"staff\",\n\"stage\",\n\"stain\",\n\"stake\",\n\"stall\",\n\"stamp\",\n\"stand\",\n\"stare\",\n\"stark\",\n\"stars\",\n\"start\",\n\"stash\",\n\"state\",\n\"stats\",\n\"stays\",\n\"stead\",\n\"steak\",\n\"steal\",\n\"steam\",\n\"steel\",\n\"steep\",\n\"steer\",\n\"stems\",\n\"steps\",\n\"stern\",\n\"stick\",\n\"stiff\",\n\"still\",\n\"sting\",\n\"stink\",\n\"stock\",\n\"stole\",\n\"stomp\",\n\"stone\",\n\"stood\",\n\"stool\",\n\"stops\",\n\"store\",\n\"stork\",\n\"storm\",\n\"story\",\n\"stove\",\n\"strap\",\n\"straw\",\n\"strip\",\n\"stuck\",\n\"study\",\n\"stuff\",\n\"stung\",\n\"stunt\",\n\"style\",\n\"suave\",\n\"sugar\",\n\"suite\",\n\"suits\",\n\"sunny\",\n\"super\",\n\"surge\",\n\"sushi\",\n\"swamp\",\n\"swans\",\n\"swaps\",\n\"sways\",\n\"swear\",\n\"sweat\",\n\"sweet\",\n\"swept\",\n\"swift\",\n\"swims\",\n\"swing\",\n\"swipe\",\n\"swirl\",\n\"swish\",\n\"sword\",\n\"sworn\",\n\"syrup\",\n\"table\",\n\"tacos\",\n\"tails\",\n\"taken\",\n\"takes\",\n\"tales\",\n\"talks\",\n\"talon\",\n\"tango\",\n\"tangy\",\n\"tanks\",\n\"taped\",\n\"tapes\",\n\"tardy\",\n\"tasks\",\n\"taste\",\n\"tasty\",\n\"taxed\",\n\"taxes\",\n\"teach\",\n\"teams\",\n\"tears\",\n\"teary\",\n\"teddy\",\n\"teens\",\n\"teeny\",\n\"teeth\",\n\"tells\",\n\"tempo\",\n\"tends\",\n\"tense\",\n\"tenth\",\n\"tents\",\n\"terms\",\n\"tests\",\n\"texts\",\n\"thank\",\n\"thaws\",\n\"theft\",\n\"their\",\n\"theme\",\n\"there\",\n\"these\",\n\"thick\",\n\"thief\",\n\"thigh\",\n\"thing\",\n\"think\",\n\"third\",\n\"thorn\",\n\"those\",\n\"three\",\n\"threw\",\n\"throw\",\n\"thumb\",\n\"thyme\",\n\"tidal\",\n\"tides\",\n\"tiger\",\n\"tight\",\n\"tiles\",\n\"tilts\",\n\"timed\",\n\"timer\",\n\"times\",\n\"timid\",\n\"tints\",\n\"tired\",\n\"tires\",\n\"title\",\n\"toads\",\n\"toast\",\n\"today\",\n\"token\",\n\"tolls\",\n\"toned\",\n\"toner\",\n\"tones\",\n\"tongs\",\n\"tonic\",\n\"tools\",\n\"tooth\",\n\"topaz\",\n\"topic\",\n\"torch\",\n\"torso\",\n\"total\",\n\"touch\",\n\"tough\",\n\"tours\",\n\"towed\",\n\"towel\",\n\"tower\",\n\"towns\",\n\"toxic\",\n\"toxin\",\n\"trace\",\n\"track\",\n\"tract\",\n\"trade\",\n\"trail\",\n\"train\",\n\"trait\",\n\"traps\",\n\"trash\",\n\"trays\",\n\"tread\",\n\"treat\",\n\"trees\",\n\"trend\",\n\"trial\",\n\"tribe\",\n\"trick\",\n\"tried\",\n\"tries\",\n\"trips\",\n\"troop\",\n\"trout\",\n\"truck\",\n\"truly\",\n\"trump\",\n\"trunk\",\n\"trust\",\n\"truth\",\n\"tubes\",\n\"tulip\",\n\"tummy\",\n\"tumor\",\n\"tuned\",\n\"tuner\",\n\"tunes\",\n\"tunic\",\n\"turbo\",\n\"turns\",\n\"tutor\",\n\"tweet\",\n\"twice\",\n\"twigs\",\n\"twine\",\n\"twins\",\n\"twirl\",\n\"twist\",\n\"typed\",\n\"types\",\n\"typos\",\n\"tyres\",\n\"udder\",\n\"ultra\",\n\"unbox\",\n\"uncle\",\n\"union\",\n\"unite\",\n\"units\",\n\"unity\",\n\"untie\",\n\"until\",\n\"upend\",\n\"upper\",\n\"upset\",\n\"urban\",\n\"urged\",\n\"urine\",\n\"usage\",\n\"users\",\n\"usher\",\n\"using\",\n\"usual\",\n\"utter\",\n\"vague\",\n\"valid\",\n\"value\",\n\"valve\",\n\"vapor\",\n\"vases\",\n\"vault\",\n\"vegan\",\n\"veils\",\n\"veins\",\n\"vents\",\n\"venue\",\n\"verbs\",\n\"verse\",\n\"vests\",\n\"vexed\",\n\"vials\",\n\"vibes\",\n\"video\",\n\"views\",\n\"vines\",\n\"vinyl\",\n\"viola\",\n\"viral\",\n\"virus\",\n\"visas\",\n\"visit\",\n\"visor\",\n\"vista\",\n\"vital\",\n\"vivid\",\n\"vocal\",\n\"vodka\",\n\"voice\",\n\"volts\",\n\"voted\",\n\"voter\",\n\"votes\",\n\"vowel\",\n\"wades\",\n\"waged\",\n\"wages\",\n\"wagon\",\n\"waist\",\n\"waits\",\n\"waive\",\n\"wakes\",\n\"walks\",\n\"walls\",\n\"wants\",\n\"warns\",\n\"waste\",\n\"watch\",\n\"water\",\n\"watts\",\n\"waved\",\n\"waves\",\n\"wavey\",\n\"wears\",\n\"weary\",\n\"weave\",\n\"wedge\",\n\"weeds\",\n\"weeks\",\n\"weigh\",\n\"weird\",\n\"whale\",\n\"wheat\",\n\"wheel\",\n\"where\",\n\"which\",\n\"while\",\n\"whirl\",\n\"whisk\",\n\"white\",\n\"whole\",\n\"whose\",\n\"wider\",\n\"widow\",\n\"width\",\n\"winds\",\n\"windy\",\n\"wines\",\n\"wings\",\n\"winks\",\n\"wiped\",\n\"wiper\",\n\"wipes\",\n\"wired\",\n\"wires\",\n\"wiser\",\n\"witch\",\n\"wives\",\n\"woman\",\n\"women\",\n\"woods\",\n\"words\",\n\"works\",\n\"world\",\n\"worms\",\n\"worry\",\n\"worse\",\n\"worst\",\n\"worth\",\n\"would\",\n\"wound\",\n\"woven\",\n\"wraps\",\n\"wrath\",\n\"wrist\",\n\"write\",\n\"wrong\",\n\"wrote\",\n\"xylem\",\n\"yacht\",\n\"yards\",\n\"yearn\",\n\"years\",\n\"yeast\",\n\"yield\",\n\"young\",\n\"yours\",\n\"youth\",\n\"yummy\",\n\"zebra\",\n\"zests\",\n\"zesty\",\n\"zilch\",\n\"zippy\",\n\"zones\",\n}\n\nall = {\n\"aahed\",\n\"aalii\",\n\"aargh\",\n\"aaron\",\n\"abaca\",\n\"abaci\",\n\"aback\",\n\"abada\",\n\"abaff\",\n\"abaft\",\n\"abaka\",\n\"abama\",\n\"abamp\",\n\"aband\",\n\"abase\",\n\"abash\",\n\"abask\",\n\"abate\",\n\"abaue\",\n\"abave\",\n\"abaze\",\n\"abbas\",\n\"abbey\",\n\"abbes\",\n\"abbie\",\n\"abbot\",\n\"abdal\",\n\"abdat\",\n\"abdom\",\n\"abeam\",\n\"abear\",\n\"abede\",\n\"abele\",\n\"abend\",\n\"aberr\",\n\"abets\",\n\"abhor\",\n\"abide\",\n\"abidi\",\n\"abies\",\n\"abyes\",\n\"abilo\",\n\"abime\",\n\"abysm\",\n\"abyss\",\n\"abkar\",\n\"abler\",\n\"ables\",\n\"ablet\",\n\"ablow\",\n\"abmho\",\n\"abner\",\n\"abnet\",\n\"abode\",\n\"abody\",\n\"abohm\",\n\"aboil\",\n\"aboma\",\n\"aboon\",\n\"abord\",\n\"abort\",\n\"abote\",\n\"about\",\n\"above\",\n\"abray\",\n\"abram\",\n\"abret\",\n\"abrim\",\n\"abrin\",\n\"abris\",\n\"abrus\",\n\"absee\",\n\"absey\",\n\"absis\",\n\"absit\",\n\"abstr\",\n\"abuna\",\n\"abune\",\n\"abura\",\n\"abuse\",\n\"abush\",\n\"abuta\",\n\"abuts\",\n\"abuzz\",\n\"abwab\",\n\"acale\",\n\"acana\",\n\"acapu\",\n\"acara\",\n\"acari\",\n\"acast\",\n\"acate\",\n\"accel\",\n\"accoy\",\n\"accra\",\n\"accts\",\n\"accum\",\n\"accur\",\n\"accus\",\n\"acedy\",\n\"acerb\",\n\"aceta\",\n\"achar\",\n\"ached\",\n\"achen\",\n\"acher\",\n\"aches\",\n\"achoo\",\n\"achor\",\n\"acidy\",\n\"acids\",\n\"acier\",\n\"acies\",\n\"acyls\",\n\"acing\",\n\"acini\",\n\"ackee\",\n\"ackey\",\n\"acker\",\n\"aclys\",\n\"acmes\",\n\"acmic\",\n\"acned\",\n\"acnes\",\n\"acock\",\n\"acoin\",\n\"acold\",\n\"acoma\",\n\"acone\",\n\"acool\",\n\"acorn\",\n\"acost\",\n\"acoup\",\n\"acrab\",\n\"acred\",\n\"acres\",\n\"acrid\",\n\"acryl\",\n\"acroa\",\n\"acron\",\n\"acrux\",\n\"acted\",\n\"actin\",\n\"acton\",\n\"actor\",\n\"actos\",\n\"actus\",\n\"acuan\",\n\"acute\",\n\"adage\",\n\"adagy\",\n\"adays\",\n\"adams\",\n\"adapa\",\n\"adapt\",\n\"adati\",\n\"adaty\",\n\"adawe\",\n\"adawn\",\n\"adcon\",\n\"addax\",\n\"addda\",\n\"added\",\n\"adder\",\n\"addie\",\n\"addio\",\n\"addis\",\n\"addle\",\n\"addnl\",\n\"adead\",\n\"adeem\",\n\"adeep\",\n\"adela\",\n\"adeps\",\n\"adept\",\n\"adfix\",\n\"adiel\",\n\"adieu\",\n\"adion\",\n\"adios\",\n\"adyta\",\n\"adits\",\n\"adjag\",\n\"adlai\",\n\"adlay\",\n\"adlet\",\n\"adman\",\n\"admen\",\n\"admin\",\n\"admit\",\n\"admix\",\n\"admov\",\n\"admrx\",\n\"adnex\",\n\"adobe\",\n\"adobo\",\n\"adolf\",\n\"adopt\",\n\"adore\",\n\"adorn\",\n\"adown\",\n\"adoxa\",\n\"adoxy\",\n\"adoze\",\n\"adpao\",\n\"adrad\",\n\"adret\",\n\"adrip\",\n\"adrop\",\n\"adrue\",\n\"adsum\",\n\"adult\",\n\"adunc\",\n\"adure\",\n\"adusk\",\n\"adust\",\n\"adzer\",\n\"adzes\",\n\"aecia\",\n\"aedes\",\n\"aeger\",\n\"aegir\",\n\"aegis\",\n\"aegle\",\n\"aeons\",\n\"aequi\",\n\"aeric\",\n\"aerie\",\n\"aeron\",\n\"aesir\",\n\"aesop\",\n\"aetat\",\n\"aevia\",\n\"aevum\",\n\"aface\",\n\"afara\",\n\"afars\",\n\"afear\",\n\"affix\",\n\"afgod\",\n\"afifi\",\n\"afire\",\n\"aflat\",\n\"afley\",\n\"aflow\",\n\"afoam\",\n\"afoot\",\n\"afore\",\n\"afoul\",\n\"afray\",\n\"afret\",\n\"afric\",\n\"afrit\",\n\"afros\",\n\"after\",\n\"agada\",\n\"agade\",\n\"again\",\n\"agama\",\n\"agami\",\n\"agamy\",\n\"agape\",\n\"agars\",\n\"agasp\",\n\"agast\",\n\"agata\",\n\"agate\",\n\"agaty\",\n\"agave\",\n\"agaze\",\n\"agena\",\n\"agend\",\n\"agene\",\n\"agent\",\n\"agers\",\n\"agete\",\n\"agger\",\n\"aggie\",\n\"aggry\",\n\"aggro\",\n\"aggur\",\n\"aghan\",\n\"aghas\",\n\"agiel\",\n\"agile\",\n\"aging\",\n\"agios\",\n\"agism\",\n\"agist\",\n\"aglee\",\n\"agley\",\n\"aglet\",\n\"aglow\",\n\"agmas\",\n\"agnat\",\n\"agnel\",\n\"agnes\",\n\"agnus\",\n\"agoge\",\n\"agoho\",\n\"agone\",\n\"agony\",\n\"agons\",\n\"agora\",\n\"agrah\",\n\"agral\",\n\"agree\",\n\"agria\",\n\"agric\",\n\"agrin\",\n\"agrom\",\n\"agron\",\n\"agsam\",\n\"aguey\",\n\"agues\",\n\"agura\",\n\"agush\",\n\"agust\",\n\"ahead\",\n\"aheap\",\n\"ahems\",\n\"ahind\",\n\"ahint\",\n\"ahmed\",\n\"ahmet\",\n\"ahold\",\n\"aholt\",\n\"ahong\",\n\"ahsan\",\n\"ahull\",\n\"ahunt\",\n\"ahura\",\n\"ahush\",\n\"ahwal\",\n\"ayahs\",\n\"aided\",\n\"aider\",\n\"aides\",\n\"ayelp\",\n\"ayens\",\n\"aiery\",\n\"aiger\",\n\"aigre\",\n\"ayins\",\n\"ailed\",\n\"aylet\",\n\"ailie\",\n\"aillt\",\n\"ayllu\",\n\"aimak\",\n\"aimed\",\n\"aimee\",\n\"aimer\",\n\"ainee\",\n\"ainoi\",\n\"ainus\",\n\"aioli\",\n\"ayond\",\n\"ayont\",\n\"ayous\",\n\"airan\",\n\"aired\",\n\"airer\",\n\"airns\",\n\"airth\",\n\"airts\",\n\"aisle\",\n\"aitch\",\n\"aitis\",\n\"ayuyu\",\n\"aiver\",\n\"aiwan\",\n\"aizle\",\n\"ajaja\",\n\"ajari\",\n\"ajava\",\n\"ajhar\",\n\"ajiva\",\n\"ajuga\",\n\"akala\",\n\"akali\",\n\"akasa\",\n\"akebi\",\n\"akees\",\n\"akeki\",\n\"akela\",\n\"akene\",\n\"aking\",\n\"akkad\",\n\"aknee\",\n\"aknow\",\n\"akpek\",\n\"akron\",\n\"akule\",\n\"akund\",\n\"alack\",\n\"alada\",\n\"alain\",\n\"alaki\",\n\"alala\",\n\"alamo\",\n\"aland\",\n\"alane\",\n\"alang\",\n\"alani\",\n\"alans\",\n\"alant\",\n\"alapa\",\n\"alary\",\n\"alarm\",\n\"alate\",\n\"alawi\",\n\"alban\",\n\"albas\",\n\"albee\",\n\"albin\",\n\"albyn\",\n\"album\",\n\"albus\",\n\"alcae\",\n\"alces\",\n\"alcid\",\n\"alcor\",\n\"alday\",\n\"aldea\",\n\"alden\",\n\"alder\",\n\"aldim\",\n\"aldol\",\n\"aldus\",\n\"aleak\",\n\"aleck\",\n\"alecs\",\n\"alefs\",\n\"aleft\",\n\"alenu\",\n\"aleph\",\n\"alert\",\n\"aleut\",\n\"alfas\",\n\"alfet\",\n\"alfin\",\n\"alfur\",\n\"algae\",\n\"algal\",\n\"algas\",\n\"algic\",\n\"algid\",\n\"algin\",\n\"algol\",\n\"algor\",\n\"algum\",\n\"alhet\",\n\"alias\",\n\"alibi\",\n\"alice\",\n\"alick\",\n\"alida\",\n\"alids\",\n\"alien\",\n\"aliet\",\n\"alife\",\n\"alifs\",\n\"align\",\n\"aliya\",\n\"alike\",\n\"alima\",\n\"aline\",\n\"alish\",\n\"aliso\",\n\"alisp\",\n\"alist\",\n\"alite\",\n\"ality\",\n\"alive\",\n\"alkes\",\n\"alkyd\",\n\"alkyl\",\n\"alkin\",\n\"allah\",\n\"allay\",\n\"allan\",\n\"alley\",\n\"allen\",\n\"aller\",\n\"allez\",\n\"allie\",\n\"allyl\",\n\"allis\",\n\"allod\",\n\"alloy\",\n\"alloo\",\n\"allot\",\n\"allow\",\n\"almah\",\n\"alman\",\n\"almas\",\n\"almeh\",\n\"almes\",\n\"almon\",\n\"almud\",\n\"almug\",\n\"alnus\",\n\"alody\",\n\"aloed\",\n\"aloes\",\n\"aloft\",\n\"alogy\",\n\"aloha\",\n\"aloid\",\n\"aloin\",\n\"alois\",\n\"aloma\",\n\"alone\",\n\"along\",\n\"aloof\",\n\"alosa\",\n\"alose\",\n\"aloud\",\n\"alout\",\n\"alowe\",\n\"alpax\",\n\"alpen\",\n\"alpha\",\n\"alpid\",\n\"altar\",\n\"alter\",\n\"altho\",\n\"altin\",\n\"altos\",\n\"altun\",\n\"altus\",\n\"aluco\",\n\"alula\",\n\"alums\",\n\"alure\",\n\"aluta\",\n\"alvah\",\n\"alvan\",\n\"alvar\",\n\"alvia\",\n\"alvin\",\n\"alvus\",\n\"alway\",\n\"amaas\",\n\"amadi\",\n\"amaga\",\n\"amahs\",\n\"amain\",\n\"amala\",\n\"amalg\",\n\"amang\",\n\"amani\",\n\"amant\",\n\"amapa\",\n\"amara\",\n\"amass\",\n\"amate\",\n\"amati\",\n\"amaut\",\n\"amaze\",\n\"ambay\",\n\"amban\",\n\"ambar\",\n\"ambas\",\n\"amber\",\n\"ambit\",\n\"amble\",\n\"ambon\",\n\"ambos\",\n\"ambry\",\n\"ameba\",\n\"ameed\",\n\"ameen\",\n\"ameer\",\n\"amelu\",\n\"amend\",\n\"amene\",\n\"amens\",\n\"ament\",\n\"amess\",\n\"amhar\",\n\"amias\",\n\"amice\",\n\"amici\",\n\"amide\",\n\"amido\",\n\"amids\",\n\"amies\",\n\"amiga\",\n\"amigo\",\n\"amylo\",\n\"amyls\",\n\"amine\",\n\"amini\",\n\"amino\",\n\"amins\",\n\"amire\",\n\"amirs\",\n\"amish\",\n\"amiss\",\n\"amita\",\n\"amity\",\n\"amlet\",\n\"amman\",\n\"ammer\",\n\"ammos\",\n\"amnia\",\n\"amnic\",\n\"amoke\",\n\"amoks\",\n\"amole\",\n\"among\",\n\"amora\",\n\"amort\",\n\"amour\",\n\"amove\",\n\"amowt\",\n\"amper\",\n\"amphi\",\n\"ampyx\",\n\"ample\",\n\"amply\",\n\"ampul\",\n\"amrit\",\n\"amsel\",\n\"amuck\",\n\"amula\",\n\"amuse\",\n\"amuze\",\n\"amvis\",\n\"amzel\",\n\"anabo\",\n\"anack\",\n\"anama\",\n\"anana\",\n\"anasa\",\n\"ancha\",\n\"ancle\",\n\"ancon\",\n\"ancor\",\n\"ancre\",\n\"andes\",\n\"andia\",\n\"andor\",\n\"andre\",\n\"anear\",\n\"anele\",\n\"anend\",\n\"anent\",\n\"angas\",\n\"angel\",\n\"anger\",\n\"angia\",\n\"angie\",\n\"angka\",\n\"angle\",\n\"anglo\",\n\"angor\",\n\"angry\",\n\"angst\",\n\"angus\",\n\"anhyd\",\n\"aniba\",\n\"anice\",\n\"anigh\",\n\"anile\",\n\"anils\",\n\"anima\",\n\"anime\",\n\"animi\",\n\"animo\",\n\"anion\",\n\"anise\",\n\"anita\",\n\"anjan\",\n\"anjou\",\n\"ankee\",\n\"anker\",\n\"ankhs\",\n\"ankle\",\n\"ankou\",\n\"ankus\",\n\"anlas\",\n\"anlet\",\n\"anlia\",\n\"anmia\",\n\"annal\",\n\"annam\",\n\"annas\",\n\"annat\",\n\"annet\",\n\"annex\",\n\"annie\",\n\"anniv\",\n\"annoy\",\n\"annot\",\n\"annul\",\n\"annum\",\n\"annus\",\n\"anoas\",\n\"anode\",\n\"anoia\",\n\"anoil\",\n\"anole\",\n\"anoli\",\n\"anomy\",\n\"anorn\",\n\"anour\",\n\"anous\",\n\"anova\",\n\"ansae\",\n\"ansar\",\n\"ansel\",\n\"anser\",\n\"antae\",\n\"antal\",\n\"antar\",\n\"antas\",\n\"anted\",\n\"antes\",\n\"antic\",\n\"antiq\",\n\"antis\",\n\"anton\",\n\"antra\",\n\"antre\",\n\"antsy\",\n\"antum\",\n\"anura\",\n\"anury\",\n\"anvil\",\n\"anzac\",\n\"aoife\",\n\"aorta\",\n\"aotea\",\n\"aotes\",\n\"aotus\",\n\"aouad\",\n\"apace\",\n\"apaid\",\n\"apair\",\n\"apama\",\n\"apart\",\n\"apass\",\n\"apast\",\n\"apeak\",\n\"apeek\",\n\"apery\",\n\"apers\",\n\"apert\",\n\"aperu\",\n\"aphid\",\n\"aphis\",\n\"aphra\",\n\"apian\",\n\"apiin\",\n\"apili\",\n\"apina\",\n\"aping\",\n\"apiol\",\n\"apios\",\n\"apish\",\n\"apism\",\n\"apium\",\n\"apnea\",\n\"apoda\",\n\"apods\",\n\"apoop\",\n\"aport\",\n\"apout\",\n\"appay\",\n\"appal\",\n\"appar\",\n\"appel\",\n\"appet\",\n\"apple\",\n\"apply\",\n\"appmt\",\n\"appro\",\n\"apptd\",\n\"appui\",\n\"apres\",\n\"april\",\n\"apron\",\n\"apses\",\n\"apsid\",\n\"apsis\",\n\"aptal\",\n\"apter\",\n\"aptly\",\n\"aquae\",\n\"aquas\",\n\"araba\",\n\"araby\",\n\"arabs\",\n\"araca\",\n\"arace\",\n\"arach\",\n\"arado\",\n\"arage\",\n\"arain\",\n\"arake\",\n\"araks\",\n\"aramu\",\n\"arank\",\n\"arara\",\n\"araru\",\n\"arase\",\n\"arati\",\n\"araua\",\n\"arawa\",\n\"arber\",\n\"arbor\",\n\"arcae\",\n\"arced\",\n\"arces\",\n\"archd\",\n\"arche\",\n\"archy\",\n\"archt\",\n\"arcos\",\n\"arcus\",\n\"ardea\",\n\"ardeb\",\n\"arder\",\n\"ardor\",\n\"ardri\",\n\"aread\",\n\"areae\",\n\"areal\",\n\"arean\",\n\"arear\",\n\"areas\",\n\"areca\",\n\"areek\",\n\"areel\",\n\"arefy\",\n\"areic\",\n\"arena\",\n\"arend\",\n\"areng\",\n\"arent\",\n\"arere\",\n\"arest\",\n\"arete\",\n\"argal\",\n\"argan\",\n\"argas\",\n\"argel\",\n\"argid\",\n\"argil\",\n\"argin\",\n\"argle\",\n\"argol\",\n\"argon\",\n\"argos\",\n\"argot\",\n\"argue\",\n\"argus\",\n\"arhar\",\n\"arhat\",\n\"arian\",\n\"aryan\",\n\"arias\",\n\"ariel\",\n\"aries\",\n\"ariki\",\n\"arils\",\n\"aryls\",\n\"arioi\",\n\"arion\",\n\"ariot\",\n\"arise\",\n\"arish\",\n\"arist\",\n\"arite\",\n\"arith\",\n\"arius\",\n\"arjun\",\n\"arkab\",\n\"arkie\",\n\"arles\",\n\"armed\",\n\"armer\",\n\"armet\",\n\"armil\",\n\"armit\",\n\"armor\",\n\"arneb\",\n\"arnee\",\n\"arnut\",\n\"aroar\",\n\"arock\",\n\"aroid\",\n\"aroma\",\n\"aroon\",\n\"aroph\",\n\"arose\",\n\"arpen\",\n\"arrah\",\n\"array\",\n\"arras\",\n\"arrau\",\n\"arret\",\n\"arrgt\",\n\"arrha\",\n\"arrie\",\n\"arris\",\n\"arrow\",\n\"arroz\",\n\"arses\",\n\"arsyl\",\n\"arsis\",\n\"arsle\",\n\"arson\",\n\"artal\",\n\"artar\",\n\"artel\",\n\"arter\",\n\"artha\",\n\"artic\",\n\"artie\",\n\"artly\",\n\"artou\",\n\"artsy\",\n\"artus\",\n\"aruac\",\n\"aruke\",\n\"arulo\",\n\"arums\",\n\"arupa\",\n\"arusa\",\n\"arval\",\n\"arvel\",\n\"arvos\",\n\"arzan\",\n\"arzun\",\n\"asale\",\n\"asana\",\n\"asaph\",\n\"asarh\",\n\"ascan\",\n\"ascii\",\n\"ascon\",\n\"ascot\",\n\"ascry\",\n\"ascus\",\n\"asdic\",\n\"asgmt\",\n\"ashed\",\n\"ashen\",\n\"asher\",\n\"ashes\",\n\"ashet\",\n\"ashir\",\n\"ashot\",\n\"ashur\",\n\"asian\",\n\"aside\",\n\"asyla\",\n\"asyle\",\n\"async\",\n\"askar\",\n\"asked\",\n\"asker\",\n\"askew\",\n\"askip\",\n\"askoi\",\n\"askos\",\n\"aslop\",\n\"asoak\",\n\"asoka\",\n\"aspca\",\n\"aspen\",\n\"asper\",\n\"aspic\",\n\"aspis\",\n\"assai\",\n\"assay\",\n\"assam\",\n\"asses\",\n\"asset\",\n\"assis\",\n\"assoc\",\n\"assot\",\n\"astay\",\n\"astel\",\n\"aster\",\n\"astir\",\n\"astor\",\n\"astre\",\n\"astur\",\n\"asuri\",\n\"asway\",\n\"aswim\",\n\"atake\",\n\"atame\",\n\"atavi\",\n\"ataxy\",\n\"ateba\",\n\"atees\",\n\"ately\",\n\"atelo\",\n\"athar\",\n\"athel\",\n\"atilt\",\n\"atimy\",\n\"ating\",\n\"atypy\",\n\"atlas\",\n\"atlee\",\n\"atman\",\n\"atmas\",\n\"atmid\",\n\"atmos\",\n\"atnah\",\n\"atoke\",\n\"atole\",\n\"atoll\",\n\"atomy\",\n\"atoms\",\n\"atone\",\n\"atony\",\n\"atopy\",\n\"atour\",\n\"atren\",\n\"atria\",\n\"atrip\",\n\"attal\",\n\"attar\",\n\"atter\",\n\"attic\",\n\"attid\",\n\"attle\",\n\"attry\",\n\"atule\",\n\"atune\",\n\"atwin\",\n\"aubin\",\n\"aucan\",\n\"aucht\",\n\"audad\",\n\"audio\",\n\"audit\",\n\"aueto\",\n\"augen\",\n\"auger\",\n\"auget\",\n\"aught\",\n\"augur\",\n\"aulae\",\n\"aulas\",\n\"aulic\",\n\"auloi\",\n\"aulos\",\n\"aumil\",\n\"aunty\",\n\"aunts\",\n\"aurae\",\n\"aural\",\n\"aurar\",\n\"auras\",\n\"aurei\",\n\"aures\",\n\"auric\",\n\"auryl\",\n\"aurin\",\n\"aurir\",\n\"auris\",\n\"aurum\",\n\"autem\",\n\"autor\",\n\"autos\",\n\"autre\",\n\"auxil\",\n\"auxin\",\n\"avahi\",\n\"avail\",\n\"avale\",\n\"avant\",\n\"avars\",\n\"avast\",\n\"avell\",\n\"avena\",\n\"aveny\",\n\"avens\",\n\"avera\",\n\"avery\",\n\"avern\",\n\"avers\",\n\"avert\",\n\"avgas\",\n\"avian\",\n\"avick\",\n\"aview\",\n\"avile\",\n\"avine\",\n\"avion\",\n\"aviso\",\n\"avoid\",\n\"avoir\",\n\"avoke\",\n\"avoue\",\n\"avour\",\n\"avowe\",\n\"avows\",\n\"awabi\",\n\"awacs\",\n\"awaft\",\n\"aways\",\n\"await\",\n\"awake\",\n\"awald\",\n\"awalt\",\n\"awane\",\n\"award\",\n\"aware\",\n\"awarn\",\n\"awash\",\n\"awave\",\n\"awber\",\n\"aweek\",\n\"aweel\",\n\"awest\",\n\"aweto\",\n\"awful\",\n\"awhet\",\n\"awhir\",\n\"awide\",\n\"awing\",\n\"awink\",\n\"awiwi\",\n\"awkly\",\n\"awned\",\n\"awner\",\n\"awoke\",\n\"awols\",\n\"awork\",\n\"axels\",\n\"axers\",\n\"axial\",\n\"axile\",\n\"axils\",\n\"axine\",\n\"axing\",\n\"axiom\",\n\"axion\",\n\"axite\",\n\"axled\",\n\"axles\",\n\"axman\",\n\"axmen\",\n\"axoid\",\n\"axone\",\n\"axons\",\n\"azans\",\n\"azide\",\n\"azido\",\n\"azyme\",\n\"azine\",\n\"azlon\",\n\"azoch\",\n\"azofy\",\n\"azoic\",\n\"azole\",\n\"azons\",\n\"azote\",\n\"azoth\",\n\"azoxy\",\n\"aztec\",\n\"azure\",\n\"azury\",\n\"baaed\",\n\"baals\",\n\"babai\",\n\"babas\",\n\"babby\",\n\"babel\",\n\"babes\",\n\"babis\",\n\"babka\",\n\"bable\",\n\"baboo\",\n\"babua\",\n\"babul\",\n\"babus\",\n\"bacao\",\n\"bacca\",\n\"baccy\",\n\"bache\",\n\"bacin\",\n\"bacis\",\n\"backy\",\n\"backs\",\n\"bacon\",\n\"badan\",\n\"baddy\",\n\"badge\",\n\"badju\",\n\"badly\",\n\"badon\",\n\"baffy\",\n\"baffs\",\n\"bafta\",\n\"bagdi\",\n\"bagel\",\n\"bagge\",\n\"baggy\",\n\"bagie\",\n\"bagio\",\n\"bagle\",\n\"bagne\",\n\"bagre\",\n\"bahai\",\n\"bahay\",\n\"baham\",\n\"bahan\",\n\"bahar\",\n\"bahoe\",\n\"bahoo\",\n\"bahts\",\n\"bahur\",\n\"bahut\",\n\"bayal\",\n\"bayed\",\n\"baign\",\n\"baile\",\n\"bailo\",\n\"bails\",\n\"baioc\",\n\"bayok\",\n\"bayou\",\n\"bairn\",\n\"baith\",\n\"baits\",\n\"baiza\",\n\"baize\",\n\"bajan\",\n\"bajau\",\n\"bajra\",\n\"bajri\",\n\"bakal\",\n\"baked\",\n\"baken\",\n\"baker\",\n\"bakes\",\n\"bakie\",\n\"bakli\",\n\"bakra\",\n\"balai\",\n\"balak\",\n\"balan\",\n\"balao\",\n\"balas\",\n\"balat\",\n\"balau\",\n\"baldy\",\n\"balds\",\n\"baled\",\n\"balei\",\n\"baler\",\n\"bales\",\n\"balky\",\n\"balks\",\n\"balli\",\n\"bally\",\n\"ballo\",\n\"balls\",\n\"balmy\",\n\"balms\",\n\"balon\",\n\"baloo\",\n\"balor\",\n\"balow\",\n\"balsa\",\n\"balti\",\n\"balun\",\n\"balut\",\n\"balza\",\n\"bamah\",\n\"banak\",\n\"banal\",\n\"banat\",\n\"banba\",\n\"banca\",\n\"banco\",\n\"banda\",\n\"bande\",\n\"bandh\",\n\"bandi\",\n\"bandy\",\n\"bando\",\n\"bands\",\n\"baned\",\n\"banes\",\n\"banff\",\n\"banga\",\n\"bange\",\n\"bangy\",\n\"bangs\",\n\"bania\",\n\"banya\",\n\"banig\",\n\"banjo\",\n\"banky\",\n\"banks\",\n\"banns\",\n\"banty\",\n\"bantu\",\n\"banus\",\n\"barad\",\n\"barat\",\n\"barba\",\n\"barbe\",\n\"barbs\",\n\"barbu\",\n\"barde\",\n\"bardy\",\n\"bardo\",\n\"bards\",\n\"bared\",\n\"barer\",\n\"bares\",\n\"baret\",\n\"barff\",\n\"barfy\",\n\"barfs\",\n\"barge\",\n\"bargh\",\n\"baria\",\n\"baric\",\n\"barid\",\n\"barie\",\n\"barye\",\n\"barih\",\n\"baris\",\n\"barit\",\n\"barky\",\n\"barks\",\n\"barly\",\n\"barmy\",\n\"barms\",\n\"barny\",\n\"barns\",\n\"baroi\",\n\"baron\",\n\"barra\",\n\"barre\",\n\"barry\",\n\"barse\",\n\"barth\",\n\"basad\",\n\"basal\",\n\"basan\",\n\"basat\",\n\"based\",\n\"baser\",\n\"bases\",\n\"basic\",\n\"basil\",\n\"basyl\",\n\"basin\",\n\"basis\",\n\"baske\",\n\"basks\",\n\"bason\",\n\"basos\",\n\"bassa\",\n\"bassi\",\n\"bassy\",\n\"basso\",\n\"basta\",\n\"baste\",\n\"basti\",\n\"basto\",\n\"basts\",\n\"batad\",\n\"batak\",\n\"batan\",\n\"batch\",\n\"batea\",\n\"bated\",\n\"batel\",\n\"bater\",\n\"bates\",\n\"bathe\",\n\"baths\",\n\"batik\",\n\"batis\",\n\"baton\",\n\"batta\",\n\"batty\",\n\"batts\",\n\"battu\",\n\"batwa\",\n\"baubo\",\n\"bauch\",\n\"bauds\",\n\"bauge\",\n\"bauld\",\n\"baulk\",\n\"baume\",\n\"bauno\",\n\"baure\",\n\"bauta\",\n\"bavin\",\n\"bawdy\",\n\"bawds\",\n\"bawke\",\n\"bawly\",\n\"bawls\",\n\"bawra\",\n\"bawty\",\n\"bazar\",\n\"bazoo\",\n\"beach\",\n\"beady\",\n\"beads\",\n\"beaky\",\n\"beaks\",\n\"beala\",\n\"beamy\",\n\"beams\",\n\"beany\",\n\"beano\",\n\"beans\",\n\"beant\",\n\"beard\",\n\"bearm\",\n\"bears\",\n\"beast\",\n\"beata\",\n\"beath\",\n\"beati\",\n\"beats\",\n\"beaus\",\n\"beaut\",\n\"beaux\",\n\"bebay\",\n\"bebar\",\n\"bebat\",\n\"bebed\",\n\"bebog\",\n\"bebop\",\n\"becap\",\n\"becco\",\n\"beche\",\n\"becky\",\n\"becks\",\n\"becry\",\n\"becut\",\n\"bedad\",\n\"beday\",\n\"bedel\",\n\"beden\",\n\"bedew\",\n\"bedye\",\n\"bedim\",\n\"bedin\",\n\"bedip\",\n\"bedog\",\n\"bedot\",\n\"bedub\",\n\"bedur\",\n\"beech\",\n\"beedi\",\n\"beefy\",\n\"beefs\",\n\"beele\",\n\"beent\",\n\"beeps\",\n\"beery\",\n\"beers\",\n\"beest\",\n\"beeth\",\n\"beety\",\n\"beets\",\n\"beeve\",\n\"befan\",\n\"befit\",\n\"befog\",\n\"befop\",\n\"befur\",\n\"begad\",\n\"begay\",\n\"began\",\n\"begar\",\n\"begat\",\n\"begem\",\n\"beget\",\n\"begin\",\n\"begob\",\n\"begod\",\n\"begot\",\n\"begum\",\n\"begun\",\n\"begut\",\n\"behap\",\n\"behav\",\n\"behen\",\n\"behew\",\n\"beice\",\n\"beige\",\n\"beigy\",\n\"beild\",\n\"being\",\n\"beira\",\n\"beisa\",\n\"bejan\",\n\"bejel\",\n\"bejig\",\n\"bekah\",\n\"bekko\",\n\"belah\",\n\"belay\",\n\"belam\",\n\"belap\",\n\"belar\",\n\"belat\",\n\"belch\",\n\"belee\",\n\"belga\",\n\"belie\",\n\"belis\",\n\"bella\",\n\"belle\",\n\"belli\",\n\"belly\",\n\"bello\",\n\"bells\",\n\"below\",\n\"belts\",\n\"belue\",\n\"belve\",\n\"bemad\",\n\"beman\",\n\"bemar\",\n\"bemas\",\n\"bemat\",\n\"bemba\",\n\"bemix\",\n\"bemol\",\n\"bemud\",\n\"benab\",\n\"bench\",\n\"benda\",\n\"bendy\",\n\"bends\",\n\"benes\",\n\"benet\",\n\"benic\",\n\"benim\",\n\"benin\",\n\"benjy\",\n\"benne\",\n\"benni\",\n\"benny\",\n\"bensh\",\n\"benty\",\n\"bents\",\n\"benzo\",\n\"beode\",\n\"bepat\",\n\"bepaw\",\n\"bepen\",\n\"bepun\",\n\"beray\",\n\"berat\",\n\"beret\",\n\"bergh\",\n\"bergy\",\n\"bergs\",\n\"beryl\",\n\"beryx\",\n\"berme\",\n\"berms\",\n\"berne\",\n\"berob\",\n\"beroe\",\n\"berri\",\n\"berry\",\n\"berth\",\n\"berun\",\n\"besan\",\n\"besee\",\n\"beset\",\n\"besew\",\n\"besin\",\n\"besit\",\n\"besom\",\n\"besot\",\n\"bespy\",\n\"besra\",\n\"bessi\",\n\"bessy\",\n\"bests\",\n\"betag\",\n\"betas\",\n\"betel\",\n\"betes\",\n\"beths\",\n\"betis\",\n\"beton\",\n\"betsy\",\n\"betso\",\n\"betta\",\n\"betty\",\n\"bevel\",\n\"bever\",\n\"bevil\",\n\"bevor\",\n\"bevue\",\n\"bevvy\",\n\"bewet\",\n\"bewig\",\n\"bewit\",\n\"bewry\",\n\"bezan\",\n\"bezel\",\n\"bezil\",\n\"bezzi\",\n\"bezzo\",\n\"bhaga\",\n\"bhalu\",\n\"bhang\",\n\"bhara\",\n\"bhava\",\n\"bhili\",\n\"bhima\",\n\"bhoot\",\n\"bhuts\",\n\"biabo\",\n\"biali\",\n\"bialy\",\n\"byard\",\n\"bibby\",\n\"bibbs\",\n\"bibio\",\n\"bible\",\n\"bicep\",\n\"bices\",\n\"bichy\",\n\"bidar\",\n\"biddy\",\n\"bided\",\n\"bider\",\n\"bides\",\n\"bidet\",\n\"bidri\",\n\"bidry\",\n\"bield\",\n\"biens\",\n\"biers\",\n\"bifer\",\n\"biffy\",\n\"biffs\",\n\"bifid\",\n\"bigae\",\n\"bigam\",\n\"bigas\",\n\"biggy\",\n\"bigha\",\n\"bight\",\n\"bigly\",\n\"bigot\",\n\"bihai\",\n\"biham\",\n\"bijou\",\n\"biked\",\n\"biker\",\n\"bikes\",\n\"bikie\",\n\"bikol\",\n\"bylaw\",\n\"bilbi\",\n\"bilby\",\n\"bilbo\",\n\"bilch\",\n\"biles\",\n\"bilge\",\n\"bilgy\",\n\"bilic\",\n\"bilin\",\n\"bilio\",\n\"bilks\",\n\"billa\",\n\"billy\",\n\"bills\",\n\"bilos\",\n\"bilsh\",\n\"bimah\",\n\"bimas\",\n\"bimbo\",\n\"binal\",\n\"bindi\",\n\"binds\",\n\"bines\",\n\"binge\",\n\"bingy\",\n\"bingo\",\n\"bynin\",\n\"binit\",\n\"binna\",\n\"binny\",\n\"bints\",\n\"biome\",\n\"biont\",\n\"biose\",\n\"biota\",\n\"byous\",\n\"biped\",\n\"bipod\",\n\"birch\",\n\"birde\",\n\"birdy\",\n\"birds\",\n\"byres\",\n\"birky\",\n\"birks\",\n\"birle\",\n\"birls\",\n\"byrls\",\n\"birma\",\n\"birne\",\n\"birny\",\n\"biron\",\n\"byron\",\n\"birri\",\n\"byrri\",\n\"birrs\",\n\"birse\",\n\"birsy\",\n\"birth\",\n\"bysen\",\n\"bises\",\n\"biset\",\n\"bisie\",\n\"bisks\",\n\"bisme\",\n\"bison\",\n\"byssi\",\n\"bisso\",\n\"bisti\",\n\"bitch\",\n\"bited\",\n\"biter\",\n\"bites\",\n\"bytes\",\n\"bitis\",\n\"bitsy\",\n\"bitte\",\n\"bitty\",\n\"bitts\",\n\"biune\",\n\"bivvy\",\n\"byway\",\n\"bixin\",\n\"bizel\",\n\"bizen\",\n\"bizes\",\n\"bizet\",\n\"blabs\",\n\"black\",\n\"blade\",\n\"blady\",\n\"blaff\",\n\"blahs\",\n\"blayk\",\n\"blain\",\n\"blair\",\n\"blake\",\n\"blame\",\n\"blams\",\n\"blanc\",\n\"bland\",\n\"blank\",\n\"blare\",\n\"blart\",\n\"blase\",\n\"blash\",\n\"blast\",\n\"blate\",\n\"blats\",\n\"blawn\",\n\"blaws\",\n\"blaze\",\n\"blazy\",\n\"bleak\",\n\"blear\",\n\"bleat\",\n\"blebs\",\n\"bleck\",\n\"bleed\",\n\"bleep\",\n\"blend\",\n\"blenk\",\n\"blens\",\n\"blent\",\n\"blere\",\n\"bless\",\n\"blest\",\n\"blets\",\n\"blibe\",\n\"blick\",\n\"blier\",\n\"blimy\",\n\"blimp\",\n\"blind\",\n\"blini\",\n\"bliny\",\n\"blink\",\n\"blype\",\n\"blips\",\n\"blirt\",\n\"bliss\",\n\"blist\",\n\"blite\",\n\"blitz\",\n\"blizz\",\n\"bloat\",\n\"blobs\",\n\"block\",\n\"blocs\",\n\"bloke\",\n\"blond\",\n\"blood\",\n\"bloom\",\n\"bloop\",\n\"blore\",\n\"blote\",\n\"blots\",\n\"blout\",\n\"blowy\",\n\"blown\",\n\"blows\",\n\"blued\",\n\"bluey\",\n\"bluer\",\n\"blues\",\n\"bluet\",\n\"bluff\",\n\"blume\",\n\"blunk\",\n\"blunt\",\n\"blurb\",\n\"blurs\",\n\"blurt\",\n\"blush\",\n\"board\",\n\"boars\",\n\"boart\",\n\"boast\",\n\"boats\",\n\"bobac\",\n\"bobby\",\n\"bobet\",\n\"bobol\",\n\"bocal\",\n\"bocca\",\n\"bocce\",\n\"bocci\",\n\"boche\",\n\"bocks\",\n\"bocoy\",\n\"boded\",\n\"boden\",\n\"boder\",\n\"bodes\",\n\"bodge\",\n\"bodhi\",\n\"bodle\",\n\"boers\",\n\"boffo\",\n\"boffs\",\n\"bogan\",\n\"bogey\",\n\"boget\",\n\"boggy\",\n\"bogie\",\n\"bogle\",\n\"bogue\",\n\"bogum\",\n\"bogus\",\n\"bohea\",\n\"bohor\",\n\"boyar\",\n\"boyau\",\n\"boyce\",\n\"boyer\",\n\"boiko\",\n\"boyla\",\n\"boily\",\n\"boils\",\n\"boing\",\n\"boyos\",\n\"boise\",\n\"boist\",\n\"boite\",\n\"bokom\",\n\"bokos\",\n\"bolag\",\n\"bolar\",\n\"bolas\",\n\"boldo\",\n\"boldu\",\n\"boled\",\n\"boles\",\n\"bolis\",\n\"bolly\",\n\"bolls\",\n\"bolos\",\n\"bolti\",\n\"bolty\",\n\"bolts\",\n\"bolus\",\n\"bombe\",\n\"bombo\",\n\"bombs\",\n\"bomos\",\n\"bonav\",\n\"bonbo\",\n\"bonce\",\n\"bonds\",\n\"boned\",\n\"boney\",\n\"boner\",\n\"bones\",\n\"bongo\",\n\"bongs\",\n\"bonks\",\n\"bonne\",\n\"bonny\",\n\"bonos\",\n\"bonum\",\n\"bonus\",\n\"bonze\",\n\"booby\",\n\"boobs\",\n\"boodh\",\n\"boody\",\n\"booed\",\n\"booky\",\n\"books\",\n\"booly\",\n\"boomy\",\n\"booms\",\n\"boone\",\n\"boong\",\n\"boonk\",\n\"boons\",\n\"boors\",\n\"boort\",\n\"boose\",\n\"boosy\",\n\"boost\",\n\"booth\",\n\"booty\",\n\"boots\",\n\"booze\",\n\"boozy\",\n\"borak\",\n\"boral\",\n\"boran\",\n\"boras\",\n\"borax\",\n\"bored\",\n\"boree\",\n\"borel\",\n\"borer\",\n\"bores\",\n\"borgh\",\n\"boric\",\n\"borid\",\n\"boryl\",\n\"boris\",\n\"borne\",\n\"boron\",\n\"borty\",\n\"borts\",\n\"bortz\",\n\"bosch\",\n\"bosey\",\n\"boser\",\n\"bosky\",\n\"bosks\",\n\"bosom\",\n\"boson\",\n\"bossa\",\n\"bossy\",\n\"bosun\",\n\"botan\",\n\"botas\",\n\"botch\",\n\"botel\",\n\"bothy\",\n\"botry\",\n\"botte\",\n\"botts\",\n\"bottu\",\n\"bouch\",\n\"boucl\",\n\"bouet\",\n\"bouge\",\n\"bough\",\n\"boule\",\n\"boult\",\n\"bound\",\n\"bourd\",\n\"bourg\",\n\"bourn\",\n\"bourr\",\n\"bouse\",\n\"bousy\",\n\"bouto\",\n\"bouts\",\n\"bovey\",\n\"bovid\",\n\"bovld\",\n\"bowed\",\n\"bowel\",\n\"bower\",\n\"bowet\",\n\"bowge\",\n\"bowie\",\n\"bowla\",\n\"bowle\",\n\"bowly\",\n\"bowls\",\n\"bowne\",\n\"bowse\",\n\"boxed\",\n\"boxen\",\n\"boxer\",\n\"boxes\",\n\"boxty\",\n\"bozal\",\n\"bozos\",\n\"bozze\",\n\"braca\",\n\"brace\",\n\"brach\",\n\"brack\",\n\"bract\",\n\"brads\",\n\"braes\",\n\"bragi\",\n\"brags\",\n\"brahm\",\n\"braid\",\n\"braye\",\n\"brail\",\n\"brain\",\n\"brays\",\n\"brake\",\n\"braky\",\n\"brame\",\n\"brand\",\n\"brank\",\n\"brans\",\n\"brant\",\n\"brash\",\n\"brass\",\n\"brast\",\n\"brats\",\n\"brava\",\n\"brave\",\n\"bravi\",\n\"bravo\",\n\"brawl\",\n\"brawn\",\n\"braws\",\n\"braxy\",\n\"braza\",\n\"braze\",\n\"bread\",\n\"break\",\n\"bream\",\n\"breba\",\n\"breck\",\n\"brede\",\n\"bredi\",\n\"breed\",\n\"breek\",\n\"brees\",\n\"breme\",\n\"brens\",\n\"brent\",\n\"brerd\",\n\"brere\",\n\"brest\",\n\"breth\",\n\"brett\",\n\"breva\",\n\"breve\",\n\"brevi\",\n\"brews\",\n\"brian\",\n\"bryan\",\n\"briar\",\n\"bribe\",\n\"bryce\",\n\"brick\",\n\"bride\",\n\"brief\",\n\"brier\",\n\"bries\",\n\"brigs\",\n\"brike\",\n\"brill\",\n\"brims\",\n\"brine\",\n\"bring\",\n\"briny\",\n\"brink\",\n\"brins\",\n\"bryon\",\n\"brios\",\n\"brisa\",\n\"brise\",\n\"brisk\",\n\"briss\",\n\"brist\",\n\"brite\",\n\"brith\",\n\"brits\",\n\"britt\",\n\"bryum\",\n\"briza\",\n\"brizz\",\n\"broad\",\n\"broch\",\n\"brock\",\n\"brogh\",\n\"broid\",\n\"broil\",\n\"broke\",\n\"broll\",\n\"broma\",\n\"brome\",\n\"bromo\",\n\"bronc\",\n\"bronk\",\n\"bronx\",\n\"brood\",\n\"brook\",\n\"brool\",\n\"broom\",\n\"broon\",\n\"broos\",\n\"brose\",\n\"brosy\",\n\"broth\",\n\"brott\",\n\"browd\",\n\"brown\",\n\"brows\",\n\"brubu\",\n\"bruce\",\n\"bruet\",\n\"brugh\",\n\"bruin\",\n\"bruit\",\n\"bruja\",\n\"brujo\",\n\"bruke\",\n\"brule\",\n\"brume\",\n\"brune\",\n\"bruno\",\n\"brunt\",\n\"brush\",\n\"brusk\",\n\"bruta\",\n\"brute\",\n\"bruzz\",\n\"btise\",\n\"buaze\",\n\"bubal\",\n\"bubas\",\n\"bubba\",\n\"bubby\",\n\"bubos\",\n\"bucca\",\n\"bucco\",\n\"buchu\",\n\"bucky\",\n\"bucko\",\n\"bucks\",\n\"bucku\",\n\"buddh\",\n\"buddy\",\n\"budge\",\n\"budgy\",\n\"bueno\",\n\"buffa\",\n\"buffe\",\n\"buffi\",\n\"buffy\",\n\"buffo\",\n\"buffs\",\n\"bugan\",\n\"buggy\",\n\"bught\",\n\"bugle\",\n\"bugre\",\n\"buhls\",\n\"buhrs\",\n\"buick\",\n\"buyer\",\n\"build\",\n\"built\",\n\"buist\",\n\"bukat\",\n\"bulak\",\n\"bulby\",\n\"bulbs\",\n\"bulge\",\n\"bulgy\",\n\"bulky\",\n\"bulks\",\n\"bulla\",\n\"bully\",\n\"bulls\",\n\"bulse\",\n\"bumbo\",\n\"bumfs\",\n\"bumph\",\n\"bumpy\",\n\"bumps\",\n\"bunce\",\n\"bunch\",\n\"bunco\",\n\"bunda\",\n\"bundh\",\n\"bundy\",\n\"bunds\",\n\"bundt\",\n\"bundu\",\n\"bunga\",\n\"bungy\",\n\"bungo\",\n\"bungs\",\n\"bunya\",\n\"bunko\",\n\"bunks\",\n\"bunny\",\n\"bunns\",\n\"bunty\",\n\"bunts\",\n\"buoys\",\n\"buran\",\n\"burao\",\n\"buras\",\n\"burbs\",\n\"burds\",\n\"burel\",\n\"buret\",\n\"burez\",\n\"burga\",\n\"burge\",\n\"burgh\",\n\"burgs\",\n\"burin\",\n\"burys\",\n\"burka\",\n\"burke\",\n\"burly\",\n\"burls\",\n\"burma\",\n\"burny\",\n\"burns\",\n\"burnt\",\n\"buroo\",\n\"burps\",\n\"burry\",\n\"burro\",\n\"burrs\",\n\"bursa\",\n\"burse\",\n\"burst\",\n\"burut\",\n\"busby\",\n\"bused\",\n\"buses\",\n\"bushi\",\n\"bushy\",\n\"busky\",\n\"busks\",\n\"bussy\",\n\"bussu\",\n\"busti\",\n\"busty\",\n\"busto\",\n\"busts\",\n\"butat\",\n\"butch\",\n\"butea\",\n\"buteo\",\n\"butic\",\n\"butyl\",\n\"butin\",\n\"butyn\",\n\"butyr\",\n\"butle\",\n\"butsu\",\n\"butte\",\n\"butty\",\n\"butts\",\n\"butut\",\n\"buxom\",\n\"buxus\",\n\"buzzy\",\n\"bwana\",\n\"caaba\",\n\"caama\",\n\"cabaa\",\n\"cabal\",\n\"caban\",\n\"cabas\",\n\"cabby\",\n\"cabda\",\n\"caber\",\n\"cabin\",\n\"cabio\",\n\"cable\",\n\"cabob\",\n\"cabot\",\n\"cabre\",\n\"cacam\",\n\"cacan\",\n\"cacao\",\n\"cacas\",\n\"cacei\",\n\"cache\",\n\"cacks\",\n\"cacti\",\n\"cacur\",\n\"caddy\",\n\"caddo\",\n\"cadee\",\n\"cader\",\n\"cades\",\n\"cadet\",\n\"cadew\",\n\"cadge\",\n\"cadgy\",\n\"cadie\",\n\"cadis\",\n\"cados\",\n\"cadre\",\n\"cadua\",\n\"cadus\",\n\"caeca\",\n\"cafes\",\n\"caffa\",\n\"cafiz\",\n\"cafoy\",\n\"caged\",\n\"cagey\",\n\"cager\",\n\"cages\",\n\"caggy\",\n\"cagit\",\n\"cagot\",\n\"cagui\",\n\"cahiz\",\n\"cahot\",\n\"cahow\",\n\"cahuy\",\n\"caids\",\n\"cains\",\n\"cayos\",\n\"caird\",\n\"cairn\",\n\"cairo\",\n\"caite\",\n\"cajan\",\n\"cajon\",\n\"cajou\",\n\"cajun\",\n\"caked\",\n\"cakey\",\n\"caker\",\n\"cakes\",\n\"cakra\",\n\"calas\",\n\"calci\",\n\"caleb\",\n\"calef\",\n\"calfs\",\n\"calic\",\n\"calid\",\n\"calif\",\n\"calin\",\n\"calix\",\n\"calyx\",\n\"calks\",\n\"calla\",\n\"calli\",\n\"callo\",\n\"calls\",\n\"calmy\",\n\"calms\",\n\"calor\",\n\"calve\",\n\"camay\",\n\"caman\",\n\"camas\",\n\"camel\",\n\"cameo\",\n\"cames\",\n\"camis\",\n\"camla\",\n\"campa\",\n\"campe\",\n\"campi\",\n\"campy\",\n\"campo\",\n\"camps\",\n\"camus\",\n\"canal\",\n\"canap\",\n\"canch\",\n\"candy\",\n\"caned\",\n\"canel\",\n\"caner\",\n\"canes\",\n\"cangy\",\n\"canid\",\n\"canis\",\n\"canli\",\n\"canna\",\n\"canny\",\n\"canoe\",\n\"canon\",\n\"canos\",\n\"canso\",\n\"canst\",\n\"canty\",\n\"canto\",\n\"cants\",\n\"canun\",\n\"canzo\",\n\"caoba\",\n\"capax\",\n\"caped\",\n\"capel\",\n\"caper\",\n\"capes\",\n\"caphs\",\n\"capoc\",\n\"capon\",\n\"capos\",\n\"capot\",\n\"cappy\",\n\"capra\",\n\"capri\",\n\"capsa\",\n\"caput\",\n\"caque\",\n\"carap\",\n\"carat\",\n\"carby\",\n\"carbo\",\n\"cardo\",\n\"cards\",\n\"cared\",\n\"carey\",\n\"carer\",\n\"cares\",\n\"caret\",\n\"carex\",\n\"carga\",\n\"cargo\",\n\"carya\",\n\"carib\",\n\"carid\",\n\"caryl\",\n\"carks\",\n\"carle\",\n\"carli\",\n\"carlo\",\n\"carls\",\n\"carne\",\n\"carny\",\n\"carns\",\n\"caroa\",\n\"carob\",\n\"carol\",\n\"carom\",\n\"carot\",\n\"carpe\",\n\"carpi\",\n\"carps\",\n\"carri\",\n\"carry\",\n\"carrs\",\n\"carse\",\n\"carte\",\n\"carty\",\n\"carts\",\n\"carua\",\n\"carum\",\n\"carus\",\n\"carve\",\n\"carvy\",\n\"casal\",\n\"casas\",\n\"casco\",\n\"cased\",\n\"casey\",\n\"casel\",\n\"caser\",\n\"cases\",\n\"casha\",\n\"casky\",\n\"casks\",\n\"casse\",\n\"cassy\",\n\"caste\",\n\"casts\",\n\"casus\",\n\"catan\",\n\"catch\",\n\"catel\",\n\"cater\",\n\"cates\",\n\"catha\",\n\"cathy\",\n\"catso\",\n\"catti\",\n\"catty\",\n\"catur\",\n\"cauch\",\n\"cauda\",\n\"cauld\",\n\"cauli\",\n\"caulk\",\n\"cauls\",\n\"cauma\",\n\"caupo\",\n\"causa\",\n\"cause\",\n\"cavae\",\n\"caval\",\n\"cavea\",\n\"caved\",\n\"cavey\",\n\"cavel\",\n\"caver\",\n\"caves\",\n\"cavia\",\n\"cavie\",\n\"cavil\",\n\"cavin\",\n\"cavum\",\n\"cavus\",\n\"cawed\",\n\"cawky\",\n\"cawny\",\n\"caxon\",\n\"ccitt\",\n\"ccoya\",\n\"cease\",\n\"cebid\",\n\"cebil\",\n\"cebur\",\n\"cebus\",\n\"cecal\",\n\"cecca\",\n\"cecil\",\n\"cecum\",\n\"cedar\",\n\"ceded\",\n\"ceder\",\n\"cedes\",\n\"cedis\",\n\"cedre\",\n\"cedry\",\n\"ceiba\",\n\"ceibo\",\n\"ceile\",\n\"ceils\",\n\"ceint\",\n\"celeb\",\n\"celia\",\n\"cella\",\n\"celli\",\n\"cello\",\n\"cells\",\n\"celom\",\n\"celts\",\n\"cense\",\n\"centi\",\n\"cento\",\n\"cents\",\n\"ceorl\",\n\"cepes\",\n\"cequi\",\n\"ceral\",\n\"ceras\",\n\"cerat\",\n\"cerci\",\n\"cered\",\n\"cerer\",\n\"ceres\",\n\"ceria\",\n\"ceric\",\n\"ceryl\",\n\"cerin\",\n\"ceros\",\n\"certy\",\n\"cesar\",\n\"cesta\",\n\"ceste\",\n\"cesti\",\n\"cetes\",\n\"cetic\",\n\"cetid\",\n\"cetyl\",\n\"cetin\",\n\"cetus\",\n\"chace\",\n\"chack\",\n\"chaco\",\n\"chads\",\n\"chafe\",\n\"chaff\",\n\"chaft\",\n\"chaga\",\n\"chaya\",\n\"chain\",\n\"chair\",\n\"chais\",\n\"chays\",\n\"chait\",\n\"chaja\",\n\"chaka\",\n\"chalk\",\n\"chama\",\n\"chamm\",\n\"champ\",\n\"chams\",\n\"chane\",\n\"chang\",\n\"chank\",\n\"chant\",\n\"chaos\",\n\"chape\",\n\"chaps\",\n\"chapt\",\n\"chara\",\n\"chard\",\n\"chare\",\n\"chary\",\n\"chark\",\n\"charm\",\n\"charr\",\n\"chars\",\n\"chart\",\n\"chase\",\n\"chasm\",\n\"chass\",\n\"chati\",\n\"chats\",\n\"chaui\",\n\"chauk\",\n\"chaum\",\n\"chaus\",\n\"chave\",\n\"chawk\",\n\"chawl\",\n\"chawn\",\n\"chaws\",\n\"chazy\",\n\"cheap\",\n\"cheat\",\n\"check\",\n\"cheek\",\n\"cheep\",\n\"cheer\",\n\"cheet\",\n\"chefs\",\n\"chego\",\n\"cheir\",\n\"cheka\",\n\"cheke\",\n\"cheki\",\n\"chela\",\n\"chelp\",\n\"chena\",\n\"cheng\",\n\"chera\",\n\"chere\",\n\"chert\",\n\"chese\",\n\"chess\",\n\"chest\",\n\"cheth\",\n\"cheve\",\n\"chevy\",\n\"chewy\",\n\"chews\",\n\"chyak\",\n\"chiam\",\n\"chian\",\n\"chiao\",\n\"chias\",\n\"chiba\",\n\"chica\",\n\"chich\",\n\"chick\",\n\"chico\",\n\"chics\",\n\"chide\",\n\"chief\",\n\"chiel\",\n\"chien\",\n\"child\",\n\"chile\",\n\"chyle\",\n\"chili\",\n\"chill\",\n\"chimb\",\n\"chime\",\n\"chyme\",\n\"chimp\",\n\"chimu\",\n\"china\",\n\"chine\",\n\"ching\",\n\"chink\",\n\"chino\",\n\"chins\",\n\"chint\",\n\"chiot\",\n\"chips\",\n\"chirk\",\n\"chirl\",\n\"chirm\",\n\"chiro\",\n\"chirp\",\n\"chirr\",\n\"chirt\",\n\"chiru\",\n\"chita\",\n\"chits\",\n\"chive\",\n\"chivy\",\n\"chivw\",\n\"chizz\",\n\"chloe\",\n\"chlor\",\n\"choak\",\n\"choca\",\n\"chock\",\n\"choco\",\n\"choel\",\n\"choes\",\n\"choga\",\n\"choya\",\n\"choil\",\n\"choir\",\n\"choke\",\n\"choky\",\n\"choko\",\n\"chola\",\n\"chold\",\n\"choli\",\n\"cholo\",\n\"chomp\",\n\"chonk\",\n\"chook\",\n\"choom\",\n\"choop\",\n\"chopa\",\n\"chops\",\n\"chora\",\n\"chord\",\n\"chore\",\n\"chort\",\n\"chose\",\n\"chott\",\n\"choup\",\n\"chous\",\n\"chout\",\n\"choux\",\n\"chowk\",\n\"chows\",\n\"chria\",\n\"chris\",\n\"chron\",\n\"chubb\",\n\"chubs\",\n\"chuck\",\n\"chude\",\n\"chuet\",\n\"chufa\",\n\"chuff\",\n\"chugs\",\n\"chuje\",\n\"chump\",\n\"chums\",\n\"chung\",\n\"chunk\",\n\"churl\",\n\"churm\",\n\"churn\",\n\"churr\",\n\"chuse\",\n\"chute\",\n\"chwas\",\n\"cyano\",\n\"cyans\",\n\"cyath\",\n\"cibol\",\n\"cicad\",\n\"cycad\",\n\"cycas\",\n\"cicer\",\n\"cycle\",\n\"cyclo\",\n\"cider\",\n\"cyder\",\n\"cydon\",\n\"cigar\",\n\"cigua\",\n\"cilia\",\n\"cylix\",\n\"cymae\",\n\"cymar\",\n\"cymas\",\n\"cymba\",\n\"cymes\",\n\"cimex\",\n\"cymol\",\n\"cymry\",\n\"cinch\",\n\"cinct\",\n\"cindy\",\n\"cinel\",\n\"cines\",\n\"cynic\",\n\"cions\",\n\"cippi\",\n\"cypre\",\n\"circa\",\n\"circe\",\n\"circs\",\n\"cires\",\n\"cyril\",\n\"cirri\",\n\"cyrus\",\n\"cisco\",\n\"cissy\",\n\"cista\",\n\"cists\",\n\"cysts\",\n\"cital\",\n\"cited\",\n\"citee\",\n\"citer\",\n\"cites\",\n\"cytol\",\n\"cyton\",\n\"citua\",\n\"civet\",\n\"civic\",\n\"civie\",\n\"civil\",\n\"civvy\",\n\"cizar\",\n\"clach\",\n\"clack\",\n\"clade\",\n\"clads\",\n\"claes\",\n\"clags\",\n\"claye\",\n\"claik\",\n\"claim\",\n\"clair\",\n\"clays\",\n\"clake\",\n\"clamb\",\n\"clame\",\n\"clamp\",\n\"clams\",\n\"clang\",\n\"clank\",\n\"clans\",\n\"clape\",\n\"claps\",\n\"clapt\",\n\"clara\",\n\"clare\",\n\"clary\",\n\"clark\",\n\"claro\",\n\"clart\",\n\"clash\",\n\"clasp\",\n\"class\",\n\"clast\",\n\"claus\",\n\"claut\",\n\"clava\",\n\"clave\",\n\"clavi\",\n\"clavy\",\n\"clawk\",\n\"claws\",\n\"clead\",\n\"cleam\",\n\"clean\",\n\"clear\",\n\"cleat\",\n\"cleck\",\n\"cleek\",\n\"clefs\",\n\"cleft\",\n\"clepe\",\n\"clept\",\n\"clerk\",\n\"cleuk\",\n\"cleve\",\n\"clews\",\n\"clich\",\n\"click\",\n\"clyde\",\n\"clyer\",\n\"cliff\",\n\"clift\",\n\"clima\",\n\"climb\",\n\"clime\",\n\"cline\",\n\"cling\",\n\"clink\",\n\"clint\",\n\"clype\",\n\"clips\",\n\"clipt\",\n\"clite\",\n\"clive\",\n\"cloak\",\n\"cloam\",\n\"clock\",\n\"clods\",\n\"cloes\",\n\"cloff\",\n\"clogs\",\n\"cloys\",\n\"cloit\",\n\"cloke\",\n\"cloky\",\n\"clomb\",\n\"clomp\",\n\"clone\",\n\"clong\",\n\"clonk\",\n\"clons\",\n\"cloof\",\n\"cloop\",\n\"cloot\",\n\"clops\",\n\"close\",\n\"closh\",\n\"clote\",\n\"cloth\",\n\"clots\",\n\"cloud\",\n\"clour\",\n\"clout\",\n\"clove\",\n\"clown\",\n\"cloze\",\n\"clubs\",\n\"cluck\",\n\"clued\",\n\"clues\",\n\"cluff\",\n\"clump\",\n\"clung\",\n\"clunk\",\n\"cnida\",\n\"coach\",\n\"coact\",\n\"coaid\",\n\"coala\",\n\"coaly\",\n\"coals\",\n\"coapt\",\n\"coarb\",\n\"coart\",\n\"coast\",\n\"coati\",\n\"coats\",\n\"coaxy\",\n\"cobby\",\n\"cobbs\",\n\"cobia\",\n\"coble\",\n\"cobol\",\n\"cobra\",\n\"cobus\",\n\"cocao\",\n\"cocas\",\n\"cocci\",\n\"cocco\",\n\"cocin\",\n\"cocky\",\n\"cocks\",\n\"cocle\",\n\"cocoa\",\n\"cocos\",\n\"cocus\",\n\"codal\",\n\"codas\",\n\"coddy\",\n\"codec\",\n\"coded\",\n\"coden\",\n\"coder\",\n\"codes\",\n\"codex\",\n\"codol\",\n\"codon\",\n\"coeds\",\n\"coeff\",\n\"coeno\",\n\"coffs\",\n\"cogie\",\n\"cogit\",\n\"cogon\",\n\"cogue\",\n\"cohen\",\n\"cohob\",\n\"cohog\",\n\"cohol\",\n\"cohos\",\n\"cohow\",\n\"cohue\",\n\"coyan\",\n\"coyed\",\n\"coyer\",\n\"coifs\",\n\"coign\",\n\"coyly\",\n\"coils\",\n\"coing\",\n\"coiny\",\n\"coins\",\n\"coyol\",\n\"coyos\",\n\"coypu\",\n\"coirs\",\n\"coked\",\n\"cokey\",\n\"coker\",\n\"cokes\",\n\"cokie\",\n\"colan\",\n\"colas\",\n\"colat\",\n\"colds\",\n\"coley\",\n\"colen\",\n\"coles\",\n\"colet\",\n\"colic\",\n\"colin\",\n\"colla\",\n\"colly\",\n\"colob\",\n\"colog\",\n\"colon\",\n\"color\",\n\"colts\",\n\"colza\",\n\"comae\",\n\"comal\",\n\"coman\",\n\"comas\",\n\"combe\",\n\"comby\",\n\"combo\",\n\"combs\",\n\"comdg\",\n\"comdr\",\n\"comdt\",\n\"comer\",\n\"comes\",\n\"comet\",\n\"comfy\",\n\"comic\",\n\"comid\",\n\"comma\",\n\"comme\",\n\"commy\",\n\"commo\",\n\"comox\",\n\"compd\",\n\"compo\",\n\"comps\",\n\"compt\",\n\"comte\",\n\"comus\",\n\"conal\",\n\"conch\",\n\"concn\",\n\"condo\",\n\"coned\",\n\"coney\",\n\"coner\",\n\"cones\",\n\"confr\",\n\"conga\",\n\"conge\",\n\"congo\",\n\"conia\",\n\"conic\",\n\"conin\",\n\"conky\",\n\"conks\",\n\"conli\",\n\"conny\",\n\"conns\",\n\"connu\",\n\"conoy\",\n\"conor\",\n\"consy\",\n\"const\",\n\"contd\",\n\"conte\",\n\"contg\",\n\"conto\",\n\"contr\",\n\"conus\",\n\"cooba\",\n\"cooch\",\n\"cooed\",\n\"cooee\",\n\"cooey\",\n\"cooer\",\n\"coofs\",\n\"cooja\",\n\"cooky\",\n\"cooks\",\n\"cooly\",\n\"cools\",\n\"coomb\",\n\"coomy\",\n\"coony\",\n\"coons\",\n\"coops\",\n\"coopt\",\n\"coorg\",\n\"coost\",\n\"cooth\",\n\"cooty\",\n\"coots\",\n\"copal\",\n\"coped\",\n\"copei\",\n\"copen\",\n\"coper\",\n\"copes\",\n\"copia\",\n\"copis\",\n\"coppa\",\n\"coppy\",\n\"copps\",\n\"copra\",\n\"copse\",\n\"copsy\",\n\"copus\",\n\"coque\",\n\"corah\",\n\"coral\",\n\"coram\",\n\"coran\",\n\"corbe\",\n\"corby\",\n\"cordy\",\n\"cords\",\n\"cored\",\n\"coree\",\n\"corey\",\n\"corer\",\n\"cores\",\n\"corge\",\n\"corgi\",\n\"coria\",\n\"coryl\",\n\"corin\",\n\"corke\",\n\"corky\",\n\"corks\",\n\"corms\",\n\"corny\",\n\"corno\",\n\"corns\",\n\"cornu\",\n\"coroa\",\n\"corol\",\n\"corpl\",\n\"corpn\",\n\"corps\",\n\"corse\",\n\"corsy\",\n\"corso\",\n\"corta\",\n\"corve\",\n\"corvo\",\n\"cosec\",\n\"cosed\",\n\"cosey\",\n\"cosen\",\n\"coses\",\n\"coset\",\n\"cosie\",\n\"cosin\",\n\"cosmo\",\n\"cosse\",\n\"costa\",\n\"costs\",\n\"cotan\",\n\"cotch\",\n\"coted\",\n\"cotes\",\n\"cothe\",\n\"cothy\",\n\"cotys\",\n\"cotta\",\n\"cotte\",\n\"cotty\",\n\"couac\",\n\"couch\",\n\"coude\",\n\"cough\",\n\"could\",\n\"couma\",\n\"count\",\n\"coupe\",\n\"coups\",\n\"courb\",\n\"cours\",\n\"court\",\n\"couth\",\n\"couve\",\n\"coved\",\n\"covey\",\n\"coven\",\n\"cover\",\n\"coves\",\n\"covet\",\n\"covid\",\n\"covin\",\n\"cowal\",\n\"cowan\",\n\"cowed\",\n\"cower\",\n\"cowle\",\n\"cowls\",\n\"cowry\",\n\"coxae\",\n\"coxal\",\n\"coxed\",\n\"coxes\",\n\"cozed\",\n\"cozey\",\n\"cozen\",\n\"cozes\",\n\"cozie\",\n\"craal\",\n\"crabs\",\n\"crack\",\n\"craft\",\n\"crags\",\n\"craie\",\n\"craye\",\n\"craig\",\n\"craik\",\n\"crain\",\n\"crake\",\n\"cramp\",\n\"crams\",\n\"crane\",\n\"crang\",\n\"crany\",\n\"crank\",\n\"crape\",\n\"crapy\",\n\"craps\",\n\"crare\",\n\"crash\",\n\"crass\",\n\"crate\",\n\"crave\",\n\"cravo\",\n\"crawl\",\n\"crawm\",\n\"craws\",\n\"craze\",\n\"crazy\",\n\"crcao\",\n\"crche\",\n\"cread\",\n\"creak\",\n\"cream\",\n\"creat\",\n\"creda\",\n\"credo\",\n\"creed\",\n\"creek\",\n\"creel\",\n\"creem\",\n\"creen\",\n\"creep\",\n\"crees\",\n\"creme\",\n\"crena\",\n\"crepe\",\n\"crepy\",\n\"crept\",\n\"cresc\",\n\"cress\",\n\"crest\",\n\"creta\",\n\"crete\",\n\"crewe\",\n\"crews\",\n\"cryal\",\n\"cribo\",\n\"cribs\",\n\"crick\",\n\"cried\",\n\"criey\",\n\"crier\",\n\"cries\",\n\"crile\",\n\"crime\",\n\"crimp\",\n\"crine\",\n\"crink\",\n\"crips\",\n\"crypt\",\n\"crisp\",\n\"criss\",\n\"cryst\",\n\"crith\",\n\"croak\",\n\"croat\",\n\"croci\",\n\"crock\",\n\"croft\",\n\"croyl\",\n\"crois\",\n\"crome\",\n\"crone\",\n\"crony\",\n\"cronk\",\n\"crood\",\n\"crook\",\n\"crool\",\n\"croon\",\n\"crops\",\n\"crore\",\n\"crosa\",\n\"crose\",\n\"cross\",\n\"crost\",\n\"croup\",\n\"crout\",\n\"crowd\",\n\"crowl\",\n\"crown\",\n\"crows\",\n\"croze\",\n\"cruce\",\n\"cruck\",\n\"crude\",\n\"crudy\",\n\"cruds\",\n\"cruel\",\n\"cruet\",\n\"crull\",\n\"crumb\",\n\"crump\",\n\"crunk\",\n\"crunt\",\n\"cruor\",\n\"crura\",\n\"cruse\",\n\"crush\",\n\"crust\",\n\"cruth\",\n\"crwth\",\n\"csect\",\n\"csnet\",\n\"ctene\",\n\"ctimo\",\n\"cuban\",\n\"cubas\",\n\"cubby\",\n\"cubeb\",\n\"cubed\",\n\"cuber\",\n\"cubes\",\n\"cubic\",\n\"cubit\",\n\"cubla\",\n\"cubti\",\n\"cucuy\",\n\"cuddy\",\n\"cueca\",\n\"cueva\",\n\"cuffy\",\n\"cuffs\",\n\"cufic\",\n\"cuyas\",\n\"cuifs\",\n\"cuing\",\n\"cuish\",\n\"cujam\",\n\"cukes\",\n\"culch\",\n\"culet\",\n\"culex\",\n\"culla\",\n\"cully\",\n\"culls\",\n\"culmy\",\n\"culms\",\n\"culot\",\n\"culpa\",\n\"culti\",\n\"cults\",\n\"cumay\",\n\"cumal\",\n\"cumar\",\n\"cumbu\",\n\"cumic\",\n\"cumyl\",\n\"cumin\",\n\"cumly\",\n\"cumol\",\n\"cunan\",\n\"cunas\",\n\"cundy\",\n\"cunea\",\n\"cunei\",\n\"cunye\",\n\"cunit\",\n\"cunni\",\n\"cunny\",\n\"cunts\",\n\"cunza\",\n\"cupay\",\n\"cupel\",\n\"cupid\",\n\"cuppa\",\n\"cuppy\",\n\"curat\",\n\"curby\",\n\"curbs\",\n\"curch\",\n\"curdy\",\n\"curds\",\n\"cured\",\n\"curer\",\n\"cures\",\n\"curet\",\n\"curfs\",\n\"curia\",\n\"curie\",\n\"curin\",\n\"curio\",\n\"curly\",\n\"curls\",\n\"curns\",\n\"curry\",\n\"currs\",\n\"cursa\",\n\"curse\",\n\"curst\",\n\"curua\",\n\"curve\",\n\"curvy\",\n\"cusec\",\n\"cushy\",\n\"cusie\",\n\"cusks\",\n\"cusps\",\n\"cusso\",\n\"cutch\",\n\"cutey\",\n\"cuter\",\n\"cutes\",\n\"cutie\",\n\"cutin\",\n\"cutis\",\n\"cutty\",\n\"cutup\",\n\"cuvee\",\n\"czars\",\n\"czech\",\n\"dabba\",\n\"dabby\",\n\"dabih\",\n\"dabuh\",\n\"daces\",\n\"dacha\",\n\"dachs\",\n\"dacus\",\n\"dadap\",\n\"dadas\",\n\"daddy\",\n\"dados\",\n\"daeva\",\n\"daffy\",\n\"daffs\",\n\"dafla\",\n\"dagga\",\n\"daggy\",\n\"dagon\",\n\"dagos\",\n\"dahms\",\n\"dayak\",\n\"dayal\",\n\"dayan\",\n\"daijo\",\n\"daily\",\n\"daint\",\n\"daira\",\n\"dairi\",\n\"dairy\",\n\"dairt\",\n\"daisy\",\n\"daiva\",\n\"daker\",\n\"dakir\",\n\"dalai\",\n\"dalan\",\n\"dalar\",\n\"dalea\",\n\"daler\",\n\"dales\",\n\"dalis\",\n\"dalle\",\n\"dally\",\n\"daman\",\n\"damar\",\n\"damas\",\n\"dames\",\n\"damia\",\n\"damie\",\n\"damme\",\n\"damns\",\n\"damon\",\n\"dampy\",\n\"damps\",\n\"danae\",\n\"danai\",\n\"dance\",\n\"dancy\",\n\"danda\",\n\"dandy\",\n\"danes\",\n\"dangs\",\n\"danic\",\n\"danio\",\n\"danke\",\n\"danli\",\n\"danny\",\n\"dansy\",\n\"dansk\",\n\"danta\",\n\"dante\",\n\"darac\",\n\"daraf\",\n\"darat\",\n\"darby\",\n\"darbs\",\n\"darci\",\n\"darcy\",\n\"dared\",\n\"daren\",\n\"darer\",\n\"dares\",\n\"dargo\",\n\"darya\",\n\"daric\",\n\"darii\",\n\"daryl\",\n\"darin\",\n\"darky\",\n\"darks\",\n\"darns\",\n\"daroo\",\n\"darst\",\n\"darts\",\n\"dashy\",\n\"dasht\",\n\"dasya\",\n\"dasnt\",\n\"dassy\",\n\"datch\",\n\"dated\",\n\"dater\",\n\"dates\",\n\"datil\",\n\"datos\",\n\"datsw\",\n\"datto\",\n\"datum\",\n\"daube\",\n\"dauby\",\n\"daubs\",\n\"dauke\",\n\"dault\",\n\"daunt\",\n\"dauri\",\n\"dauts\",\n\"daven\",\n\"daver\",\n\"david\",\n\"davis\",\n\"davit\",\n\"dawdy\",\n\"dawed\",\n\"dawen\",\n\"dawks\",\n\"dawny\",\n\"dawns\",\n\"dawts\",\n\"dawut\",\n\"dazed\",\n\"dazes\",\n\"deady\",\n\"deads\",\n\"deair\",\n\"deals\",\n\"dealt\",\n\"deans\",\n\"deare\",\n\"deary\",\n\"dearn\",\n\"dears\",\n\"deash\",\n\"death\",\n\"deave\",\n\"debag\",\n\"debar\",\n\"debat\",\n\"debby\",\n\"debel\",\n\"deben\",\n\"debye\",\n\"debit\",\n\"debts\",\n\"debug\",\n\"debus\",\n\"debut\",\n\"decad\",\n\"decay\",\n\"decal\",\n\"decan\",\n\"decap\",\n\"decem\",\n\"decil\",\n\"decyl\",\n\"decke\",\n\"decks\",\n\"decoy\",\n\"decor\",\n\"decry\",\n\"decus\",\n\"dedal\",\n\"dedan\",\n\"deddy\",\n\"dedit\",\n\"deedy\",\n\"deeds\",\n\"deems\",\n\"deeny\",\n\"deeps\",\n\"deers\",\n\"deess\",\n\"defat\",\n\"defer\",\n\"defet\",\n\"defis\",\n\"defix\",\n\"defog\",\n\"degas\",\n\"degum\",\n\"deice\",\n\"deify\",\n\"deign\",\n\"deils\",\n\"deink\",\n\"deino\",\n\"deynt\",\n\"deism\",\n\"deist\",\n\"deity\",\n\"deked\",\n\"dekes\",\n\"dekko\",\n\"dekle\",\n\"delay\",\n\"delaw\",\n\"deled\",\n\"deles\",\n\"delfs\",\n\"delft\",\n\"delhi\",\n\"delia\",\n\"delim\",\n\"delis\",\n\"delit\",\n\"della\",\n\"delly\",\n\"dells\",\n\"deloo\",\n\"delph\",\n\"delta\",\n\"delve\",\n\"demal\",\n\"demes\",\n\"demit\",\n\"demob\",\n\"demon\",\n\"demos\",\n\"demot\",\n\"demur\",\n\"denay\",\n\"denar\",\n\"denat\",\n\"denda\",\n\"deneb\",\n\"denes\",\n\"denim\",\n\"denis\",\n\"denom\",\n\"dense\",\n\"denty\",\n\"dents\",\n\"deota\",\n\"depas\",\n\"depel\",\n\"depit\",\n\"depoh\",\n\"depot\",\n\"depth\",\n\"derah\",\n\"deray\",\n\"derat\",\n\"derby\",\n\"derek\",\n\"deric\",\n\"deriv\",\n\"derma\",\n\"derms\",\n\"derog\",\n\"derri\",\n\"derry\",\n\"derth\",\n\"derve\",\n\"desex\",\n\"desyl\",\n\"desks\",\n\"desma\",\n\"dessa\",\n\"desto\",\n\"detar\",\n\"detat\",\n\"detax\",\n\"deter\",\n\"detin\",\n\"dette\",\n\"detur\",\n\"deuce\",\n\"deval\",\n\"devas\",\n\"devel\",\n\"devex\",\n\"devil\",\n\"devon\",\n\"devot\",\n\"devow\",\n\"dewal\",\n\"dewan\",\n\"dewar\",\n\"dewax\",\n\"dewed\",\n\"dewey\",\n\"dewer\",\n\"dexes\",\n\"dhabb\",\n\"dhaks\",\n\"dhava\",\n\"dheri\",\n\"dhyal\",\n\"dhikr\",\n\"dhobi\",\n\"dhoby\",\n\"dhole\",\n\"dhoni\",\n\"dhoon\",\n\"dhoti\",\n\"dhoty\",\n\"dhoul\",\n\"dhows\",\n\"dhuti\",\n\"diact\",\n\"dyads\",\n\"diaka\",\n\"dials\",\n\"diamb\",\n\"diana\",\n\"diane\",\n\"diary\",\n\"dyaus\",\n\"diazo\",\n\"diced\",\n\"dicey\",\n\"dicer\",\n\"dices\",\n\"dicht\",\n\"dicky\",\n\"dicks\",\n\"dicot\",\n\"dicta\",\n\"dicty\",\n\"didal\",\n\"diddy\",\n\"didie\",\n\"didym\",\n\"didle\",\n\"didna\",\n\"didnt\",\n\"didos\",\n\"didst\",\n\"didus\",\n\"diego\",\n\"diene\",\n\"dieri\",\n\"dyers\",\n\"diety\",\n\"diets\",\n\"difda\",\n\"dight\",\n\"digit\",\n\"digne\",\n\"digor\",\n\"digue\",\n\"dying\",\n\"diked\",\n\"dyked\",\n\"diker\",\n\"dyker\",\n\"dikes\",\n\"dykes\",\n\"dylan\",\n\"dildo\",\n\"dilis\",\n\"dilli\",\n\"dilly\",\n\"dills\",\n\"dilos\",\n\"dimer\",\n\"dimes\",\n\"dimin\",\n\"dimit\",\n\"dimly\",\n\"dimmy\",\n\"dimna\",\n\"dimps\",\n\"dinah\",\n\"dynam\",\n\"dinar\",\n\"dined\",\n\"dynel\",\n\"diner\",\n\"dines\",\n\"dynes\",\n\"dinge\",\n\"dingy\",\n\"dingo\",\n\"dings\",\n\"dinic\",\n\"dinka\",\n\"dinky\",\n\"dinks\",\n\"dinos\",\n\"dints\",\n\"dinus\",\n\"diode\",\n\"diols\",\n\"dione\",\n\"dioon\",\n\"diose\",\n\"diota\",\n\"dioti\",\n\"dioxy\",\n\"diple\",\n\"dippy\",\n\"dipsy\",\n\"dipso\",\n\"dipus\",\n\"dirca\",\n\"direr\",\n\"direx\",\n\"dirge\",\n\"dirgy\",\n\"dirks\",\n\"dirls\",\n\"dirty\",\n\"dirts\",\n\"disci\",\n\"disco\",\n\"discs\",\n\"dishy\",\n\"disks\",\n\"disli\",\n\"disme\",\n\"disna\",\n\"disty\",\n\"distn\",\n\"distr\",\n\"dital\",\n\"ditas\",\n\"ditch\",\n\"diter\",\n\"dites\",\n\"ditty\",\n\"ditto\",\n\"diurn\",\n\"divan\",\n\"divas\",\n\"dived\",\n\"divel\",\n\"diver\",\n\"dives\",\n\"divet\",\n\"divia\",\n\"divid\",\n\"divot\",\n\"divus\",\n\"divvy\",\n\"diwan\",\n\"dixie\",\n\"dixit\",\n\"dizen\",\n\"dizzy\",\n\"djave\",\n\"djinn\",\n\"djins\",\n\"djuka\",\n\"doand\",\n\"doaty\",\n\"doats\",\n\"dobby\",\n\"dobie\",\n\"dobla\",\n\"dobos\",\n\"dobra\",\n\"docks\",\n\"doddy\",\n\"dodge\",\n\"dodgy\",\n\"dodos\",\n\"doers\",\n\"doesn\",\n\"doest\",\n\"doeth\",\n\"doffs\",\n\"dogal\",\n\"dogey\",\n\"doges\",\n\"doggy\",\n\"doggo\",\n\"dogie\",\n\"dogly\",\n\"dogma\",\n\"dogra\",\n\"doyen\",\n\"doigt\",\n\"doyle\",\n\"doily\",\n\"doyly\",\n\"doylt\",\n\"doina\",\n\"doing\",\n\"doyst\",\n\"doits\",\n\"dojos\",\n\"dolce\",\n\"dolci\",\n\"doled\",\n\"doley\",\n\"doles\",\n\"dolia\",\n\"dolly\",\n\"dolls\",\n\"dolor\",\n\"dolos\",\n\"dolph\",\n\"dolts\",\n\"dolus\",\n\"domal\",\n\"domba\",\n\"domed\",\n\"domer\",\n\"domes\",\n\"domic\",\n\"dompt\",\n\"domus\",\n\"donal\",\n\"donar\",\n\"donas\",\n\"donat\",\n\"donax\",\n\"doncy\",\n\"donec\",\n\"donee\",\n\"doney\",\n\"donet\",\n\"donga\",\n\"dongs\",\n\"donia\",\n\"donis\",\n\"donna\",\n\"donne\",\n\"donny\",\n\"donor\",\n\"donsy\",\n\"donum\",\n\"donut\",\n\"dooja\",\n\"dooli\",\n\"dooly\",\n\"dooms\",\n\"doors\",\n\"doozy\",\n\"dopas\",\n\"doped\",\n\"dopey\",\n\"doper\",\n\"dopes\",\n\"dorab\",\n\"dorad\",\n\"doray\",\n\"doree\",\n\"dorey\",\n\"doria\",\n\"doric\",\n\"doris\",\n\"dorje\",\n\"dormy\",\n\"dorms\",\n\"dorps\",\n\"dorrs\",\n\"dorsa\",\n\"dorse\",\n\"dorsi\",\n\"dorty\",\n\"dorts\",\n\"dosed\",\n\"doser\",\n\"doses\",\n\"dosis\",\n\"dossy\",\n\"dotal\",\n\"doted\",\n\"doter\",\n\"dotes\",\n\"dotty\",\n\"douar\",\n\"doubt\",\n\"douce\",\n\"dough\",\n\"dougl\",\n\"douma\",\n\"doura\",\n\"douse\",\n\"dovey\",\n\"doven\",\n\"dover\",\n\"doves\",\n\"dowdy\",\n\"dowed\",\n\"dowel\",\n\"dower\",\n\"dowie\",\n\"dowly\",\n\"downy\",\n\"downs\",\n\"dowry\",\n\"dowse\",\n\"dowve\",\n\"doxie\",\n\"dozed\",\n\"dozen\",\n\"dozer\",\n\"dozes\",\n\"draba\",\n\"drabs\",\n\"draco\",\n\"draff\",\n\"draft\",\n\"drago\",\n\"drags\",\n\"drail\",\n\"drain\",\n\"drays\",\n\"drake\",\n\"drama\",\n\"drame\",\n\"dramm\",\n\"drams\",\n\"drang\",\n\"drank\",\n\"drant\",\n\"drape\",\n\"drate\",\n\"drats\",\n\"drave\",\n\"drawk\",\n\"drawl\",\n\"drawn\",\n\"draws\",\n\"dread\",\n\"dream\",\n\"drear\",\n\"dreck\",\n\"dreed\",\n\"dreep\",\n\"drees\",\n\"dregs\",\n\"dreks\",\n\"dreng\",\n\"drent\",\n\"dress\",\n\"drest\",\n\"dryad\",\n\"drias\",\n\"dryas\",\n\"dribs\",\n\"dried\",\n\"drier\",\n\"dryer\",\n\"dries\",\n\"drift\",\n\"drily\",\n\"dryly\",\n\"drill\",\n\"drink\",\n\"drinn\",\n\"drips\",\n\"dript\",\n\"drisk\",\n\"dryth\",\n\"drive\",\n\"drogh\",\n\"droil\",\n\"droyl\",\n\"droit\",\n\"droll\",\n\"drome\",\n\"drona\",\n\"drone\",\n\"drony\",\n\"droob\",\n\"drool\",\n\"droop\",\n\"drops\",\n\"dropt\",\n\"dross\",\n\"droud\",\n\"drouk\",\n\"drove\",\n\"drovy\",\n\"drown\",\n\"drubs\",\n\"drugs\",\n\"druid\",\n\"drums\",\n\"drung\",\n\"drunk\",\n\"drunt\",\n\"drupa\",\n\"drupe\",\n\"drury\",\n\"druse\",\n\"drusy\",\n\"druxy\",\n\"druze\",\n\"dsect\",\n\"dtset\",\n\"duads\",\n\"duala\",\n\"duali\",\n\"duals\",\n\"duane\",\n\"duant\",\n\"dubba\",\n\"dubby\",\n\"dubhe\",\n\"dubio\",\n\"ducal\",\n\"ducat\",\n\"duces\",\n\"duchy\",\n\"ducky\",\n\"ducks\",\n\"ducts\",\n\"duddy\",\n\"dudes\",\n\"duels\",\n\"duets\",\n\"duffy\",\n\"duffs\",\n\"dugal\",\n\"duhat\",\n\"duits\",\n\"dujan\",\n\"dukes\",\n\"dukhn\",\n\"dulat\",\n\"dulce\",\n\"duler\",\n\"dulia\",\n\"dully\",\n\"dulls\",\n\"dulse\",\n\"dumas\",\n\"dumba\",\n\"dumby\",\n\"dumbs\",\n\"dumka\",\n\"dumky\",\n\"dummy\",\n\"dumpy\",\n\"dumps\",\n\"dunal\",\n\"dunce\",\n\"dunch\",\n\"dunes\",\n\"dungy\",\n\"dungs\",\n\"dunks\",\n\"dunne\",\n\"dunny\",\n\"dunno\",\n\"dunst\",\n\"dunts\",\n\"duole\",\n\"duomi\",\n\"duomo\",\n\"duped\",\n\"duper\",\n\"dupes\",\n\"dupla\",\n\"duple\",\n\"duply\",\n\"duppa\",\n\"duppy\",\n\"dural\",\n\"duras\",\n\"durax\",\n\"dured\",\n\"duree\",\n\"dures\",\n\"duret\",\n\"duryl\",\n\"durio\",\n\"durns\",\n\"duroc\",\n\"duroy\",\n\"duros\",\n\"durra\",\n\"durry\",\n\"durrs\",\n\"durst\",\n\"durum\",\n\"durzi\",\n\"dusio\",\n\"dusky\",\n\"dusks\",\n\"dusty\",\n\"dusts\",\n\"dusun\",\n\"dutch\",\n\"dutra\",\n\"duvet\",\n\"duxes\",\n\"dvigu\",\n\"dwale\",\n\"dwalm\",\n\"dwang\",\n\"dwarf\",\n\"dwell\",\n\"dwelt\",\n\"dwyka\",\n\"dwine\",\n\"eably\",\n\"eager\",\n\"eagle\",\n\"eagre\",\n\"eared\",\n\"earle\",\n\"early\",\n\"earls\",\n\"earns\",\n\"earsh\",\n\"earth\",\n\"eased\",\n\"easel\",\n\"easer\",\n\"eases\",\n\"easts\",\n\"eaten\",\n\"eater\",\n\"eaved\",\n\"eaver\",\n\"eaves\",\n\"ebbed\",\n\"ebbet\",\n\"eblis\",\n\"ebony\",\n\"ebons\",\n\"ecart\",\n\"echar\",\n\"echea\",\n\"eched\",\n\"eches\",\n\"echis\",\n\"echos\",\n\"ecize\",\n\"eclat\",\n\"ecoid\",\n\"ecole\",\n\"ecrus\",\n\"ectad\",\n\"ectal\",\n\"edana\",\n\"edder\",\n\"eddic\",\n\"eddie\",\n\"edema\",\n\"edgar\",\n\"edged\",\n\"edger\",\n\"edges\",\n\"edict\",\n\"edify\",\n\"ediya\",\n\"edile\",\n\"edith\",\n\"edits\",\n\"edoni\",\n\"educe\",\n\"educt\",\n\"edwin\",\n\"eeler\",\n\"eemis\",\n\"eerie\",\n\"eeten\",\n\"effet\",\n\"effie\",\n\"egads\",\n\"egall\",\n\"egers\",\n\"egest\",\n\"eggar\",\n\"egged\",\n\"egger\",\n\"egypt\",\n\"egret\",\n\"egrid\",\n\"eyass\",\n\"eider\",\n\"eidos\",\n\"eyers\",\n\"eyess\",\n\"eight\",\n\"eyght\",\n\"eigne\",\n\"eying\",\n\"eikon\",\n\"eimak\",\n\"eimer\",\n\"eyoty\",\n\"eyrar\",\n\"eyras\",\n\"eyren\",\n\"eyrer\",\n\"eyres\",\n\"eyrie\",\n\"eyrir\",\n\"eject\",\n\"ejido\",\n\"ejusd\",\n\"ekaha\",\n\"eking\",\n\"ekron\",\n\"elaic\",\n\"elayl\",\n\"elain\",\n\"elamp\",\n\"eland\",\n\"elans\",\n\"elaps\",\n\"elate\",\n\"elbow\",\n\"elder\",\n\"eldin\",\n\"elean\",\n\"elect\",\n\"elegy\",\n\"eleme\",\n\"elemi\",\n\"eleut\",\n\"eleve\",\n\"elfic\",\n\"elfin\",\n\"elian\",\n\"elias\",\n\"elide\",\n\"elihu\",\n\"elymi\",\n\"eliot\",\n\"elite\",\n\"eliza\",\n\"ellan\",\n\"ellen\",\n\"elmer\",\n\"eloah\",\n\"eloge\",\n\"elogy\",\n\"eloin\",\n\"elong\",\n\"elope\",\n\"elops\",\n\"elric\",\n\"elses\",\n\"elsin\",\n\"elude\",\n\"elute\",\n\"elvan\",\n\"elver\",\n\"elves\",\n\"elvet\",\n\"elvis\",\n\"email\",\n\"emane\",\n\"embay\",\n\"embar\",\n\"embed\",\n\"ember\",\n\"embog\",\n\"embow\",\n\"embox\",\n\"embue\",\n\"embus\",\n\"emcee\",\n\"emden\",\n\"emeer\",\n\"emend\",\n\"emery\",\n\"emesa\",\n\"emeus\",\n\"emyde\",\n\"emyds\",\n\"emigr\",\n\"emily\",\n\"emirs\",\n\"emits\",\n\"emlen\",\n\"emmer\",\n\"emmet\",\n\"emmew\",\n\"emong\",\n\"emony\",\n\"emory\",\n\"emote\",\n\"emove\",\n\"empeo\",\n\"empty\",\n\"emule\",\n\"emuls\",\n\"enact\",\n\"enage\",\n\"enami\",\n\"enapt\",\n\"enarm\",\n\"enate\",\n\"encia\",\n\"encyc\",\n\"encup\",\n\"ended\",\n\"ender\",\n\"endew\",\n\"endia\",\n\"endow\",\n\"endue\",\n\"eneas\",\n\"eneid\",\n\"enema\",\n\"enemy\",\n\"enent\",\n\"enfin\",\n\"engem\",\n\"engin\",\n\"engle\",\n\"enhat\",\n\"eniac\",\n\"enjoy\",\n\"enlay\",\n\"enmew\",\n\"ennew\",\n\"ennia\",\n\"ennoy\",\n\"ennui\",\n\"enoch\",\n\"enode\",\n\"enoil\",\n\"enols\",\n\"enorm\",\n\"enorn\",\n\"enows\",\n\"enpia\",\n\"enray\",\n\"enrib\",\n\"enrol\",\n\"enrut\",\n\"ensky\",\n\"ensue\",\n\"entad\",\n\"ental\",\n\"entea\",\n\"enter\",\n\"entia\",\n\"entom\",\n\"entre\",\n\"entry\",\n\"entte\",\n\"enure\",\n\"envoi\",\n\"envoy\",\n\"enweb\",\n\"enzym\",\n\"eoith\",\n\"eosin\",\n\"epact\",\n\"epees\",\n\"epeus\",\n\"ephah\",\n\"ephas\",\n\"ephod\",\n\"ephoi\",\n\"ephor\",\n\"epics\",\n\"epiky\",\n\"epist\",\n\"eplot\",\n\"epoch\",\n\"epode\",\n\"epopt\",\n\"epoxy\",\n\"eppes\",\n\"eppie\",\n\"epris\",\n\"epsom\",\n\"epulo\",\n\"equal\",\n\"eques\",\n\"equid\",\n\"equip\",\n\"equiv\",\n\"equus\",\n\"erade\",\n\"erase\",\n\"erato\",\n\"erava\",\n\"erbia\",\n\"erect\",\n\"erept\",\n\"ergal\",\n\"ergon\",\n\"ergot\",\n\"erian\",\n\"erica\",\n\"erick\",\n\"erika\",\n\"eryon\",\n\"erizo\",\n\"ermit\",\n\"ernes\",\n\"ernie\",\n\"ernst\",\n\"erode\",\n\"erose\",\n\"erred\",\n\"erron\",\n\"error\",\n\"ersar\",\n\"erses\",\n\"eruca\",\n\"eruct\",\n\"erugo\",\n\"erump\",\n\"erupt\",\n\"ervil\",\n\"ervum\",\n\"erwin\",\n\"esbay\",\n\"escar\",\n\"escot\",\n\"escry\",\n\"esere\",\n\"eshin\",\n\"eskar\",\n\"esker\",\n\"espec\",\n\"esrog\",\n\"essay\",\n\"essed\",\n\"essee\",\n\"esses\",\n\"essex\",\n\"essie\",\n\"estab\",\n\"ester\",\n\"estoc\",\n\"estop\",\n\"estre\",\n\"estus\",\n\"etang\",\n\"etape\",\n\"ethal\",\n\"ethan\",\n\"ethel\",\n\"ether\",\n\"ethic\",\n\"ethid\",\n\"ethyl\",\n\"ethos\",\n\"etiam\",\n\"etyma\",\n\"etnas\",\n\"etrog\",\n\"ettle\",\n\"etude\",\n\"etuis\",\n\"etuve\",\n\"etwas\",\n\"etwee\",\n\"eucre\",\n\"eucti\",\n\"euler\",\n\"eupad\",\n\"euros\",\n\"eurus\",\n\"eusol\",\n\"evade\",\n\"evang\",\n\"evans\",\n\"evase\",\n\"eveck\",\n\"evene\",\n\"evens\",\n\"event\",\n\"every\",\n\"evert\",\n\"evese\",\n\"evict\",\n\"evils\",\n\"evite\",\n\"evoke\",\n\"ewder\",\n\"ewery\",\n\"ewers\",\n\"ewest\",\n\"ewhow\",\n\"ewing\",\n\"exact\",\n\"exalt\",\n\"exams\",\n\"exaun\",\n\"excel\",\n\"excud\",\n\"excur\",\n\"exdie\",\n\"exeat\",\n\"execs\",\n\"exect\",\n\"exede\",\n\"exert\",\n\"exhbn\",\n\"exies\",\n\"exile\",\n\"exine\",\n\"exing\",\n\"exion\",\n\"exist\",\n\"exite\",\n\"exits\",\n\"exlex\",\n\"exode\",\n\"exody\",\n\"exopt\",\n\"expdt\",\n\"expel\",\n\"expos\",\n\"exptl\",\n\"expwy\",\n\"exsec\",\n\"exter\",\n\"extol\",\n\"extra\",\n\"exude\",\n\"exult\",\n\"exurb\",\n\"exust\",\n\"exxon\",\n\"faade\",\n\"fabes\",\n\"fable\",\n\"faced\",\n\"facer\",\n\"faces\",\n\"facet\",\n\"facia\",\n\"facie\",\n\"facit\",\n\"facks\",\n\"facty\",\n\"facto\",\n\"facts\",\n\"faddy\",\n\"faded\",\n\"faden\",\n\"fader\",\n\"fades\",\n\"fadge\",\n\"fadme\",\n\"fados\",\n\"faena\",\n\"faery\",\n\"faffy\",\n\"fager\",\n\"fagin\",\n\"fagot\",\n\"fagus\",\n\"faham\",\n\"fayal\",\n\"fayed\",\n\"fails\",\n\"fains\",\n\"faint\",\n\"faire\",\n\"fairy\",\n\"fairm\",\n\"fairs\",\n\"faith\",\n\"faits\",\n\"faked\",\n\"faker\",\n\"fakes\",\n\"fakir\",\n\"falco\",\n\"falda\",\n\"falla\",\n\"fally\",\n\"falls\",\n\"false\",\n\"falun\",\n\"falus\",\n\"famed\",\n\"fames\",\n\"fanal\",\n\"fanam\",\n\"fancy\",\n\"fanes\",\n\"fanga\",\n\"fangy\",\n\"fango\",\n\"fangs\",\n\"fanit\",\n\"fanny\",\n\"fanon\",\n\"fanos\",\n\"fanti\",\n\"fanum\",\n\"fanwe\",\n\"faqir\",\n\"farad\",\n\"farce\",\n\"farci\",\n\"farcy\",\n\"farde\",\n\"fardh\",\n\"fardo\",\n\"fards\",\n\"fared\",\n\"farer\",\n\"fares\",\n\"fario\",\n\"farle\",\n\"farls\",\n\"farmy\",\n\"farms\",\n\"faros\",\n\"farse\",\n\"farsi\",\n\"farth\",\n\"farts\",\n\"fasti\",\n\"fasts\",\n\"fatal\",\n\"fated\",\n\"fates\",\n\"fatil\",\n\"fatly\",\n\"fator\",\n\"fatso\",\n\"fatty\",\n\"fatwa\",\n\"faugh\",\n\"fauld\",\n\"fault\",\n\"faulx\",\n\"fauna\",\n\"fauns\",\n\"faurd\",\n\"fause\",\n\"faust\",\n\"faute\",\n\"fauve\",\n\"favel\",\n\"favor\",\n\"favus\",\n\"fawny\",\n\"fawns\",\n\"faxed\",\n\"faxes\",\n\"fazed\",\n\"fazes\",\n\"fchar\",\n\"fcomp\",\n\"fconv\",\n\"fdubs\",\n\"fears\",\n\"fease\",\n\"feast\",\n\"featy\",\n\"feats\",\n\"feaze\",\n\"fecal\",\n\"feces\",\n\"fecit\",\n\"fecks\",\n\"fedia\",\n\"feedy\",\n\"feeds\",\n\"feely\",\n\"feels\",\n\"feere\",\n\"feest\",\n\"feeze\",\n\"feyer\",\n\"feign\",\n\"feint\",\n\"feist\",\n\"felid\",\n\"felis\",\n\"felix\",\n\"fella\",\n\"felly\",\n\"fells\",\n\"felon\",\n\"felty\",\n\"felts\",\n\"felup\",\n\"femes\",\n\"femic\",\n\"femme\",\n\"femur\",\n\"fence\",\n\"fendy\",\n\"fends\",\n\"fenks\",\n\"fenny\",\n\"feods\",\n\"feoff\",\n\"ferae\",\n\"feral\",\n\"feres\",\n\"feria\",\n\"ferie\",\n\"ferio\",\n\"ferly\",\n\"ferme\",\n\"fermi\",\n\"ferny\",\n\"ferns\",\n\"ferox\",\n\"ferri\",\n\"ferry\",\n\"ferth\",\n\"fesse\",\n\"festa\",\n\"feste\",\n\"festy\",\n\"fetal\",\n\"fetas\",\n\"fetch\",\n\"feted\",\n\"fetes\",\n\"fetid\",\n\"fetis\",\n\"fetor\",\n\"fetus\",\n\"fetwa\",\n\"feuar\",\n\"feuds\",\n\"feued\",\n\"feute\",\n\"fever\",\n\"fewer\",\n\"fezes\",\n\"fezzy\",\n\"fgrid\",\n\"fhrer\",\n\"fiant\",\n\"fiard\",\n\"fiars\",\n\"fiats\",\n\"fiber\",\n\"fibra\",\n\"fibre\",\n\"fibry\",\n\"fibro\",\n\"fices\",\n\"fyces\",\n\"fiche\",\n\"fichu\",\n\"ficin\",\n\"ficus\",\n\"fidac\",\n\"fidel\",\n\"fides\",\n\"fidge\",\n\"fidia\",\n\"fidos\",\n\"fiefs\",\n\"field\",\n\"fiend\",\n\"fient\",\n\"fieri\",\n\"fiery\",\n\"fifed\",\n\"fifer\",\n\"fifes\",\n\"fifie\",\n\"fifth\",\n\"fifty\",\n\"figgy\",\n\"fight\",\n\"fiked\",\n\"fikey\",\n\"fykes\",\n\"fikie\",\n\"filao\",\n\"filar\",\n\"filch\",\n\"filea\",\n\"filed\",\n\"filer\",\n\"files\",\n\"filet\",\n\"filii\",\n\"filix\",\n\"filla\",\n\"fille\",\n\"filly\",\n\"fills\",\n\"filmy\",\n\"films\",\n\"filth\",\n\"filum\",\n\"final\",\n\"finca\",\n\"finch\",\n\"findy\",\n\"finds\",\n\"fined\",\n\"finer\",\n\"fines\",\n\"finew\",\n\"fingu\",\n\"finis\",\n\"finks\",\n\"finny\",\n\"finns\",\n\"fiord\",\n\"fique\",\n\"firca\",\n\"fired\",\n\"firer\",\n\"fires\",\n\"firma\",\n\"firms\",\n\"firns\",\n\"firry\",\n\"first\",\n\"firth\",\n\"fiscs\",\n\"fishy\",\n\"fisty\",\n\"fists\",\n\"fitch\",\n\"fitly\",\n\"fytte\",\n\"fitty\",\n\"fiver\",\n\"fives\",\n\"fixed\",\n\"fixer\",\n\"fixes\",\n\"fixup\",\n\"fizzy\",\n\"fjeld\",\n\"fjord\",\n\"flabs\",\n\"flack\",\n\"flaff\",\n\"flags\",\n\"flail\",\n\"flain\",\n\"flair\",\n\"flays\",\n\"flake\",\n\"flaky\",\n\"flamb\",\n\"flame\",\n\"flamy\",\n\"flams\",\n\"flane\",\n\"flang\",\n\"flank\",\n\"flans\",\n\"flaps\",\n\"flare\",\n\"flary\",\n\"flash\",\n\"flask\",\n\"flats\",\n\"flavo\",\n\"flawy\",\n\"flawn\",\n\"flaws\",\n\"flaxy\",\n\"flche\",\n\"fldxt\",\n\"fleay\",\n\"fleak\",\n\"fleam\",\n\"flear\",\n\"fleas\",\n\"fleck\",\n\"flect\",\n\"fleer\",\n\"flees\",\n\"fleet\",\n\"flegm\",\n\"fleys\",\n\"fleme\",\n\"flesh\",\n\"fleta\",\n\"fleur\",\n\"flews\",\n\"flexo\",\n\"flyby\",\n\"flick\",\n\"flics\",\n\"flied\",\n\"flier\",\n\"flyer\",\n\"flies\",\n\"flimp\",\n\"fling\",\n\"flint\",\n\"flipe\",\n\"flype\",\n\"flips\",\n\"flirt\",\n\"flisk\",\n\"flite\",\n\"flyte\",\n\"flits\",\n\"fload\",\n\"float\",\n\"flock\",\n\"flocs\",\n\"floey\",\n\"floes\",\n\"flogs\",\n\"floyd\",\n\"floit\",\n\"floyt\",\n\"flong\",\n\"flood\",\n\"flook\",\n\"floor\",\n\"flops\",\n\"flora\",\n\"flory\",\n\"flosh\",\n\"floss\",\n\"flota\",\n\"flote\",\n\"flots\",\n\"flour\",\n\"flout\",\n\"flowe\",\n\"flowk\",\n\"flown\",\n\"flows\",\n\"flrie\",\n\"flubs\",\n\"flued\",\n\"fluey\",\n\"fluer\",\n\"flues\",\n\"fluff\",\n\"fluid\",\n\"fluyt\",\n\"fluke\",\n\"fluky\",\n\"flume\",\n\"flump\",\n\"flung\",\n\"flunk\",\n\"fluor\",\n\"flurn\",\n\"flurr\",\n\"flurt\",\n\"flush\",\n\"flusk\",\n\"flute\",\n\"fluty\",\n\"fname\",\n\"fnese\",\n\"foaly\",\n\"foals\",\n\"foamy\",\n\"foams\",\n\"focal\",\n\"focus\",\n\"fodda\",\n\"foder\",\n\"fodge\",\n\"foehn\",\n\"foeti\",\n\"fogas\",\n\"fogey\",\n\"foggy\",\n\"fogie\",\n\"fogle\",\n\"fogon\",\n\"fogou\",\n\"fogus\",\n\"fohat\",\n\"fohns\",\n\"foyer\",\n\"foils\",\n\"foins\",\n\"foism\",\n\"foist\",\n\"foldy\",\n\"folds\",\n\"folia\",\n\"folic\",\n\"folie\",\n\"folio\",\n\"folky\",\n\"folks\",\n\"folly\",\n\"fomes\",\n\"fonds\",\n\"fondu\",\n\"fonly\",\n\"fonts\",\n\"foody\",\n\"foods\",\n\"fools\",\n\"footy\",\n\"foots\",\n\"foppy\",\n\"foray\",\n\"foram\",\n\"forby\",\n\"forbs\",\n\"force\",\n\"forcy\",\n\"fordy\",\n\"fordo\",\n\"fords\",\n\"forel\",\n\"fores\",\n\"foret\",\n\"forex\",\n\"forge\",\n\"forgo\",\n\"forky\",\n\"forks\",\n\"forma\",\n\"forme\",\n\"formy\",\n\"forms\",\n\"forra\",\n\"forst\",\n\"forte\",\n\"forth\",\n\"forty\",\n\"forts\",\n\"forum\",\n\"fosie\",\n\"fossa\",\n\"fosse\",\n\"fotch\",\n\"fotui\",\n\"fouls\",\n\"found\",\n\"fount\",\n\"fourb\",\n\"fours\",\n\"foute\",\n\"fouth\",\n\"fouty\",\n\"fovea\",\n\"fowls\",\n\"foxed\",\n\"foxer\",\n\"foxes\",\n\"foxie\",\n\"foxly\",\n\"fplot\",\n\"fpsps\",\n\"frack\",\n\"fract\",\n\"frags\",\n\"fraid\",\n\"fraik\",\n\"frail\",\n\"frayn\",\n\"frays\",\n\"frame\",\n\"franc\",\n\"frank\",\n\"franz\",\n\"frape\",\n\"frapp\",\n\"fraps\",\n\"frary\",\n\"frase\",\n\"frass\",\n\"frate\",\n\"frats\",\n\"fraud\",\n\"fraus\",\n\"frawn\",\n\"fraze\",\n\"frden\",\n\"freak\",\n\"fream\",\n\"freck\",\n\"freed\",\n\"freen\",\n\"freer\",\n\"frees\",\n\"freet\",\n\"freya\",\n\"freir\",\n\"freyr\",\n\"freit\",\n\"fremd\",\n\"fremt\",\n\"frena\",\n\"freon\",\n\"frere\",\n\"fresh\",\n\"fress\",\n\"frets\",\n\"frett\",\n\"freud\",\n\"friar\",\n\"fried\",\n\"frier\",\n\"fryer\",\n\"fries\",\n\"frigs\",\n\"frija\",\n\"frike\",\n\"frill\",\n\"frise\",\n\"frisk\",\n\"friss\",\n\"frist\",\n\"frith\",\n\"frits\",\n\"fritt\",\n\"fritz\",\n\"frize\",\n\"frizz\",\n\"frock\",\n\"froes\",\n\"frogs\",\n\"frond\",\n\"frons\",\n\"front\",\n\"froom\",\n\"frore\",\n\"frory\",\n\"frosh\",\n\"frosk\",\n\"frost\",\n\"froth\",\n\"frowy\",\n\"frowl\",\n\"frown\",\n\"frows\",\n\"froze\",\n\"frugs\",\n\"fruit\",\n\"frump\",\n\"frush\",\n\"frust\",\n\"fuage\",\n\"fubby\",\n\"fubsy\",\n\"fuchi\",\n\"fucks\",\n\"fucus\",\n\"fuder\",\n\"fudge\",\n\"fudgy\",\n\"fuels\",\n\"fuffy\",\n\"fugal\",\n\"fuggy\",\n\"fugie\",\n\"fugio\",\n\"fugit\",\n\"fugle\",\n\"fugue\",\n\"fujis\",\n\"fulah\",\n\"fully\",\n\"fulls\",\n\"fulth\",\n\"fultz\",\n\"fulup\",\n\"fulwa\",\n\"fumed\",\n\"fumer\",\n\"fumes\",\n\"fumet\",\n\"fumid\",\n\"fundi\",\n\"funds\",\n\"funge\",\n\"fungi\",\n\"fungo\",\n\"funic\",\n\"funis\",\n\"funje\",\n\"funky\",\n\"funks\",\n\"funli\",\n\"funny\",\n\"fural\",\n\"furan\",\n\"furca\",\n\"furil\",\n\"furyl\",\n\"furls\",\n\"furor\",\n\"furry\",\n\"furud\",\n\"furze\",\n\"furzy\",\n\"fused\",\n\"fusee\",\n\"fusel\",\n\"fuses\",\n\"fusht\",\n\"fusil\",\n\"fussy\",\n\"fusty\",\n\"fusus\",\n\"futwa\",\n\"fuzed\",\n\"fuzee\",\n\"fuzes\",\n\"fuzil\",\n\"fuzzy\",\n\"gabby\",\n\"gable\",\n\"gabon\",\n\"gaddi\",\n\"gader\",\n\"gades\",\n\"gadge\",\n\"gadid\",\n\"gadis\",\n\"gadso\",\n\"gadus\",\n\"gaels\",\n\"gaffe\",\n\"gaffs\",\n\"gaged\",\n\"gagee\",\n\"gager\",\n\"gages\",\n\"gagor\",\n\"gayal\",\n\"gayer\",\n\"gaily\",\n\"gayly\",\n\"gaine\",\n\"gains\",\n\"gaist\",\n\"gaits\",\n\"gaitt\",\n\"gaius\",\n\"gaize\",\n\"galah\",\n\"galas\",\n\"galax\",\n\"galbe\",\n\"galea\",\n\"galee\",\n\"galei\",\n\"galey\",\n\"galen\",\n\"gales\",\n\"galet\",\n\"galga\",\n\"galik\",\n\"galla\",\n\"galli\",\n\"gally\",\n\"galls\",\n\"galop\",\n\"galut\",\n\"galvo\",\n\"gamba\",\n\"gambe\",\n\"gambs\",\n\"gamed\",\n\"gamey\",\n\"gamer\",\n\"games\",\n\"gamic\",\n\"gamin\",\n\"gamma\",\n\"gammy\",\n\"gamps\",\n\"gamut\",\n\"ganam\",\n\"ganch\",\n\"ganda\",\n\"ganef\",\n\"ganev\",\n\"ganga\",\n\"gange\",\n\"gangs\",\n\"ganja\",\n\"ganof\",\n\"gansa\",\n\"gansy\",\n\"ganta\",\n\"ganza\",\n\"gaols\",\n\"gaped\",\n\"gaper\",\n\"gapes\",\n\"gappy\",\n\"garad\",\n\"garau\",\n\"garbo\",\n\"garbs\",\n\"garce\",\n\"garde\",\n\"gardy\",\n\"gareh\",\n\"garle\",\n\"garni\",\n\"garon\",\n\"garoo\",\n\"garse\",\n\"garth\",\n\"garua\",\n\"garum\",\n\"gasan\",\n\"gases\",\n\"gashy\",\n\"gaspy\",\n\"gasps\",\n\"gassy\",\n\"gasts\",\n\"gatch\",\n\"gated\",\n\"gater\",\n\"gates\",\n\"gatha\",\n\"gator\",\n\"gauby\",\n\"gaucy\",\n\"gaudy\",\n\"gauds\",\n\"gauge\",\n\"gauls\",\n\"gault\",\n\"gaumy\",\n\"gaums\",\n\"gaunt\",\n\"gaura\",\n\"gaure\",\n\"gaurs\",\n\"gauss\",\n\"gauze\",\n\"gauzy\",\n\"gavel\",\n\"gavia\",\n\"gavot\",\n\"gawby\",\n\"gawky\",\n\"gawks\",\n\"gawsy\",\n\"gazed\",\n\"gazee\",\n\"gazel\",\n\"gazer\",\n\"gazes\",\n\"gazet\",\n\"gazon\",\n\"gazoz\",\n\"gconv\",\n\"gears\",\n\"gease\",\n\"geast\",\n\"gebur\",\n\"gecko\",\n\"gecks\",\n\"gedds\",\n\"geeks\",\n\"geese\",\n\"geest\",\n\"gehey\",\n\"geyan\",\n\"geira\",\n\"geisa\",\n\"geist\",\n\"gekko\",\n\"gelds\",\n\"gelee\",\n\"gelid\",\n\"gelly\",\n\"gelts\",\n\"gemel\",\n\"gemma\",\n\"gemmy\",\n\"gemot\",\n\"gemse\",\n\"gemul\",\n\"genae\",\n\"genal\",\n\"genep\",\n\"genes\",\n\"genet\",\n\"genic\",\n\"genie\",\n\"genii\",\n\"genin\",\n\"genio\",\n\"genip\",\n\"genys\",\n\"genit\",\n\"genny\",\n\"genoa\",\n\"genom\",\n\"genos\",\n\"genre\",\n\"genro\",\n\"genty\",\n\"gents\",\n\"genua\",\n\"genus\",\n\"geode\",\n\"geoff\",\n\"geoid\",\n\"geoty\",\n\"gerah\",\n\"gerbe\",\n\"gerbo\",\n\"gerim\",\n\"gerip\",\n\"germy\",\n\"germs\",\n\"gesan\",\n\"gesso\",\n\"geste\",\n\"gests\",\n\"getae\",\n\"getah\",\n\"getas\",\n\"getfd\",\n\"getic\",\n\"getid\",\n\"getup\",\n\"geums\",\n\"ghain\",\n\"ghana\",\n\"ghast\",\n\"ghats\",\n\"ghaut\",\n\"ghazi\",\n\"ghbor\",\n\"ghees\",\n\"ghent\",\n\"ghess\",\n\"ghyll\",\n\"ghole\",\n\"ghoom\",\n\"ghost\",\n\"ghoul\",\n\"giant\",\n\"gibbi\",\n\"gibby\",\n\"gibed\",\n\"gybed\",\n\"gibel\",\n\"giber\",\n\"gibes\",\n\"gybes\",\n\"gibli\",\n\"gibus\",\n\"giddy\",\n\"gifts\",\n\"gigas\",\n\"gyges\",\n\"gigge\",\n\"gighe\",\n\"gygis\",\n\"gigot\",\n\"gigue\",\n\"giher\",\n\"gilds\",\n\"giles\",\n\"gilet\",\n\"gilia\",\n\"gilim\",\n\"gilly\",\n\"gills\",\n\"gilpy\",\n\"gilse\",\n\"gilty\",\n\"gilts\",\n\"gimel\",\n\"gymel\",\n\"gimme\",\n\"gimpy\",\n\"gimps\",\n\"ginep\",\n\"gynic\",\n\"ginks\",\n\"ginny\",\n\"ginzo\",\n\"gipon\",\n\"gippy\",\n\"gippo\",\n\"gyppo\",\n\"gipsy\",\n\"gypsy\",\n\"gyral\",\n\"girba\",\n\"girds\",\n\"gyred\",\n\"gyres\",\n\"gyric\",\n\"girja\",\n\"girly\",\n\"girls\",\n\"girny\",\n\"girns\",\n\"giron\",\n\"gyron\",\n\"giros\",\n\"gyros\",\n\"girse\",\n\"girsh\",\n\"girth\",\n\"girts\",\n\"gyrus\",\n\"gisel\",\n\"gisla\",\n\"gismo\",\n\"gists\",\n\"gitim\",\n\"giust\",\n\"gyved\",\n\"givey\",\n\"given\",\n\"giver\",\n\"gives\",\n\"gyves\",\n\"givin\",\n\"gizmo\",\n\"glace\",\n\"glack\",\n\"glade\",\n\"glady\",\n\"glads\",\n\"glaga\",\n\"glaik\",\n\"glair\",\n\"glaky\",\n\"glali\",\n\"gland\",\n\"glans\",\n\"glare\",\n\"glary\",\n\"glass\",\n\"glaum\",\n\"glaur\",\n\"glaux\",\n\"glave\",\n\"glaze\",\n\"glazy\",\n\"glead\",\n\"gleam\",\n\"glean\",\n\"gleba\",\n\"glebe\",\n\"gleby\",\n\"glede\",\n\"gledy\",\n\"gleds\",\n\"gleed\",\n\"gleek\",\n\"gleen\",\n\"glees\",\n\"gleet\",\n\"gleir\",\n\"gleys\",\n\"gleit\",\n\"glene\",\n\"glenn\",\n\"glens\",\n\"glent\",\n\"glial\",\n\"glick\",\n\"glide\",\n\"gliff\",\n\"glike\",\n\"glime\",\n\"glims\",\n\"glink\",\n\"glynn\",\n\"glint\",\n\"glyph\",\n\"glisk\",\n\"gliss\",\n\"glist\",\n\"gloam\",\n\"gloat\",\n\"globe\",\n\"globy\",\n\"globs\",\n\"gloea\",\n\"glogg\",\n\"glome\",\n\"glomi\",\n\"gloms\",\n\"glood\",\n\"gloom\",\n\"glops\",\n\"glore\",\n\"glory\",\n\"gloss\",\n\"glost\",\n\"glout\",\n\"glove\",\n\"glows\",\n\"gloze\",\n\"gluck\",\n\"glued\",\n\"gluey\",\n\"gluer\",\n\"glues\",\n\"gluma\",\n\"glume\",\n\"glump\",\n\"gluon\",\n\"gluts\",\n\"gnarl\",\n\"gnarr\",\n\"gnars\",\n\"gnash\",\n\"gnast\",\n\"gnats\",\n\"gnawn\",\n\"gnaws\",\n\"gnide\",\n\"gnoff\",\n\"gnome\",\n\"goads\",\n\"goala\",\n\"goals\",\n\"goaty\",\n\"goats\",\n\"goave\",\n\"goban\",\n\"gobbe\",\n\"gobby\",\n\"gobet\",\n\"gobia\",\n\"gobio\",\n\"gobos\",\n\"godet\",\n\"godly\",\n\"goers\",\n\"goety\",\n\"gofer\",\n\"gogga\",\n\"gogos\",\n\"goyim\",\n\"goyin\",\n\"goyle\",\n\"going\",\n\"goldi\",\n\"goldy\",\n\"golds\",\n\"golee\",\n\"golem\",\n\"goles\",\n\"golet\",\n\"golfs\",\n\"golgi\",\n\"golly\",\n\"goloe\",\n\"golpe\",\n\"gombo\",\n\"gomer\",\n\"gonad\",\n\"gonal\",\n\"gondi\",\n\"goney\",\n\"goner\",\n\"gongs\",\n\"gonia\",\n\"gonid\",\n\"gonif\",\n\"gonys\",\n\"gonna\",\n\"gonne\",\n\"gonof\",\n\"gonzo\",\n\"goody\",\n\"goods\",\n\"gooey\",\n\"goofy\",\n\"goofs\",\n\"gooky\",\n\"gooks\",\n\"gools\",\n\"gooma\",\n\"goony\",\n\"goons\",\n\"goopy\",\n\"goops\",\n\"goose\",\n\"goosy\",\n\"gopak\",\n\"goral\",\n\"goran\",\n\"gorce\",\n\"gored\",\n\"gorer\",\n\"gores\",\n\"gorge\",\n\"goric\",\n\"gorki\",\n\"gorra\",\n\"gorry\",\n\"gorse\",\n\"gorsy\",\n\"gorst\",\n\"gossy\",\n\"gotch\",\n\"goter\",\n\"gotha\",\n\"goths\",\n\"gotos\",\n\"gotra\",\n\"gotta\",\n\"gouda\",\n\"goudy\",\n\"gouge\",\n\"goumi\",\n\"goura\",\n\"gourd\",\n\"goury\",\n\"gouty\",\n\"gouts\",\n\"gowan\",\n\"gowdy\",\n\"gowds\",\n\"gowks\",\n\"gowns\",\n\"goxes\",\n\"graal\",\n\"grabs\",\n\"grace\",\n\"gracy\",\n\"grade\",\n\"grads\",\n\"graff\",\n\"graft\",\n\"grail\",\n\"grain\",\n\"graip\",\n\"grays\",\n\"grama\",\n\"grame\",\n\"gramy\",\n\"gramp\",\n\"grams\",\n\"grana\",\n\"grand\",\n\"grane\",\n\"grank\",\n\"grano\",\n\"grant\",\n\"grape\",\n\"graph\",\n\"grapy\",\n\"grasp\",\n\"grass\",\n\"grata\",\n\"grate\",\n\"grave\",\n\"gravy\",\n\"graze\",\n\"great\",\n\"grebe\",\n\"grebo\",\n\"grece\",\n\"greco\",\n\"greed\",\n\"greek\",\n\"green\",\n\"grees\",\n\"greet\",\n\"grege\",\n\"gregg\",\n\"grego\",\n\"grein\",\n\"greys\",\n\"greit\",\n\"grene\",\n\"greta\",\n\"grete\",\n\"grewt\",\n\"grice\",\n\"gride\",\n\"gryde\",\n\"grids\",\n\"grief\",\n\"griff\",\n\"grift\",\n\"grigs\",\n\"grike\",\n\"grill\",\n\"grime\",\n\"grimy\",\n\"grimm\",\n\"grimp\",\n\"grind\",\n\"grins\",\n\"grint\",\n\"griot\",\n\"gripe\",\n\"grype\",\n\"griph\",\n\"gryph\",\n\"gripy\",\n\"grips\",\n\"gript\",\n\"grise\",\n\"grist\",\n\"grith\",\n\"grits\",\n\"groan\",\n\"groat\",\n\"groff\",\n\"grogs\",\n\"groin\",\n\"groma\",\n\"grond\",\n\"gront\",\n\"groof\",\n\"groom\",\n\"groop\",\n\"groot\",\n\"groow\",\n\"grope\",\n\"gross\",\n\"grosz\",\n\"grote\",\n\"grots\",\n\"grouf\",\n\"group\",\n\"grout\",\n\"grove\",\n\"grovy\",\n\"growl\",\n\"grown\",\n\"grows\",\n\"grubs\",\n\"gruel\",\n\"grues\",\n\"gruff\",\n\"gruft\",\n\"gruis\",\n\"gruys\",\n\"grume\",\n\"grump\",\n\"grunt\",\n\"grush\",\n\"gruss\",\n\"gteau\",\n\"guaba\",\n\"guaco\",\n\"guaka\",\n\"guama\",\n\"guana\",\n\"guano\",\n\"guans\",\n\"guara\",\n\"guard\",\n\"guary\",\n\"guars\",\n\"guasa\",\n\"guato\",\n\"guava\",\n\"guaza\",\n\"gubat\",\n\"gubbo\",\n\"gucki\",\n\"gucks\",\n\"gudes\",\n\"gudge\",\n\"gudok\",\n\"guelf\",\n\"guess\",\n\"guest\",\n\"guffy\",\n\"guffs\",\n\"gugal\",\n\"guiac\",\n\"guiba\",\n\"guide\",\n\"guido\",\n\"guids\",\n\"guyed\",\n\"guyer\",\n\"guige\",\n\"guijo\",\n\"guild\",\n\"guile\",\n\"guily\",\n\"guilt\",\n\"guyot\",\n\"guiro\",\n\"guise\",\n\"gujar\",\n\"gulae\",\n\"gular\",\n\"gulas\",\n\"gulch\",\n\"gules\",\n\"gulfy\",\n\"gulfs\",\n\"gulix\",\n\"gully\",\n\"gulls\",\n\"gulph\",\n\"gulpy\",\n\"gulps\",\n\"gumby\",\n\"gumbo\",\n\"gumly\",\n\"gumma\",\n\"gummy\",\n\"gunda\",\n\"gundi\",\n\"gundy\",\n\"gunge\",\n\"gunja\",\n\"gunky\",\n\"gunks\",\n\"gunne\",\n\"gunny\",\n\"guppy\",\n\"guran\",\n\"gurdy\",\n\"gurge\",\n\"guric\",\n\"gurle\",\n\"gurly\",\n\"gurry\",\n\"gursh\",\n\"gurts\",\n\"gurus\",\n\"guser\",\n\"gushy\",\n\"gusla\",\n\"gusle\",\n\"gussy\",\n\"gusty\",\n\"gusto\",\n\"gusts\",\n\"gutsy\",\n\"gutta\",\n\"gutte\",\n\"gutti\",\n\"gutty\",\n\"guzul\",\n\"gweed\",\n\"gwely\",\n\"gwine\",\n\"haafs\",\n\"haars\",\n\"habab\",\n\"habbe\",\n\"habet\",\n\"habit\",\n\"hable\",\n\"habub\",\n\"habus\",\n\"hacek\",\n\"hache\",\n\"hacht\",\n\"hacky\",\n\"hacks\",\n\"hadal\",\n\"haddo\",\n\"haded\",\n\"hades\",\n\"hadit\",\n\"hadji\",\n\"hadnt\",\n\"hadst\",\n\"haems\",\n\"haets\",\n\"hafis\",\n\"hafiz\",\n\"hafts\",\n\"hagar\",\n\"haggy\",\n\"hagia\",\n\"hague\",\n\"haick\",\n\"haida\",\n\"haydn\",\n\"hayed\",\n\"hayey\",\n\"hayer\",\n\"hayes\",\n\"haika\",\n\"haikh\",\n\"haiks\",\n\"haiku\",\n\"haily\",\n\"hails\",\n\"haine\",\n\"hayne\",\n\"haire\",\n\"hairy\",\n\"hairs\",\n\"haiti\",\n\"hajes\",\n\"hajib\",\n\"hajis\",\n\"hajji\",\n\"hakam\",\n\"hakea\",\n\"hakes\",\n\"hakim\",\n\"hakka\",\n\"halal\",\n\"halas\",\n\"halch\",\n\"haldu\",\n\"haled\",\n\"haler\",\n\"hales\",\n\"halfa\",\n\"halfy\",\n\"halid\",\n\"halke\",\n\"hallo\",\n\"halls\",\n\"halma\",\n\"halms\",\n\"haloa\",\n\"halos\",\n\"halse\",\n\"halte\",\n\"halts\",\n\"halva\",\n\"halve\",\n\"halwe\",\n\"hamal\",\n\"haman\",\n\"hamel\",\n\"hames\",\n\"hamli\",\n\"hammy\",\n\"hamsa\",\n\"hamus\",\n\"hamza\",\n\"hanap\",\n\"hance\",\n\"hanch\",\n\"handy\",\n\"hands\",\n\"hange\",\n\"hangs\",\n\"hanif\",\n\"hanky\",\n\"hanks\",\n\"hankt\",\n\"hanna\",\n\"hanoi\",\n\"hansa\",\n\"hanse\",\n\"hants\",\n\"haole\",\n\"haoma\",\n\"haori\",\n\"hapax\",\n\"haply\",\n\"happy\",\n\"haram\",\n\"haras\",\n\"harbi\",\n\"hardy\",\n\"hards\",\n\"hared\",\n\"harem\",\n\"hares\",\n\"harim\",\n\"harka\",\n\"harks\",\n\"harle\",\n\"harls\",\n\"harms\",\n\"harns\",\n\"harpa\",\n\"harpy\",\n\"harps\",\n\"harre\",\n\"harry\",\n\"harsh\",\n\"harst\",\n\"harts\",\n\"hasan\",\n\"hashy\",\n\"hasht\",\n\"hasid\",\n\"hasky\",\n\"hasnt\",\n\"hasps\",\n\"hasta\",\n\"haste\",\n\"hasty\",\n\"hatch\",\n\"hated\",\n\"hatel\",\n\"hater\",\n\"hates\",\n\"hathi\",\n\"hatte\",\n\"hatti\",\n\"hatty\",\n\"haugh\",\n\"hauld\",\n\"haulm\",\n\"hauls\",\n\"hault\",\n\"haunt\",\n\"hausa\",\n\"hause\",\n\"haust\",\n\"haute\",\n\"havel\",\n\"haven\",\n\"haver\",\n\"haves\",\n\"havoc\",\n\"hawed\",\n\"hawer\",\n\"hawky\",\n\"hawks\",\n\"hawok\",\n\"hawse\",\n\"hazan\",\n\"hazed\",\n\"hazel\",\n\"hazen\",\n\"hazer\",\n\"hazes\",\n\"hazle\",\n\"hdqrs\",\n\"heady\",\n\"heads\",\n\"heald\",\n\"heals\",\n\"heapy\",\n\"heaps\",\n\"heard\",\n\"hears\",\n\"heart\",\n\"heath\",\n\"heats\",\n\"heave\",\n\"heavy\",\n\"heazy\",\n\"heben\",\n\"hecco\",\n\"hecht\",\n\"hecks\",\n\"hecte\",\n\"heder\",\n\"hedge\",\n\"hedgy\",\n\"heedy\",\n\"heeds\",\n\"heels\",\n\"heeze\",\n\"heezy\",\n\"hefty\",\n\"hefts\",\n\"heiau\",\n\"heidi\",\n\"heigh\",\n\"heygh\",\n\"heild\",\n\"heily\",\n\"heils\",\n\"heinz\",\n\"heirs\",\n\"heist\",\n\"heize\",\n\"helas\",\n\"helco\",\n\"helen\",\n\"helge\",\n\"helio\",\n\"helix\",\n\"helly\",\n\"hello\",\n\"hells\",\n\"helms\",\n\"heloe\",\n\"helot\",\n\"helps\",\n\"helve\",\n\"hemad\",\n\"hemal\",\n\"heman\",\n\"hemen\",\n\"hemes\",\n\"hemic\",\n\"hemin\",\n\"hemol\",\n\"hempy\",\n\"hemps\",\n\"henad\",\n\"hence\",\n\"hendy\",\n\"henen\",\n\"henge\",\n\"henna\",\n\"henny\",\n\"henry\",\n\"hents\",\n\"hepar\",\n\"herat\",\n\"herba\",\n\"herby\",\n\"herbs\",\n\"herds\",\n\"herem\",\n\"heres\",\n\"herls\",\n\"herma\",\n\"hermi\",\n\"hermo\",\n\"herms\",\n\"herne\",\n\"herns\",\n\"heron\",\n\"heros\",\n\"herry\",\n\"herse\",\n\"hertz\",\n\"herve\",\n\"hests\",\n\"heths\",\n\"hetty\",\n\"heuau\",\n\"heuch\",\n\"heugh\",\n\"hevea\",\n\"heved\",\n\"hewed\",\n\"hewel\",\n\"hewer\",\n\"hewgh\",\n\"hexad\",\n\"hexed\",\n\"hexer\",\n\"hexes\",\n\"hexyl\",\n\"hexis\",\n\"hiant\",\n\"hiate\",\n\"hibla\",\n\"hybla\",\n\"hicht\",\n\"hichu\",\n\"hicky\",\n\"hicks\",\n\"hided\",\n\"hidel\",\n\"hider\",\n\"hides\",\n\"hydra\",\n\"hydro\",\n\"hield\",\n\"hiems\",\n\"hyena\",\n\"hienz\",\n\"hiera\",\n\"highs\",\n\"hight\",\n\"higra\",\n\"hying\",\n\"hijra\",\n\"hiked\",\n\"hiker\",\n\"hikes\",\n\"hilar\",\n\"hylas\",\n\"hilch\",\n\"hilda\",\n\"hyleg\",\n\"hylic\",\n\"hilly\",\n\"hillo\",\n\"hills\",\n\"hilsa\",\n\"hilts\",\n\"hilum\",\n\"hilus\",\n\"hymen\",\n\"himne\",\n\"hymns\",\n\"hinau\",\n\"hinch\",\n\"hynde\",\n\"hindi\",\n\"hinds\",\n\"hindu\",\n\"hiney\",\n\"hinge\",\n\"hinny\",\n\"hints\",\n\"hyoid\",\n\"hyped\",\n\"hiper\",\n\"hyper\",\n\"hypes\",\n\"hypha\",\n\"hypho\",\n\"hipmi\",\n\"hypos\",\n\"hippa\",\n\"hippi\",\n\"hippy\",\n\"hippo\",\n\"hiram\",\n\"hyrax\",\n\"hired\",\n\"hiren\",\n\"hirer\",\n\"hires\",\n\"hirse\",\n\"hyrse\",\n\"hirst\",\n\"hyrst\",\n\"hisis\",\n\"hyson\",\n\"hispa\",\n\"hissy\",\n\"hists\",\n\"hitch\",\n\"hithe\",\n\"hived\",\n\"hiver\",\n\"hives\",\n\"hoagy\",\n\"hoard\",\n\"hoary\",\n\"hoars\",\n\"hoast\",\n\"hobby\",\n\"hoboe\",\n\"hobos\",\n\"hocco\",\n\"hocky\",\n\"hocks\",\n\"hocus\",\n\"hodad\",\n\"hoddy\",\n\"hodge\",\n\"hoers\",\n\"hogan\",\n\"hogen\",\n\"hoggy\",\n\"hoggs\",\n\"hogni\",\n\"hoick\",\n\"hoyle\",\n\"hoise\",\n\"hoist\",\n\"hokan\",\n\"hoked\",\n\"hokey\",\n\"hoker\",\n\"hokes\",\n\"hokku\",\n\"hokum\",\n\"holds\",\n\"holed\",\n\"holey\",\n\"holer\",\n\"holes\",\n\"holia\",\n\"holks\",\n\"holla\",\n\"holly\",\n\"hollo\",\n\"holms\",\n\"holts\",\n\"homam\",\n\"homed\",\n\"homey\",\n\"homer\",\n\"homes\",\n\"homme\",\n\"homos\",\n\"honan\",\n\"honda\",\n\"hondo\",\n\"honed\",\n\"honey\",\n\"honer\",\n\"hones\",\n\"hongs\",\n\"honky\",\n\"honks\",\n\"honor\",\n\"honzo\",\n\"hooch\",\n\"hoody\",\n\"hoods\",\n\"hooey\",\n\"hoofy\",\n\"hoofs\",\n\"hooye\",\n\"hooka\",\n\"hooky\",\n\"hooks\",\n\"hooly\",\n\"hoops\",\n\"hoose\",\n\"hoosh\",\n\"hoots\",\n\"hoove\",\n\"hopak\",\n\"hoped\",\n\"hoper\",\n\"hopes\",\n\"hopis\",\n\"hoppy\",\n\"hoppo\",\n\"horae\",\n\"horah\",\n\"horal\",\n\"horas\",\n\"horde\",\n\"horim\",\n\"horla\",\n\"horme\",\n\"horny\",\n\"horns\",\n\"horol\",\n\"horry\",\n\"horse\",\n\"horsy\",\n\"horst\",\n\"hosea\",\n\"hosed\",\n\"hosel\",\n\"hosen\",\n\"hoses\",\n\"hosta\",\n\"hosts\",\n\"hotch\",\n\"hotel\",\n\"hotly\",\n\"hotta\",\n\"hough\",\n\"hoult\",\n\"hound\",\n\"houri\",\n\"hours\",\n\"house\",\n\"housy\",\n\"houss\",\n\"houve\",\n\"hovel\",\n\"hoven\",\n\"hover\",\n\"howdy\",\n\"howea\",\n\"howel\",\n\"howes\",\n\"howff\",\n\"howfs\",\n\"howks\",\n\"howls\",\n\"howso\",\n\"hsien\",\n\"hsuan\",\n\"huaca\",\n\"huaco\",\n\"huari\",\n\"huave\",\n\"hubba\",\n\"hubby\",\n\"hucho\",\n\"hucks\",\n\"huffy\",\n\"huffs\",\n\"huger\",\n\"huile\",\n\"hulas\",\n\"hulch\",\n\"hulky\",\n\"hulks\",\n\"hullo\",\n\"hulls\",\n\"human\",\n\"humbo\",\n\"humet\",\n\"humic\",\n\"humid\",\n\"humin\",\n\"humit\",\n\"humor\",\n\"humph\",\n\"humpy\",\n\"humps\",\n\"humus\",\n\"hunch\",\n\"hundi\",\n\"hunky\",\n\"hunks\",\n\"hunts\",\n\"hurds\",\n\"hurly\",\n\"hurls\",\n\"huron\",\n\"hurri\",\n\"hurry\",\n\"hurst\",\n\"hurty\",\n\"hurts\",\n\"husho\",\n\"husht\",\n\"husky\",\n\"husks\",\n\"hussy\",\n\"hutch\",\n\"hutia\",\n\"hutre\",\n\"huzza\",\n\"huzzy\",\n\"yabbi\",\n\"yabby\",\n\"yaboo\",\n\"yacal\",\n\"yacca\",\n\"yacht\",\n\"yacks\",\n\"yadim\",\n\"yaffs\",\n\"yager\",\n\"yagis\",\n\"yagua\",\n\"yahan\",\n\"yahoo\",\n\"yaird\",\n\"yajna\",\n\"yakan\",\n\"yakin\",\n\"yakka\",\n\"yakut\",\n\"yalla\",\n\"iambe\",\n\"iambi\",\n\"iambs\",\n\"yamel\",\n\"yamen\",\n\"yameo\",\n\"yampa\",\n\"yamph\",\n\"yamun\",\n\"yanan\",\n\"yangs\",\n\"yanky\",\n\"yanks\",\n\"ianus\",\n\"yaply\",\n\"yapok\",\n\"yapon\",\n\"yappy\",\n\"yaqui\",\n\"yaray\",\n\"yarak\",\n\"yards\",\n\"yarer\",\n\"yarke\",\n\"yarly\",\n\"yarns\",\n\"yarry\",\n\"yarth\",\n\"yasht\",\n\"yasna\",\n\"yauds\",\n\"yauld\",\n\"yaups\",\n\"yawed\",\n\"yawey\",\n\"yawls\",\n\"yawny\",\n\"yawns\",\n\"yawps\",\n\"yazoo\",\n\"iberi\",\n\"ibota\",\n\"icaco\",\n\"icasm\",\n\"iceni\",\n\"ichor\",\n\"ichth\",\n\"icica\",\n\"icier\",\n\"icily\",\n\"icing\",\n\"icker\",\n\"ickle\",\n\"yclad\",\n\"icons\",\n\"iconv\",\n\"ictic\",\n\"ictus\",\n\"idaho\",\n\"idaic\",\n\"idant\",\n\"idcue\",\n\"iddat\",\n\"iddhi\",\n\"iddio\",\n\"ideal\",\n\"idean\",\n\"ideas\",\n\"ident\",\n\"idest\",\n\"ideta\",\n\"idgah\",\n\"idyll\",\n\"idyls\",\n\"idiom\",\n\"idion\",\n\"idiot\",\n\"idism\",\n\"idist\",\n\"idite\",\n\"idled\",\n\"idler\",\n\"idles\",\n\"idola\",\n\"idols\",\n\"idose\",\n\"idryl\",\n\"yeans\",\n\"yeara\",\n\"yeard\",\n\"yearn\",\n\"years\",\n\"yeast\",\n\"yecch\",\n\"yechy\",\n\"yechs\",\n\"yeech\",\n\"yeggs\",\n\"yelek\",\n\"yelks\",\n\"yells\",\n\"yelps\",\n\"yemen\",\n\"yenta\",\n\"yente\",\n\"yeply\",\n\"yerba\",\n\"yerga\",\n\"yerks\",\n\"ierne\",\n\"yerth\",\n\"yerva\",\n\"yeses\",\n\"yesso\",\n\"yesty\",\n\"yetis\",\n\"yetts\",\n\"yeuky\",\n\"yeuks\",\n\"yeven\",\n\"yezdi\",\n\"yezzy\",\n\"yfere\",\n\"ifint\",\n\"ifree\",\n\"ifrit\",\n\"ygapo\",\n\"igara\",\n\"igdyr\",\n\"ighly\",\n\"igloo\",\n\"iglus\",\n\"ignaw\",\n\"ignis\",\n\"ihlat\",\n\"ihram\",\n\"iiasa\",\n\"yield\",\n\"yikes\",\n\"yills\",\n\"yince\",\n\"yinst\",\n\"yipes\",\n\"yirds\",\n\"yirrs\",\n\"yirth\",\n\"ijmaa\",\n\"ijore\",\n\"ikary\",\n\"ikona\",\n\"ikons\",\n\"ilama\",\n\"ileac\",\n\"ileal\",\n\"ylems\",\n\"ileon\",\n\"ileum\",\n\"ileus\",\n\"iliac\",\n\"iliad\",\n\"ilial\",\n\"ilian\",\n\"iliau\",\n\"ilima\",\n\"ilion\",\n\"ilium\",\n\"iller\",\n\"illth\",\n\"illus\",\n\"iloko\",\n\"image\",\n\"imago\",\n\"imams\",\n\"imaum\",\n\"imban\",\n\"imbat\",\n\"imbed\",\n\"imber\",\n\"imbue\",\n\"imcnt\",\n\"imide\",\n\"imido\",\n\"imids\",\n\"imine\",\n\"imino\",\n\"immew\",\n\"immis\",\n\"immit\",\n\"immix\",\n\"immov\",\n\"immun\",\n\"impar\",\n\"imped\",\n\"impel\",\n\"impen\",\n\"imper\",\n\"impis\",\n\"imply\",\n\"impot\",\n\"imput\",\n\"imshi\",\n\"imvia\",\n\"inact\",\n\"inaja\",\n\"inane\",\n\"inapt\",\n\"inark\",\n\"inarm\",\n\"inbye\",\n\"inbow\",\n\"incan\",\n\"incas\",\n\"incle\",\n\"incog\",\n\"incor\",\n\"incra\",\n\"incur\",\n\"incus\",\n\"incut\",\n\"indan\",\n\"indef\",\n\"indew\",\n\"index\",\n\"india\",\n\"indic\",\n\"indii\",\n\"indyl\",\n\"indin\",\n\"indiv\",\n\"indol\",\n\"indow\",\n\"indra\",\n\"indri\",\n\"induc\",\n\"indue\",\n\"indus\",\n\"ineye\",\n\"inept\",\n\"ineri\",\n\"inerm\",\n\"inert\",\n\"infer\",\n\"infin\",\n\"infit\",\n\"infix\",\n\"infos\",\n\"infra\",\n\"ingan\",\n\"ingem\",\n\"inger\",\n\"ingle\",\n\"inglu\",\n\"ingot\",\n\"inial\",\n\"inigo\",\n\"inion\",\n\"injun\",\n\"inked\",\n\"inken\",\n\"inker\",\n\"inket\",\n\"inkie\",\n\"inkle\",\n\"inkos\",\n\"inkra\",\n\"inlay\",\n\"inlaw\",\n\"inlet\",\n\"inmew\",\n\"inned\",\n\"inner\",\n\"innet\",\n\"inoma\",\n\"inone\",\n\"inorb\",\n\"inorg\",\n\"input\",\n\"inrol\",\n\"inrub\",\n\"inrun\",\n\"insea\",\n\"insee\",\n\"insep\",\n\"inset\",\n\"insol\",\n\"instr\",\n\"insue\",\n\"intel\",\n\"inter\",\n\"intil\",\n\"intnl\",\n\"intra\",\n\"intro\",\n\"intsv\",\n\"intue\",\n\"inula\",\n\"inure\",\n\"inurn\",\n\"inust\",\n\"invar\",\n\"invoy\",\n\"inwit\",\n\"yobbo\",\n\"yocco\",\n\"yocks\",\n\"iodal\",\n\"yodel\",\n\"yodhs\",\n\"iodic\",\n\"iodid\",\n\"iodin\",\n\"yodle\",\n\"iodol\",\n\"yogas\",\n\"yogee\",\n\"yoghs\",\n\"yogic\",\n\"yogin\",\n\"yogis\",\n\"yoick\",\n\"yojan\",\n\"yoked\",\n\"yokel\",\n\"yoker\",\n\"yokes\",\n\"yolky\",\n\"yolks\",\n\"yomer\",\n\"yomim\",\n\"yomin\",\n\"yomud\",\n\"ionic\",\n\"yonic\",\n\"yonis\",\n\"yores\",\n\"iortn\",\n\"iotas\",\n\"youff\",\n\"young\",\n\"youre\",\n\"yourn\",\n\"yours\",\n\"yourt\",\n\"youse\",\n\"youth\",\n\"youve\",\n\"youze\",\n\"yoven\",\n\"iowan\",\n\"yowed\",\n\"yowes\",\n\"yowie\",\n\"yowls\",\n\"iphis\",\n\"yquem\",\n\"irade\",\n\"irani\",\n\"iraqi\",\n\"irate\",\n\"irbis\",\n\"irena\",\n\"irene\",\n\"ireos\",\n\"irfan\",\n\"irgun\",\n\"irian\",\n\"irido\",\n\"iring\",\n\"irish\",\n\"irked\",\n\"iroha\",\n\"iroko\",\n\"irone\",\n\"irony\",\n\"irons\",\n\"irous\",\n\"irpex\",\n\"irred\",\n\"irreg\",\n\"irvin\",\n\"irwin\",\n\"isaac\",\n\"isawa\",\n\"isbas\",\n\"iseum\",\n\"isiac\",\n\"ising\",\n\"isize\",\n\"islay\",\n\"islam\",\n\"isled\",\n\"isles\",\n\"islet\",\n\"islot\",\n\"ismal\",\n\"isnad\",\n\"isoln\",\n\"isort\",\n\"issei\",\n\"issue\",\n\"isthm\",\n\"istle\",\n\"itala\",\n\"itali\",\n\"italy\",\n\"itchy\",\n\"itcze\",\n\"itemy\",\n\"items\",\n\"iters\",\n\"ither\",\n\"ytter\",\n\"yuans\",\n\"yucca\",\n\"yucch\",\n\"yuchi\",\n\"yucky\",\n\"yucks\",\n\"yugas\",\n\"yukon\",\n\"yulan\",\n\"yules\",\n\"iulus\",\n\"yuman\",\n\"yummy\",\n\"yunca\",\n\"yupon\",\n\"yurak\",\n\"yurok\",\n\"yurta\",\n\"yurts\",\n\"yuruk\",\n\"ivied\",\n\"ivies\",\n\"ivory\",\n\"ivray\",\n\"ixias\",\n\"ixion\",\n\"ixora\",\n\"ixtle\",\n\"izard\",\n\"izars\",\n\"izing\",\n\"izote\",\n\"iztle\",\n\"izumi\",\n\"izzat\",\n\"jabia\",\n\"jabot\",\n\"jabul\",\n\"jacal\",\n\"jacht\",\n\"jacky\",\n\"jacko\",\n\"jacks\",\n\"jacob\",\n\"jaded\",\n\"jades\",\n\"jagat\",\n\"jager\",\n\"jaggy\",\n\"jaggs\",\n\"jagir\",\n\"jagla\",\n\"jagra\",\n\"jagua\",\n\"jahve\",\n\"jails\",\n\"jaime\",\n\"jaina\",\n\"jakey\",\n\"jakes\",\n\"jakob\",\n\"jakos\",\n\"jakun\",\n\"jalap\",\n\"jalee\",\n\"jalet\",\n\"jalop\",\n\"jalor\",\n\"jalur\",\n\"jaman\",\n\"jambe\",\n\"jambo\",\n\"jambs\",\n\"james\",\n\"jamie\",\n\"jammy\",\n\"janes\",\n\"janet\",\n\"janos\",\n\"janty\",\n\"jantu\",\n\"janua\",\n\"janus\",\n\"japan\",\n\"japed\",\n\"japer\",\n\"japes\",\n\"japyx\",\n\"jarde\",\n\"jared\",\n\"jarls\",\n\"jarmo\",\n\"jarra\",\n\"jarry\",\n\"jarvy\",\n\"jasey\",\n\"jason\",\n\"jaspe\",\n\"jatha\",\n\"jatki\",\n\"jatni\",\n\"jatos\",\n\"jauks\",\n\"jaunt\",\n\"jaups\",\n\"javan\",\n\"javas\",\n\"javel\",\n\"javer\",\n\"jawab\",\n\"jawan\",\n\"jawed\",\n\"jazey\",\n\"jazzy\",\n\"jeany\",\n\"jeans\",\n\"jebat\",\n\"jebel\",\n\"jebus\",\n\"jeeps\",\n\"jeery\",\n\"jeers\",\n\"jefes\",\n\"jehad\",\n\"jehup\",\n\"jehus\",\n\"jelab\",\n\"jelib\",\n\"jelly\",\n\"jello\",\n\"jells\",\n\"jembe\",\n\"jemez\",\n\"jemmy\",\n\"jenna\",\n\"jenny\",\n\"jerez\",\n\"jerib\",\n\"jerid\",\n\"jerky\",\n\"jerks\",\n\"jerry\",\n\"jesse\",\n\"jests\",\n\"jesus\",\n\"jetes\",\n\"jeton\",\n\"jetty\",\n\"jewed\",\n\"jewel\",\n\"jewis\",\n\"jewry\",\n\"jheel\",\n\"jhool\",\n\"jibba\",\n\"jibby\",\n\"jibbs\",\n\"jibed\",\n\"jiber\",\n\"jibes\",\n\"jiboa\",\n\"jiffy\",\n\"jiffs\",\n\"jiggy\",\n\"jihad\",\n\"jills\",\n\"jilts\",\n\"jimbo\",\n\"jimmy\",\n\"jimpy\",\n\"jingo\",\n\"jingu\",\n\"jinja\",\n\"jinks\",\n\"jinni\",\n\"jinny\",\n\"jinns\",\n\"jiqui\",\n\"jirga\",\n\"jisms\",\n\"jitro\",\n\"jived\",\n\"jives\",\n\"jixie\",\n\"jizya\",\n\"jnana\",\n\"jocko\",\n\"jocks\",\n\"jocum\",\n\"jodel\",\n\"joeys\",\n\"johan\",\n\"johns\",\n\"joyce\",\n\"joyed\",\n\"joins\",\n\"joint\",\n\"joist\",\n\"joked\",\n\"jokey\",\n\"joker\",\n\"jokes\",\n\"jokul\",\n\"joles\",\n\"jolly\",\n\"jolty\",\n\"jolts\",\n\"jomon\",\n\"jonah\",\n\"jonas\",\n\"jones\",\n\"joola\",\n\"joram\",\n\"joree\",\n\"jorge\",\n\"jorum\",\n\"josey\",\n\"joshi\",\n\"josie\",\n\"josip\",\n\"jotas\",\n\"jotty\",\n\"joual\",\n\"jough\",\n\"jougs\",\n\"jouks\",\n\"joule\",\n\"journ\",\n\"jours\",\n\"joust\",\n\"jowar\",\n\"jowed\",\n\"jowel\",\n\"jower\",\n\"jowly\",\n\"jowls\",\n\"jowpy\",\n\"juang\",\n\"juans\",\n\"jubas\",\n\"jubbe\",\n\"jubes\",\n\"jubus\",\n\"judah\",\n\"judas\",\n\"judex\",\n\"judge\",\n\"judos\",\n\"jufti\",\n\"jufts\",\n\"jugal\",\n\"juger\",\n\"jugum\",\n\"juyas\",\n\"juice\",\n\"juicy\",\n\"juise\",\n\"jujus\",\n\"juked\",\n\"jukes\",\n\"julep\",\n\"jules\",\n\"julia\",\n\"julid\",\n\"julie\",\n\"julio\",\n\"julus\",\n\"jumba\",\n\"jumby\",\n\"jumbo\",\n\"jumma\",\n\"jumpy\",\n\"jumps\",\n\"junco\",\n\"jundy\",\n\"junky\",\n\"junks\",\n\"junta\",\n\"junto\",\n\"jupes\",\n\"jupon\",\n\"jural\",\n\"jurat\",\n\"jurel\",\n\"juris\",\n\"juror\",\n\"jussi\",\n\"justo\",\n\"justs\",\n\"jutes\",\n\"jutic\",\n\"jutka\",\n\"jutty\",\n\"juvia\",\n\"juxta\",\n\"kaaba\",\n\"kaama\",\n\"kabab\",\n\"kabar\",\n\"kabel\",\n\"kabob\",\n\"kacha\",\n\"kadis\",\n\"kadmi\",\n\"kados\",\n\"kafir\",\n\"kafiz\",\n\"kafka\",\n\"kafta\",\n\"kagos\",\n\"kagus\",\n\"kahar\",\n\"kahau\",\n\"kaiak\",\n\"kayak\",\n\"kayan\",\n\"kaifs\",\n\"kails\",\n\"kaimo\",\n\"kains\",\n\"kayos\",\n\"kaiwi\",\n\"kajar\",\n\"kakan\",\n\"kakar\",\n\"kakas\",\n\"kakis\",\n\"kakke\",\n\"kalam\",\n\"kalan\",\n\"kales\",\n\"kalif\",\n\"kalis\",\n\"kalon\",\n\"kalpa\",\n\"kamao\",\n\"kamas\",\n\"kamba\",\n\"kamel\",\n\"kames\",\n\"kamik\",\n\"kamis\",\n\"kanae\",\n\"kanap\",\n\"kanas\",\n\"kanat\",\n\"kande\",\n\"kaneh\",\n\"kanes\",\n\"kanga\",\n\"kanji\",\n\"kannu\",\n\"kansa\",\n\"kanzu\",\n\"kaons\",\n\"kapai\",\n\"kapas\",\n\"kaphs\",\n\"kapok\",\n\"kappa\",\n\"kappe\",\n\"kapur\",\n\"kaput\",\n\"karat\",\n\"karbi\",\n\"karch\",\n\"karel\",\n\"karen\",\n\"karez\",\n\"karma\",\n\"karns\",\n\"karoo\",\n\"karos\",\n\"karou\",\n\"karri\",\n\"karst\",\n\"karts\",\n\"kaser\",\n\"kasha\",\n\"kashi\",\n\"kaska\",\n\"kassu\",\n\"katar\",\n\"katat\",\n\"katha\",\n\"kathy\",\n\"katie\",\n\"katik\",\n\"katun\",\n\"kauch\",\n\"kauri\",\n\"kaury\",\n\"kavas\",\n\"kaver\",\n\"kazak\",\n\"kazoo\",\n\"keach\",\n\"kearn\",\n\"keats\",\n\"keawe\",\n\"kebab\",\n\"kebar\",\n\"kebby\",\n\"kebob\",\n\"kecky\",\n\"kecks\",\n\"kedar\",\n\"kedge\",\n\"kedgy\",\n\"keech\",\n\"keefs\",\n\"keeks\",\n\"keels\",\n\"keena\",\n\"keens\",\n\"keeps\",\n\"keest\",\n\"keets\",\n\"keeve\",\n\"kefir\",\n\"kefti\",\n\"keyed\",\n\"keirs\",\n\"keist\",\n\"keita\",\n\"keith\",\n\"keywd\",\n\"keleh\",\n\"kelek\",\n\"kelep\",\n\"kelia\",\n\"kella\",\n\"kelly\",\n\"kelpy\",\n\"kelps\",\n\"kelty\",\n\"kelts\",\n\"kemal\",\n\"kempy\",\n\"kemps\",\n\"kempt\",\n\"kenaf\",\n\"kenai\",\n\"kench\",\n\"kendy\",\n\"kendo\",\n\"kenya\",\n\"kenny\",\n\"kenno\",\n\"kenos\",\n\"kente\",\n\"keout\",\n\"kepis\",\n\"kerat\",\n\"kerbs\",\n\"kerch\",\n\"kerel\",\n\"keres\",\n\"kerfs\",\n\"keryx\",\n\"kerne\",\n\"kerns\",\n\"keros\",\n\"kerri\",\n\"kerry\",\n\"kerve\",\n\"kesar\",\n\"kesse\",\n\"ketal\",\n\"ketch\",\n\"keten\",\n\"ketyl\",\n\"ketol\",\n\"kette\",\n\"ketty\",\n\"kevan\",\n\"kevel\",\n\"kever\",\n\"kevil\",\n\"kevin\",\n\"kevyn\",\n\"kexes\",\n\"khadi\",\n\"khaya\",\n\"khair\",\n\"khaja\",\n\"khaki\",\n\"khami\",\n\"khans\",\n\"khasa\",\n\"khasi\",\n\"khass\",\n\"khats\",\n\"kheda\",\n\"khila\",\n\"khmer\",\n\"khoja\",\n\"khoka\",\n\"khond\",\n\"khuai\",\n\"khula\",\n\"khuzi\",\n\"khvat\",\n\"kiaat\",\n\"kiack\",\n\"kyack\",\n\"kiaki\",\n\"kiang\",\n\"kyang\",\n\"kyars\",\n\"kyats\",\n\"kibei\",\n\"kibes\",\n\"kibla\",\n\"kicky\",\n\"kicks\",\n\"kiddy\",\n\"kiddo\",\n\"kiefs\",\n\"kieye\",\n\"kiers\",\n\"kiyas\",\n\"kikar\",\n\"kikki\",\n\"kikoi\",\n\"kilah\",\n\"kilan\",\n\"kileh\",\n\"kiley\",\n\"kylie\",\n\"kilij\",\n\"kilim\",\n\"kylin\",\n\"kylix\",\n\"killy\",\n\"kills\",\n\"kilns\",\n\"kyloe\",\n\"kilom\",\n\"kilos\",\n\"kilty\",\n\"kilts\",\n\"kimbo\",\n\"kimmo\",\n\"kinah\",\n\"kinch\",\n\"kinds\",\n\"kines\",\n\"kings\",\n\"kingu\",\n\"kinic\",\n\"kinin\",\n\"kinky\",\n\"kinks\",\n\"kinoo\",\n\"kinos\",\n\"kinot\",\n\"kioea\",\n\"kioko\",\n\"kiosk\",\n\"kyoto\",\n\"kiowa\",\n\"kippy\",\n\"kirby\",\n\"kyrie\",\n\"kirks\",\n\"kirns\",\n\"kirve\",\n\"kisan\",\n\"kishy\",\n\"kisra\",\n\"kissy\",\n\"kists\",\n\"kiswa\",\n\"kitab\",\n\"kitan\",\n\"kitar\",\n\"kited\",\n\"kiter\",\n\"kites\",\n\"kytes\",\n\"kithe\",\n\"kythe\",\n\"kiths\",\n\"kitty\",\n\"kyung\",\n\"kivas\",\n\"kiver\",\n\"kiwai\",\n\"kiwis\",\n\"kizil\",\n\"klans\",\n\"klaus\",\n\"kleig\",\n\"klick\",\n\"klieg\",\n\"kling\",\n\"klino\",\n\"klong\",\n\"kloof\",\n\"klops\",\n\"klosh\",\n\"kluck\",\n\"klunk\",\n\"klutz\",\n\"kmole\",\n\"knack\",\n\"knape\",\n\"knaps\",\n\"knark\",\n\"knarl\",\n\"knars\",\n\"knave\",\n\"knead\",\n\"kneed\",\n\"kneel\",\n\"knees\",\n\"knell\",\n\"knelt\",\n\"knezi\",\n\"kniaz\",\n\"knyaz\",\n\"knick\",\n\"knife\",\n\"knish\",\n\"knits\",\n\"knive\",\n\"knobs\",\n\"knock\",\n\"knoit\",\n\"knoll\",\n\"knops\",\n\"knorr\",\n\"knosp\",\n\"knots\",\n\"knout\",\n\"knowe\",\n\"known\",\n\"knows\",\n\"knurl\",\n\"knurs\",\n\"knute\",\n\"knuth\",\n\"koala\",\n\"koali\",\n\"koans\",\n\"koban\",\n\"kobus\",\n\"kodak\",\n\"kodro\",\n\"koels\",\n\"koeri\",\n\"kofta\",\n\"kogai\",\n\"kogia\",\n\"kohen\",\n\"kohls\",\n\"kohua\",\n\"koyan\",\n\"koila\",\n\"koine\",\n\"kokam\",\n\"kokan\",\n\"kokia\",\n\"kokil\",\n\"kokio\",\n\"kokos\",\n\"kokra\",\n\"kokum\",\n\"kolas\",\n\"kolea\",\n\"kolis\",\n\"kolos\",\n\"kombu\",\n\"konak\",\n\"konde\",\n\"kondo\",\n\"kongo\",\n\"kongu\",\n\"konia\",\n\"kooka\",\n\"kooky\",\n\"kooks\",\n\"koorg\",\n\"kopec\",\n\"kopek\",\n\"kophs\",\n\"kopis\",\n\"kopje\",\n\"koppa\",\n\"korah\",\n\"korai\",\n\"koran\",\n\"korea\",\n\"korec\",\n\"korin\",\n\"korma\",\n\"koroa\",\n\"korun\",\n\"korwa\",\n\"kosha\",\n\"kosin\",\n\"kosos\",\n\"kotal\",\n\"kotar\",\n\"kotos\",\n\"kotow\",\n\"kouza\",\n\"kovil\",\n\"kraal\",\n\"kraft\",\n\"krait\",\n\"krama\",\n\"krang\",\n\"krans\",\n\"kraut\",\n\"krebs\",\n\"kreil\",\n\"kreis\",\n\"krems\",\n\"kreng\",\n\"krepi\",\n\"krill\",\n\"krina\",\n\"kriss\",\n\"krivu\",\n\"krome\",\n\"krona\",\n\"krone\",\n\"kroon\",\n\"krosa\",\n\"krubi\",\n\"kubba\",\n\"kudos\",\n\"kudus\",\n\"kudzu\",\n\"kufic\",\n\"kugel\",\n\"kukri\",\n\"kukui\",\n\"kulah\",\n\"kulak\",\n\"kulan\",\n\"kuman\",\n\"kumbi\",\n\"kumyk\",\n\"kumis\",\n\"kumys\",\n\"kumni\",\n\"kunai\",\n\"kunbi\",\n\"kurku\",\n\"kurmi\",\n\"kurta\",\n\"kurus\",\n\"kusam\",\n\"kusan\",\n\"kusha\",\n\"kusso\",\n\"kusti\",\n\"kusum\",\n\"kutch\",\n\"kutta\",\n\"kvass\",\n\"kvint\",\n\"kwapa\",\n\"kwela\",\n\"laang\",\n\"laban\",\n\"labba\",\n\"labby\",\n\"label\",\n\"labia\",\n\"labis\",\n\"labor\",\n\"labra\",\n\"lacca\",\n\"laced\",\n\"lacey\",\n\"lacer\",\n\"laces\",\n\"lacet\",\n\"lache\",\n\"lacis\",\n\"lacks\",\n\"lacto\",\n\"laded\",\n\"laden\",\n\"lader\",\n\"lades\",\n\"ladik\",\n\"ladin\",\n\"ladle\",\n\"laeti\",\n\"laevo\",\n\"lagan\",\n\"lagen\",\n\"lager\",\n\"lagly\",\n\"lagna\",\n\"lahar\",\n\"laich\",\n\"laics\",\n\"layed\",\n\"layer\",\n\"laigh\",\n\"layia\",\n\"laine\",\n\"layne\",\n\"laird\",\n\"lairy\",\n\"lairs\",\n\"laith\",\n\"laity\",\n\"layup\",\n\"laius\",\n\"laked\",\n\"lakey\",\n\"laker\",\n\"lakes\",\n\"lakhs\",\n\"lakie\",\n\"lakin\",\n\"lakke\",\n\"laksa\",\n\"lally\",\n\"lalls\",\n\"lamas\",\n\"lamba\",\n\"lamby\",\n\"lambs\",\n\"lamda\",\n\"lamed\",\n\"lamel\",\n\"lamer\",\n\"lames\",\n\"lamia\",\n\"lamin\",\n\"lammy\",\n\"lamna\",\n\"lampf\",\n\"lamps\",\n\"lamus\",\n\"lamut\",\n\"lanai\",\n\"lanao\",\n\"lanas\",\n\"lanaz\",\n\"lance\",\n\"lanch\",\n\"lande\",\n\"lands\",\n\"laney\",\n\"lanes\",\n\"langi\",\n\"lango\",\n\"lanky\",\n\"lanny\",\n\"lansa\",\n\"lanum\",\n\"lapel\",\n\"lapin\",\n\"lapis\",\n\"lapon\",\n\"lappa\",\n\"lapps\",\n\"lapse\",\n\"lapsi\",\n\"larch\",\n\"lardy\",\n\"lards\",\n\"lares\",\n\"large\",\n\"largy\",\n\"largo\",\n\"laria\",\n\"larid\",\n\"larin\",\n\"larix\",\n\"larky\",\n\"larks\",\n\"laron\",\n\"larry\",\n\"larum\",\n\"larus\",\n\"larva\",\n\"larve\",\n\"lased\",\n\"laser\",\n\"lases\",\n\"lasso\",\n\"lassu\",\n\"lasty\",\n\"lasts\",\n\"latah\",\n\"latax\",\n\"latch\",\n\"lated\",\n\"laten\",\n\"later\",\n\"latex\",\n\"lathe\",\n\"lathi\",\n\"lathy\",\n\"laths\",\n\"latin\",\n\"latke\",\n\"laton\",\n\"latro\",\n\"latus\",\n\"lauan\",\n\"laude\",\n\"lauds\",\n\"laugh\",\n\"lauia\",\n\"laund\",\n\"laura\",\n\"laure\",\n\"laury\",\n\"lautu\",\n\"lavas\",\n\"laved\",\n\"laver\",\n\"laves\",\n\"lavic\",\n\"lawed\",\n\"lawks\",\n\"lawny\",\n\"lawns\",\n\"lawzy\",\n\"laxer\",\n\"laxly\",\n\"lazar\",\n\"lazed\",\n\"lazes\",\n\"leach\",\n\"leady\",\n\"leads\",\n\"leafy\",\n\"leafs\",\n\"leaky\",\n\"leaks\",\n\"leany\",\n\"leans\",\n\"leant\",\n\"leaps\",\n\"leapt\",\n\"leary\",\n\"learn\",\n\"lears\",\n\"lease\",\n\"leash\",\n\"least\",\n\"leath\",\n\"leave\",\n\"leavy\",\n\"leban\",\n\"leben\",\n\"lebes\",\n\"leche\",\n\"leden\",\n\"ledge\",\n\"ledgy\",\n\"ledol\",\n\"ledum\",\n\"leech\",\n\"leeds\",\n\"leeky\",\n\"leeks\",\n\"leery\",\n\"leers\",\n\"leese\",\n\"leets\",\n\"lefty\",\n\"lefts\",\n\"legal\",\n\"leger\",\n\"leges\",\n\"legge\",\n\"leggy\",\n\"legis\",\n\"legit\",\n\"legoa\",\n\"legua\",\n\"lehay\",\n\"lehrs\",\n\"lehua\",\n\"leigh\",\n\"leila\",\n\"leiss\",\n\"leith\",\n\"lekha\",\n\"lelia\",\n\"leman\",\n\"lemel\",\n\"lemma\",\n\"lemna\",\n\"lemon\",\n\"lemur\",\n\"lenad\",\n\"lenca\",\n\"lench\",\n\"lends\",\n\"lendu\",\n\"lenes\",\n\"lenin\",\n\"lenis\",\n\"lenny\",\n\"lenos\",\n\"lense\",\n\"lenth\",\n\"lento\",\n\"leone\",\n\"leora\",\n\"lepal\",\n\"lepas\",\n\"leper\",\n\"lepid\",\n\"leppy\",\n\"lepra\",\n\"lepre\",\n\"lepry\",\n\"lepta\",\n\"lepus\",\n\"lerot\",\n\"lerwa\",\n\"lesed\",\n\"lesgh\",\n\"lesya\",\n\"lesiy\",\n\"lessn\",\n\"leste\",\n\"letch\",\n\"lethe\",\n\"lethy\",\n\"letty\",\n\"letup\",\n\"leuch\",\n\"leuco\",\n\"leuds\",\n\"leuma\",\n\"leung\",\n\"levee\",\n\"level\",\n\"leven\",\n\"lever\",\n\"levet\",\n\"levin\",\n\"levir\",\n\"levis\",\n\"lewie\",\n\"lewis\",\n\"lewth\",\n\"lewty\",\n\"lexia\",\n\"lexic\",\n\"lexis\",\n\"lhota\",\n\"liana\",\n\"liane\",\n\"liang\",\n\"liard\",\n\"lyard\",\n\"liars\",\n\"lyart\",\n\"lyase\",\n\"libby\",\n\"libel\",\n\"liber\",\n\"libya\",\n\"libra\",\n\"libre\",\n\"libri\",\n\"licca\",\n\"lycea\",\n\"lycee\",\n\"licet\",\n\"lichi\",\n\"licht\",\n\"lycid\",\n\"licit\",\n\"licks\",\n\"lycus\",\n\"lidar\",\n\"lidia\",\n\"lydia\",\n\"lidos\",\n\"liege\",\n\"liens\",\n\"lyery\",\n\"liers\",\n\"liesh\",\n\"liest\",\n\"lieue\",\n\"lieus\",\n\"lieut\",\n\"lieve\",\n\"lifey\",\n\"lifen\",\n\"lifer\",\n\"lifts\",\n\"ligan\",\n\"ligas\",\n\"liger\",\n\"ligge\",\n\"light\",\n\"ligne\",\n\"lygus\",\n\"lying\",\n\"liked\",\n\"liken\",\n\"lyken\",\n\"liker\",\n\"likes\",\n\"likin\",\n\"lilac\",\n\"lilas\",\n\"liles\",\n\"lilly\",\n\"lilts\",\n\"liman\",\n\"limas\",\n\"limax\",\n\"limba\",\n\"limbi\",\n\"limby\",\n\"limbo\",\n\"limbs\",\n\"limbu\",\n\"limed\",\n\"limey\",\n\"limen\",\n\"limer\",\n\"limes\",\n\"limit\",\n\"limli\",\n\"limma\",\n\"limmu\",\n\"limns\",\n\"limos\",\n\"lymph\",\n\"limpy\",\n\"limps\",\n\"limsy\",\n\"linac\",\n\"linch\",\n\"lynch\",\n\"linda\",\n\"lindy\",\n\"lindo\",\n\"linea\",\n\"lined\",\n\"liney\",\n\"linen\",\n\"liner\",\n\"lines\",\n\"linet\",\n\"linga\",\n\"linge\",\n\"lingy\",\n\"lingo\",\n\"lings\",\n\"linha\",\n\"linie\",\n\"linin\",\n\"linja\",\n\"linje\",\n\"linky\",\n\"links\",\n\"linne\",\n\"lynne\",\n\"linns\",\n\"linon\",\n\"linos\",\n\"linty\",\n\"lints\",\n\"linum\",\n\"linus\",\n\"lions\",\n\"lipan\",\n\"lipic\",\n\"lipid\",\n\"lipin\",\n\"lippy\",\n\"lipse\",\n\"liras\",\n\"lyres\",\n\"lyric\",\n\"lyrid\",\n\"lirot\",\n\"lysed\",\n\"lyses\",\n\"lysin\",\n\"lysis\",\n\"lisle\",\n\"lysol\",\n\"lisps\",\n\"lyssa\",\n\"listy\",\n\"lists\",\n\"liszt\",\n\"litai\",\n\"litas\",\n\"litch\",\n\"liter\",\n\"lites\",\n\"lithe\",\n\"lythe\",\n\"lithi\",\n\"lithy\",\n\"litho\",\n\"lytic\",\n\"litra\",\n\"litre\",\n\"lytta\",\n\"litui\",\n\"litus\",\n\"lived\",\n\"liven\",\n\"liver\",\n\"lives\",\n\"livid\",\n\"livor\",\n\"livre\",\n\"liwan\",\n\"llama\",\n\"llano\",\n\"lloyd\",\n\"lludd\",\n\"loach\",\n\"loads\",\n\"loafs\",\n\"loamy\",\n\"loams\",\n\"loans\",\n\"loasa\",\n\"loath\",\n\"loave\",\n\"lobal\",\n\"lobar\",\n\"lobby\",\n\"lobed\",\n\"lobes\",\n\"lobos\",\n\"lobus\",\n\"local\",\n\"loche\",\n\"lochi\",\n\"lochy\",\n\"lochs\",\n\"locky\",\n\"locks\",\n\"locos\",\n\"locum\",\n\"locus\",\n\"loden\",\n\"lodes\",\n\"lodge\",\n\"lodha\",\n\"lodur\",\n\"loeil\",\n\"loess\",\n\"lofty\",\n\"lofts\",\n\"logan\",\n\"loges\",\n\"loggy\",\n\"logia\",\n\"logic\",\n\"logie\",\n\"login\",\n\"logis\",\n\"logoi\",\n\"logos\",\n\"lohan\",\n\"lohar\",\n\"loyal\",\n\"loins\",\n\"lokao\",\n\"loket\",\n\"lolly\",\n\"lolls\",\n\"lomta\",\n\"loner\",\n\"longa\",\n\"longe\",\n\"longs\",\n\"looby\",\n\"looch\",\n\"looed\",\n\"looey\",\n\"loofa\",\n\"loofs\",\n\"looie\",\n\"looky\",\n\"looks\",\n\"looms\",\n\"loony\",\n\"loons\",\n\"loope\",\n\"loopy\",\n\"loops\",\n\"loord\",\n\"loory\",\n\"loose\",\n\"loots\",\n\"loped\",\n\"loper\",\n\"lopes\",\n\"loppy\",\n\"loral\",\n\"loran\",\n\"lordy\",\n\"lords\",\n\"lored\",\n\"lorel\",\n\"loren\",\n\"lores\",\n\"loric\",\n\"loris\",\n\"loros\",\n\"lorry\",\n\"lorum\",\n\"losel\",\n\"loser\",\n\"loses\",\n\"lossy\",\n\"lotah\",\n\"lotan\",\n\"lotas\",\n\"lotic\",\n\"lotor\",\n\"lotos\",\n\"lotta\",\n\"lotte\",\n\"lotto\",\n\"lotus\",\n\"louch\",\n\"louey\",\n\"lough\",\n\"louie\",\n\"louis\",\n\"loulu\",\n\"loupe\",\n\"loups\",\n\"lourd\",\n\"loury\",\n\"lours\",\n\"louse\",\n\"lousy\",\n\"louty\",\n\"louts\",\n\"lovat\",\n\"loved\",\n\"lovee\",\n\"lovey\",\n\"lover\",\n\"loves\",\n\"lowan\",\n\"lowed\",\n\"lower\",\n\"lowes\",\n\"lowly\",\n\"lowry\",\n\"lowse\",\n\"lowth\",\n\"loxed\",\n\"loxes\",\n\"loxia\",\n\"loxic\",\n\"lrecl\",\n\"luaus\",\n\"lubes\",\n\"lubra\",\n\"lucan\",\n\"luces\",\n\"lucet\",\n\"lucia\",\n\"lucid\",\n\"lucky\",\n\"lucks\",\n\"lucre\",\n\"luddy\",\n\"luffa\",\n\"luffs\",\n\"luger\",\n\"luges\",\n\"luian\",\n\"luigi\",\n\"luite\",\n\"lukan\",\n\"lukas\",\n\"luket\",\n\"lulab\",\n\"lulav\",\n\"lully\",\n\"lulls\",\n\"lulus\",\n\"lumen\",\n\"lumme\",\n\"lummy\",\n\"lumpy\",\n\"lumps\",\n\"lumut\",\n\"lunar\",\n\"lunas\",\n\"lunch\",\n\"lunda\",\n\"lunel\",\n\"lunes\",\n\"lunet\",\n\"lunge\",\n\"lungi\",\n\"lungy\",\n\"lungs\",\n\"lunka\",\n\"lunks\",\n\"lunts\",\n\"lupid\",\n\"lupin\",\n\"lupis\",\n\"lupus\",\n\"lural\",\n\"lurch\",\n\"lured\",\n\"lurer\",\n\"lures\",\n\"lurid\",\n\"lurky\",\n\"lurks\",\n\"lurry\",\n\"luser\",\n\"lushy\",\n\"lusky\",\n\"lusty\",\n\"lusts\",\n\"lusus\",\n\"lutao\",\n\"lutea\",\n\"luted\",\n\"luteo\",\n\"luter\",\n\"lutes\",\n\"lutra\",\n\"luxes\",\n\"luxus\",\n\"maana\",\n\"maars\",\n\"mabel\",\n\"macan\",\n\"macao\",\n\"macaw\",\n\"macco\",\n\"maced\",\n\"macer\",\n\"maces\",\n\"machi\",\n\"macho\",\n\"machs\",\n\"macks\",\n\"macle\",\n\"macon\",\n\"macro\",\n\"madam\",\n\"madge\",\n\"madia\",\n\"madid\",\n\"madly\",\n\"madoc\",\n\"madre\",\n\"mafey\",\n\"mafia\",\n\"mafic\",\n\"mafoo\",\n\"magas\",\n\"mages\",\n\"maggy\",\n\"maghi\",\n\"magic\",\n\"magma\",\n\"magna\",\n\"magog\",\n\"magot\",\n\"magus\",\n\"mahal\",\n\"mahar\",\n\"mahat\",\n\"mahdi\",\n\"mahoe\",\n\"mahra\",\n\"mahri\",\n\"mahua\",\n\"mahwa\",\n\"mayan\",\n\"mayas\",\n\"maybe\",\n\"maida\",\n\"mayda\",\n\"maidy\",\n\"maids\",\n\"maidu\",\n\"mayed\",\n\"mayey\",\n\"mayer\",\n\"maiid\",\n\"maile\",\n\"maill\",\n\"mails\",\n\"maims\",\n\"maine\",\n\"mains\",\n\"maint\",\n\"maynt\",\n\"mayor\",\n\"maire\",\n\"mairs\",\n\"maist\",\n\"mayst\",\n\"maius\",\n\"maize\",\n\"majas\",\n\"major\",\n\"majos\",\n\"makah\",\n\"makar\",\n\"maker\",\n\"makes\",\n\"makos\",\n\"makua\",\n\"makuk\",\n\"malay\",\n\"malam\",\n\"malar\",\n\"malax\",\n\"malee\",\n\"maleo\",\n\"males\",\n\"malgr\",\n\"malic\",\n\"malie\",\n\"malik\",\n\"malls\",\n\"malmy\",\n\"malms\",\n\"malta\",\n\"malty\",\n\"malto\",\n\"malts\",\n\"malum\",\n\"malus\",\n\"malva\",\n\"malwa\",\n\"mamas\",\n\"mamba\",\n\"mambo\",\n\"mambu\",\n\"mamey\",\n\"mamie\",\n\"mamma\",\n\"mammy\",\n\"mamry\",\n\"manak\",\n\"manal\",\n\"manas\",\n\"manba\",\n\"mande\",\n\"mandi\",\n\"mands\",\n\"maned\",\n\"maneh\",\n\"manei\",\n\"maney\",\n\"manes\",\n\"manet\",\n\"manga\",\n\"mange\",\n\"mangi\",\n\"mangy\",\n\"mango\",\n\"mania\",\n\"manic\",\n\"manid\",\n\"manie\",\n\"manis\",\n\"manit\",\n\"maniu\",\n\"manky\",\n\"manks\",\n\"manly\",\n\"manna\",\n\"manny\",\n\"manoc\",\n\"manor\",\n\"manos\",\n\"manqu\",\n\"manse\",\n\"manso\",\n\"manta\",\n\"manty\",\n\"manto\",\n\"manuf\",\n\"manul\",\n\"manus\",\n\"maori\",\n\"mapau\",\n\"maple\",\n\"mappy\",\n\"maqui\",\n\"marae\",\n\"marah\",\n\"maray\",\n\"maral\",\n\"maras\",\n\"march\",\n\"marci\",\n\"marco\",\n\"marcs\",\n\"mardi\",\n\"mardy\",\n\"marek\",\n\"mares\",\n\"marga\",\n\"marge\",\n\"maria\",\n\"marid\",\n\"marie\",\n\"mario\",\n\"maris\",\n\"marys\",\n\"marka\",\n\"marko\",\n\"marks\",\n\"marla\",\n\"marli\",\n\"marly\",\n\"marls\",\n\"marok\",\n\"maror\",\n\"maros\",\n\"marry\",\n\"marse\",\n\"marsh\",\n\"marsi\",\n\"marty\",\n\"marts\",\n\"martu\",\n\"marvy\",\n\"masai\",\n\"maser\",\n\"masha\",\n\"mashy\",\n\"masks\",\n\"mason\",\n\"massa\",\n\"masse\",\n\"massy\",\n\"masty\",\n\"masts\",\n\"matai\",\n\"matar\",\n\"matax\",\n\"match\",\n\"mated\",\n\"matey\",\n\"mater\",\n\"mates\",\n\"matha\",\n\"mathe\",\n\"maths\",\n\"matie\",\n\"matin\",\n\"matka\",\n\"matlo\",\n\"matra\",\n\"matsu\",\n\"matta\",\n\"matte\",\n\"matti\",\n\"matty\",\n\"matts\",\n\"matza\",\n\"matzo\",\n\"mauby\",\n\"maugh\",\n\"mauls\",\n\"maund\",\n\"mauri\",\n\"mauts\",\n\"mauve\",\n\"maven\",\n\"mavie\",\n\"mavin\",\n\"mavis\",\n\"mawed\",\n\"mawky\",\n\"mawks\",\n\"maxim\",\n\"maxis\",\n\"mazda\",\n\"mazed\",\n\"mazel\",\n\"mazer\",\n\"mazes\",\n\"mazic\",\n\"mazur\",\n\"mazut\",\n\"mbaya\",\n\"mbira\",\n\"mbori\",\n\"mbuba\",\n\"mccoy\",\n\"mckay\",\n\"meach\",\n\"meads\",\n\"mealy\",\n\"meals\",\n\"meany\",\n\"means\",\n\"meant\",\n\"mease\",\n\"meath\",\n\"meaty\",\n\"meats\",\n\"meaul\",\n\"mebos\",\n\"mecca\",\n\"mecon\",\n\"mecum\",\n\"medal\",\n\"medea\",\n\"media\",\n\"medic\",\n\"medii\",\n\"medio\",\n\"medle\",\n\"medoc\",\n\"meece\",\n\"meech\",\n\"meeds\",\n\"meeks\",\n\"meese\",\n\"meeth\",\n\"meets\",\n\"meggy\",\n\"meiji\",\n\"meile\",\n\"meiny\",\n\"meith\",\n\"melam\",\n\"melas\",\n\"melba\",\n\"melch\",\n\"melds\",\n\"melee\",\n\"meles\",\n\"melia\",\n\"melic\",\n\"melis\",\n\"mells\",\n\"meloe\",\n\"melon\",\n\"melos\",\n\"melts\",\n\"memos\",\n\"menad\",\n\"menat\",\n\"mende\",\n\"mendi\",\n\"mendy\",\n\"mends\",\n\"menic\",\n\"menow\",\n\"mensa\",\n\"mense\",\n\"mensk\",\n\"menta\",\n\"menus\",\n\"meows\",\n\"merak\",\n\"merat\",\n\"merce\",\n\"merch\",\n\"merci\",\n\"mercy\",\n\"mered\",\n\"merel\",\n\"merer\",\n\"meres\",\n\"merge\",\n\"mergh\",\n\"meril\",\n\"merit\",\n\"merks\",\n\"merle\",\n\"merls\",\n\"merop\",\n\"meros\",\n\"merry\",\n\"merse\",\n\"mesad\",\n\"mesal\",\n\"mesas\",\n\"mesel\",\n\"mesem\",\n\"meshy\",\n\"mesic\",\n\"mesne\",\n\"meson\",\n\"messe\",\n\"messy\",\n\"mesua\",\n\"metad\",\n\"metae\",\n\"metal\",\n\"metas\",\n\"meted\",\n\"metel\",\n\"meter\",\n\"metes\",\n\"metho\",\n\"meths\",\n\"metic\",\n\"metif\",\n\"metin\",\n\"metis\",\n\"metol\",\n\"metra\",\n\"metre\",\n\"metro\",\n\"metus\",\n\"metze\",\n\"meuni\",\n\"meuse\",\n\"meute\",\n\"mewed\",\n\"mewer\",\n\"mewls\",\n\"mezzo\",\n\"mhorr\",\n\"myall\",\n\"miami\",\n\"miaou\",\n\"miaow\",\n\"miasm\",\n\"miaul\",\n\"miauw\",\n\"micah\",\n\"micas\",\n\"miche\",\n\"micht\",\n\"micky\",\n\"micks\",\n\"mycol\",\n\"micra\",\n\"micro\",\n\"midas\",\n\"middy\",\n\"mider\",\n\"midge\",\n\"midgy\",\n\"midis\",\n\"midst\",\n\"miens\",\n\"miffy\",\n\"miffs\",\n\"miggs\",\n\"might\",\n\"miked\",\n\"mikey\",\n\"mikes\",\n\"mikie\",\n\"mikir\",\n\"mikra\",\n\"milan\",\n\"mylar\",\n\"milch\",\n\"miler\",\n\"miles\",\n\"milha\",\n\"milia\",\n\"milit\",\n\"milky\",\n\"milko\",\n\"milks\",\n\"milla\",\n\"mille\",\n\"milly\",\n\"mills\",\n\"milor\",\n\"milos\",\n\"milpa\",\n\"milty\",\n\"milts\",\n\"mymar\",\n\"mimed\",\n\"mimeo\",\n\"mimer\",\n\"mimes\",\n\"mimic\",\n\"mimir\",\n\"mimly\",\n\"mimsy\",\n\"mimus\",\n\"mimzy\",\n\"minae\",\n\"minah\",\n\"mynah\",\n\"minar\",\n\"minas\",\n\"mynas\",\n\"minbu\",\n\"mince\",\n\"mincy\",\n\"minds\",\n\"mined\",\n\"miner\",\n\"mines\",\n\"minge\",\n\"mingy\",\n\"mingo\",\n\"minie\",\n\"minim\",\n\"minis\",\n\"minks\",\n\"minny\",\n\"minor\",\n\"minos\",\n\"minot\",\n\"minow\",\n\"minty\",\n\"mints\",\n\"minum\",\n\"minus\",\n\"myoid\",\n\"myoma\",\n\"myope\",\n\"myopy\",\n\"myops\",\n\"miqra\",\n\"mirac\",\n\"mirak\",\n\"mired\",\n\"mires\",\n\"mirex\",\n\"mirid\",\n\"mirky\",\n\"mirks\",\n\"mirly\",\n\"myron\",\n\"myrrh\",\n\"mirth\",\n\"mirvs\",\n\"mirza\",\n\"misce\",\n\"misdo\",\n\"mysel\",\n\"miser\",\n\"mises\",\n\"misgo\",\n\"mysid\",\n\"mysis\",\n\"misky\",\n\"misly\",\n\"misos\",\n\"missa\",\n\"missy\",\n\"misty\",\n\"mists\",\n\"mitch\",\n\"miter\",\n\"mites\",\n\"myths\",\n\"mitis\",\n\"mitra\",\n\"mitre\",\n\"mitty\",\n\"mitts\",\n\"mitua\",\n\"mixed\",\n\"mixen\",\n\"mixer\",\n\"mixes\",\n\"mixup\",\n\"mizar\",\n\"mizen\",\n\"mizzy\",\n\"mnage\",\n\"mneme\",\n\"mnium\",\n\"moans\",\n\"moats\",\n\"mobby\",\n\"mobed\",\n\"mobil\",\n\"moble\",\n\"mocha\",\n\"moche\",\n\"mochy\",\n\"mocks\",\n\"mocoa\",\n\"modal\",\n\"model\",\n\"modem\",\n\"moder\",\n\"modes\",\n\"modge\",\n\"modif\",\n\"modoc\",\n\"modus\",\n\"moeck\",\n\"moggy\",\n\"mogos\",\n\"mogul\",\n\"mohar\",\n\"mohel\",\n\"mohos\",\n\"mohur\",\n\"mohwa\",\n\"moyen\",\n\"moier\",\n\"moile\",\n\"moyle\",\n\"moils\",\n\"moira\",\n\"moire\",\n\"moise\",\n\"moism\",\n\"moist\",\n\"moity\",\n\"mojos\",\n\"mokes\",\n\"mokum\",\n\"molal\",\n\"molar\",\n\"molas\",\n\"moldy\",\n\"molds\",\n\"moler\",\n\"moles\",\n\"molet\",\n\"molge\",\n\"molka\",\n\"molla\",\n\"molle\",\n\"molly\",\n\"molls\",\n\"molpe\",\n\"molto\",\n\"molts\",\n\"molvi\",\n\"momes\",\n\"momma\",\n\"momme\",\n\"mommy\",\n\"momus\",\n\"monad\",\n\"monal\",\n\"monas\",\n\"monax\",\n\"monde\",\n\"mondo\",\n\"money\",\n\"monel\",\n\"moner\",\n\"mongo\",\n\"monic\",\n\"monie\",\n\"monks\",\n\"monny\",\n\"monos\",\n\"monte\",\n\"month\",\n\"monty\",\n\"montu\",\n\"mooch\",\n\"moody\",\n\"moods\",\n\"mooed\",\n\"moola\",\n\"mools\",\n\"moong\",\n\"moony\",\n\"moons\",\n\"moore\",\n\"moory\",\n\"moorn\",\n\"moors\",\n\"moosa\",\n\"moose\",\n\"moost\",\n\"mooth\",\n\"moots\",\n\"mopan\",\n\"moped\",\n\"mopey\",\n\"moper\",\n\"mopes\",\n\"mopla\",\n\"moppy\",\n\"mopsy\",\n\"mopus\",\n\"moqui\",\n\"morae\",\n\"moray\",\n\"moral\",\n\"moran\",\n\"moras\",\n\"morat\",\n\"mordu\",\n\"mordv\",\n\"morel\",\n\"mores\",\n\"morga\",\n\"moric\",\n\"morin\",\n\"mormo\",\n\"morne\",\n\"morns\",\n\"moroc\",\n\"moron\",\n\"moror\",\n\"morph\",\n\"morra\",\n\"morro\",\n\"morse\",\n\"morth\",\n\"morts\",\n\"morus\",\n\"mosan\",\n\"mosey\",\n\"mosel\",\n\"moses\",\n\"mosgu\",\n\"mosks\",\n\"mossi\",\n\"mossy\",\n\"mosso\",\n\"moste\",\n\"mosts\",\n\"mosul\",\n\"mosur\",\n\"moted\",\n\"motey\",\n\"motel\",\n\"moter\",\n\"motes\",\n\"motet\",\n\"mothy\",\n\"moths\",\n\"motif\",\n\"moton\",\n\"motor\",\n\"motte\",\n\"motty\",\n\"motto\",\n\"motts\",\n\"mouch\",\n\"moudy\",\n\"moues\",\n\"mould\",\n\"moule\",\n\"mouly\",\n\"mouls\",\n\"moult\",\n\"mound\",\n\"mount\",\n\"mourn\",\n\"mouse\",\n\"mousy\",\n\"mouth\",\n\"moved\",\n\"mover\",\n\"moves\",\n\"movie\",\n\"mowch\",\n\"mowed\",\n\"mower\",\n\"mowha\",\n\"mowie\",\n\"mowra\",\n\"mowse\",\n\"mowth\",\n\"moxas\",\n\"moxie\",\n\"mozos\",\n\"mphps\",\n\"mpret\",\n\"msink\",\n\"mster\",\n\"mtier\",\n\"muang\",\n\"mucic\",\n\"mucid\",\n\"mucin\",\n\"mucky\",\n\"mucks\",\n\"mucor\",\n\"mucro\",\n\"mucus\",\n\"mudar\",\n\"mudde\",\n\"muddy\",\n\"mudee\",\n\"mudir\",\n\"mudra\",\n\"muffy\",\n\"muffs\",\n\"mufti\",\n\"mufty\",\n\"muggy\",\n\"muggs\",\n\"mugho\",\n\"mugil\",\n\"muhly\",\n\"muist\",\n\"mujik\",\n\"mukri\",\n\"mukti\",\n\"mulch\",\n\"mulct\",\n\"muled\",\n\"muley\",\n\"mules\",\n\"mulet\",\n\"mulga\",\n\"mulla\",\n\"mulls\",\n\"mulse\",\n\"multi\",\n\"multo\",\n\"mumbo\",\n\"mummy\",\n\"mumms\",\n\"mumps\",\n\"mumsy\",\n\"munch\",\n\"munda\",\n\"munga\",\n\"munge\",\n\"mungy\",\n\"mungo\",\n\"munia\",\n\"munic\",\n\"muntz\",\n\"muong\",\n\"muons\",\n\"mural\",\n\"muran\",\n\"muras\",\n\"murat\",\n\"mured\",\n\"mures\",\n\"murex\",\n\"murga\",\n\"murid\",\n\"murky\",\n\"murks\",\n\"murly\",\n\"murmi\",\n\"murph\",\n\"murra\",\n\"murre\",\n\"murry\",\n\"murrs\",\n\"murut\",\n\"murva\",\n\"murza\",\n\"musal\",\n\"musar\",\n\"musca\",\n\"musci\",\n\"mused\",\n\"muser\",\n\"muses\",\n\"muset\",\n\"musgu\",\n\"musha\",\n\"mushy\",\n\"music\",\n\"musie\",\n\"musit\",\n\"musky\",\n\"musks\",\n\"mussy\",\n\"musth\",\n\"musty\",\n\"musts\",\n\"mutch\",\n\"muted\",\n\"muter\",\n\"mutes\",\n\"mutic\",\n\"mutts\",\n\"mutus\",\n\"muzzy\",\n\"nabak\",\n\"nabal\",\n\"nabby\",\n\"nabis\",\n\"nabla\",\n\"nable\",\n\"nabob\",\n\"nache\",\n\"nacho\",\n\"nacre\",\n\"nacry\",\n\"nadir\",\n\"naevi\",\n\"nagel\",\n\"naggy\",\n\"naght\",\n\"nagor\",\n\"nahor\",\n\"nahua\",\n\"nahum\",\n\"naiad\",\n\"nayar\",\n\"naias\",\n\"naifs\",\n\"naily\",\n\"nails\",\n\"naira\",\n\"nairy\",\n\"naish\",\n\"naive\",\n\"naked\",\n\"naker\",\n\"nakir\",\n\"nakoo\",\n\"naled\",\n\"namaz\",\n\"nambe\",\n\"namby\",\n\"namda\",\n\"named\",\n\"namer\",\n\"names\",\n\"namma\",\n\"nammo\",\n\"nanas\",\n\"nance\",\n\"nancy\",\n\"nanda\",\n\"nandi\",\n\"nandu\",\n\"nanes\",\n\"nanga\",\n\"nanmu\",\n\"nanny\",\n\"nants\",\n\"nantz\",\n\"naomi\",\n\"naoto\",\n\"napal\",\n\"napes\",\n\"napoo\",\n\"nappa\",\n\"nappe\",\n\"nappy\",\n\"narco\",\n\"narcs\",\n\"nards\",\n\"nardu\",\n\"naren\",\n\"nares\",\n\"naric\",\n\"naris\",\n\"narky\",\n\"narks\",\n\"narra\",\n\"nasab\",\n\"nasal\",\n\"nasat\",\n\"nasch\",\n\"nassa\",\n\"nasty\",\n\"nasua\",\n\"nasus\",\n\"natal\",\n\"natch\",\n\"nates\",\n\"nathe\",\n\"natty\",\n\"natus\",\n\"nauch\",\n\"naumk\",\n\"naunt\",\n\"naval\",\n\"navar\",\n\"navel\",\n\"naves\",\n\"navet\",\n\"navew\",\n\"navig\",\n\"navis\",\n\"navvy\",\n\"nawab\",\n\"nawle\",\n\"nawob\",\n\"nazim\",\n\"nazir\",\n\"nazis\",\n\"neaps\",\n\"nears\",\n\"neath\",\n\"neats\",\n\"nebby\",\n\"nebel\",\n\"necia\",\n\"necks\",\n\"necro\",\n\"neddy\",\n\"needy\",\n\"needn\",\n\"needs\",\n\"neela\",\n\"neeld\",\n\"neele\",\n\"neems\",\n\"neeps\",\n\"neese\",\n\"neeze\",\n\"nefas\",\n\"neffy\",\n\"neger\",\n\"negro\",\n\"negus\",\n\"nehru\",\n\"neifs\",\n\"neigh\",\n\"neist\",\n\"nejdi\",\n\"nelly\",\n\"nemas\",\n\"nemos\",\n\"nenes\",\n\"nenta\",\n\"neons\",\n\"neoza\",\n\"nepal\",\n\"neper\",\n\"nepit\",\n\"neral\",\n\"nerds\",\n\"nerka\",\n\"nerol\",\n\"nerts\",\n\"nertz\",\n\"nerve\",\n\"nervy\",\n\"nesty\",\n\"nests\",\n\"neter\",\n\"netop\",\n\"netty\",\n\"netts\",\n\"neuma\",\n\"neume\",\n\"neums\",\n\"nevat\",\n\"nevel\",\n\"neven\",\n\"never\",\n\"neves\",\n\"nevoy\",\n\"nevus\",\n\"newar\",\n\"newel\",\n\"newer\",\n\"newly\",\n\"newsy\",\n\"newts\",\n\"nexal\",\n\"nexum\",\n\"nexus\",\n\"ngaio\",\n\"ngapi\",\n\"ngoko\",\n\"ngoma\",\n\"ngwee\",\n\"nyaya\",\n\"niais\",\n\"nyala\",\n\"niall\",\n\"niata\",\n\"nibby\",\n\"nicer\",\n\"niche\",\n\"nicht\",\n\"nicky\",\n\"nicks\",\n\"nicol\",\n\"nidal\",\n\"nided\",\n\"nides\",\n\"nidge\",\n\"nydia\",\n\"nidor\",\n\"nidus\",\n\"niece\",\n\"niels\",\n\"niepa\",\n\"nieve\",\n\"nific\",\n\"nifle\",\n\"nifty\",\n\"nigel\",\n\"nighs\",\n\"night\",\n\"nigre\",\n\"nigua\",\n\"nihal\",\n\"nihil\",\n\"nikau\",\n\"nikko\",\n\"nikon\",\n\"nills\",\n\"nylon\",\n\"nilot\",\n\"nimbi\",\n\"nymil\",\n\"nymph\",\n\"nymss\",\n\"nines\",\n\"ninja\",\n\"ninny\",\n\"ninon\",\n\"ninos\",\n\"ninox\",\n\"ninth\",\n\"nintu\",\n\"ninut\",\n\"niobe\",\n\"nyoro\",\n\"niota\",\n\"nipas\",\n\"nippy\",\n\"niris\",\n\"nirls\",\n\"nisan\",\n\"nisei\",\n\"nyssa\",\n\"nisse\",\n\"nisus\",\n\"nitch\",\n\"niter\",\n\"nitid\",\n\"niton\",\n\"nitos\",\n\"nitre\",\n\"nitro\",\n\"nitta\",\n\"nitty\",\n\"niuan\",\n\"nival\",\n\"nixed\",\n\"nixer\",\n\"nixes\",\n\"nixie\",\n\"nyxis\",\n\"nixon\",\n\"nizam\",\n\"nizey\",\n\"njave\",\n\"nobby\",\n\"nobel\",\n\"nobis\",\n\"noble\",\n\"nobly\",\n\"nobut\",\n\"nocht\",\n\"nocks\",\n\"nodal\",\n\"noddi\",\n\"noddy\",\n\"noded\",\n\"nodes\",\n\"nodus\",\n\"noels\",\n\"noemi\",\n\"nogai\",\n\"nogal\",\n\"noggs\",\n\"nohex\",\n\"nohow\",\n\"noyau\",\n\"noily\",\n\"noils\",\n\"noint\",\n\"noire\",\n\"noise\",\n\"noisy\",\n\"nokta\",\n\"nolle\",\n\"nolos\",\n\"nomad\",\n\"nomap\",\n\"nomas\",\n\"nomen\",\n\"nomes\",\n\"nomic\",\n\"nomoi\",\n\"nomos\",\n\"nonas\",\n\"nonce\",\n\"nonda\",\n\"nondo\",\n\"nones\",\n\"nonet\",\n\"nonya\",\n\"nonic\",\n\"nonyl\",\n\"nonly\",\n\"nonny\",\n\"nooky\",\n\"nooks\",\n\"noons\",\n\"noose\",\n\"nopal\",\n\"norah\",\n\"noria\",\n\"noric\",\n\"norie\",\n\"norit\",\n\"norma\",\n\"norms\",\n\"norna\",\n\"norry\",\n\"norse\",\n\"norsk\",\n\"north\",\n\"nosed\",\n\"nosey\",\n\"noser\",\n\"noses\",\n\"nosig\",\n\"notal\",\n\"notan\",\n\"notch\",\n\"noted\",\n\"noter\",\n\"notes\",\n\"notre\",\n\"notum\",\n\"notus\",\n\"nould\",\n\"nouns\",\n\"novae\",\n\"novas\",\n\"novel\",\n\"novem\",\n\"novum\",\n\"novus\",\n\"noway\",\n\"nowch\",\n\"nowed\",\n\"nowel\",\n\"nowts\",\n\"noxal\",\n\"npeel\",\n\"nuadu\",\n\"nubby\",\n\"nubia\",\n\"nucal\",\n\"nucha\",\n\"nucin\",\n\"nuddy\",\n\"nuder\",\n\"nudes\",\n\"nudge\",\n\"nudie\",\n\"nudum\",\n\"nudzh\",\n\"nugae\",\n\"nukes\",\n\"nullo\",\n\"nulls\",\n\"numac\",\n\"numbs\",\n\"numda\",\n\"numen\",\n\"numis\",\n\"nummi\",\n\"numps\",\n\"numud\",\n\"nunce\",\n\"nunch\",\n\"nunki\",\n\"nunky\",\n\"nunks\",\n\"nunni\",\n\"nunry\",\n\"nuque\",\n\"nurly\",\n\"nurls\",\n\"nurry\",\n\"nurse\",\n\"nursy\",\n\"nutsy\",\n\"nutty\",\n\"oadal\",\n\"oaken\",\n\"oakum\",\n\"oared\",\n\"oaric\",\n\"oasal\",\n\"oases\",\n\"oasis\",\n\"oasts\",\n\"oaten\",\n\"oater\",\n\"oaths\",\n\"oaves\",\n\"obeah\",\n\"obeys\",\n\"obeli\",\n\"obese\",\n\"obias\",\n\"obiit\",\n\"obits\",\n\"objet\",\n\"oblat\",\n\"obley\",\n\"obmit\",\n\"oboes\",\n\"obole\",\n\"oboli\",\n\"obols\",\n\"occas\",\n\"occur\",\n\"ocean\",\n\"ocher\",\n\"ochna\",\n\"ochre\",\n\"ochry\",\n\"ochro\",\n\"ocyte\",\n\"ocker\",\n\"ocote\",\n\"ocque\",\n\"ocrea\",\n\"octad\",\n\"octal\",\n\"octan\",\n\"octet\",\n\"octic\",\n\"octyl\",\n\"ocuby\",\n\"oculi\",\n\"odder\",\n\"oddly\",\n\"odell\",\n\"odeon\",\n\"odeum\",\n\"odyle\",\n\"odyls\",\n\"odist\",\n\"odium\",\n\"odoom\",\n\"odors\",\n\"odour\",\n\"oecus\",\n\"oelet\",\n\"oenin\",\n\"ofays\",\n\"offal\",\n\"offed\",\n\"offer\",\n\"offic\",\n\"often\",\n\"ofter\",\n\"oftly\",\n\"ogams\",\n\"ogeed\",\n\"ogees\",\n\"ogham\",\n\"oghuz\",\n\"ogive\",\n\"ogled\",\n\"ogler\",\n\"ogles\",\n\"ogmic\",\n\"ogres\",\n\"ohare\",\n\"ohelo\",\n\"ohias\",\n\"ohing\",\n\"ohmic\",\n\"ohone\",\n\"oyana\",\n\"oicks\",\n\"oidia\",\n\"oyers\",\n\"oiled\",\n\"oiler\",\n\"oylet\",\n\"oinks\",\n\"oisin\",\n\"okays\",\n\"okapi\",\n\"okehs\",\n\"okras\",\n\"okrug\",\n\"olcha\",\n\"olchi\",\n\"olden\",\n\"older\",\n\"oldie\",\n\"oleic\",\n\"olein\",\n\"olena\",\n\"olent\",\n\"oleos\",\n\"olepy\",\n\"oleum\",\n\"olios\",\n\"oliva\",\n\"olive\",\n\"ollas\",\n\"ollav\",\n\"ollie\",\n\"ology\",\n\"olona\",\n\"olpae\",\n\"olpes\",\n\"olson\",\n\"omaha\",\n\"omani\",\n\"omasa\",\n\"omber\",\n\"ombre\",\n\"omega\",\n\"omens\",\n\"omers\",\n\"omina\",\n\"omits\",\n\"omlah\",\n\"omnes\",\n\"omrah\",\n\"oncer\",\n\"onces\",\n\"oncet\",\n\"oncia\",\n\"oncin\",\n\"onery\",\n\"onymy\",\n\"onion\",\n\"onium\",\n\"onker\",\n\"onkos\",\n\"onlay\",\n\"onlap\",\n\"onmun\",\n\"onset\",\n\"ontal\",\n\"ontic\",\n\"oobit\",\n\"oohed\",\n\"oolak\",\n\"oolly\",\n\"oomph\",\n\"oopak\",\n\"oopod\",\n\"oorie\",\n\"ootid\",\n\"oozed\",\n\"oozes\",\n\"oozoa\",\n\"opahs\",\n\"opals\",\n\"opata\",\n\"opelu\",\n\"opens\",\n\"opera\",\n\"ophic\",\n\"ophir\",\n\"ophis\",\n\"opine\",\n\"oping\",\n\"opium\",\n\"opsin\",\n\"opted\",\n\"optic\",\n\"orach\",\n\"oracy\",\n\"orage\",\n\"orale\",\n\"orals\",\n\"orang\",\n\"orans\",\n\"orant\",\n\"oraon\",\n\"orary\",\n\"orate\",\n\"orbed\",\n\"orbic\",\n\"orbit\",\n\"orcas\",\n\"orcin\",\n\"order\",\n\"ordos\",\n\"oread\",\n\"oreas\",\n\"orgal\",\n\"organ\",\n\"orgia\",\n\"orgic\",\n\"orgue\",\n\"orias\",\n\"oribi\",\n\"oriel\",\n\"oriya\",\n\"orion\",\n\"oryza\",\n\"orkey\",\n\"orles\",\n\"orlet\",\n\"orlon\",\n\"orlop\",\n\"orlos\",\n\"ormer\",\n\"ornes\",\n\"ornis\",\n\"oromo\",\n\"orpin\",\n\"orpit\",\n\"orris\",\n\"orrow\",\n\"orsel\",\n\"orson\",\n\"ortet\",\n\"ortho\",\n\"ortyx\",\n\"ortol\",\n\"orvet\",\n\"osage\",\n\"osaka\",\n\"oscan\",\n\"oscar\",\n\"oscin\",\n\"osela\",\n\"oshac\",\n\"oshea\",\n\"oside\",\n\"osier\",\n\"oskar\",\n\"osmic\",\n\"osmin\",\n\"osmol\",\n\"osone\",\n\"ossal\",\n\"ossea\",\n\"osset\",\n\"ossia\",\n\"ostia\",\n\"ostic\",\n\"otary\",\n\"otate\",\n\"other\",\n\"othin\",\n\"otyak\",\n\"otium\",\n\"otkon\",\n\"otomi\",\n\"ottar\",\n\"otter\",\n\"ottos\",\n\"ouabe\",\n\"ought\",\n\"ouija\",\n\"oukia\",\n\"oulap\",\n\"ounce\",\n\"oundy\",\n\"ounds\",\n\"ouphe\",\n\"ouphs\",\n\"ourie\",\n\"ousel\",\n\"ousia\",\n\"ousts\",\n\"outas\",\n\"outby\",\n\"outdo\",\n\"outed\",\n\"outen\",\n\"outer\",\n\"outgo\",\n\"outly\",\n\"outre\",\n\"ouvre\",\n\"ouzel\",\n\"ouzos\",\n\"ovals\",\n\"ovant\",\n\"ovary\",\n\"ovate\",\n\"ovens\",\n\"overs\",\n\"overt\",\n\"ovest\",\n\"ovile\",\n\"ovine\",\n\"ovism\",\n\"ovist\",\n\"ovoid\",\n\"ovoli\",\n\"ovolo\",\n\"ovula\",\n\"ovule\",\n\"owght\",\n\"owing\",\n\"owler\",\n\"owlet\",\n\"owned\",\n\"owner\",\n\"owsen\",\n\"owser\",\n\"oxane\",\n\"oxboy\",\n\"oxbow\",\n\"oxeye\",\n\"oxfly\",\n\"oxide\",\n\"oxids\",\n\"oxime\",\n\"oxims\",\n\"oxlip\",\n\"oxman\",\n\"oxter\",\n\"ozark\",\n\"ozena\",\n\"ozias\",\n\"ozone\",\n\"paauw\",\n\"pablo\",\n\"pacay\",\n\"pacas\",\n\"paced\",\n\"pacer\",\n\"paces\",\n\"pacha\",\n\"pacht\",\n\"packs\",\n\"pacos\",\n\"pacta\",\n\"pacts\",\n\"padda\",\n\"paddy\",\n\"padge\",\n\"padle\",\n\"padou\",\n\"padre\",\n\"padri\",\n\"padus\",\n\"paean\",\n\"paeon\",\n\"pagan\",\n\"paged\",\n\"pager\",\n\"pages\",\n\"pagne\",\n\"pagod\",\n\"pagus\",\n\"pahmi\",\n\"pahos\",\n\"payed\",\n\"payee\",\n\"payen\",\n\"payer\",\n\"paiks\",\n\"pails\",\n\"paine\",\n\"payni\",\n\"pains\",\n\"paint\",\n\"payor\",\n\"pairs\",\n\"pairt\",\n\"paisa\",\n\"paise\",\n\"palay\",\n\"palar\",\n\"palas\",\n\"palau\",\n\"palch\",\n\"palea\",\n\"paled\",\n\"paler\",\n\"pales\",\n\"palet\",\n\"palew\",\n\"palis\",\n\"palki\",\n\"palla\",\n\"palli\",\n\"pally\",\n\"palls\",\n\"pallu\",\n\"palma\",\n\"palmy\",\n\"palmo\",\n\"palms\",\n\"palpi\",\n\"palps\",\n\"palsy\",\n\"palta\",\n\"palus\",\n\"pamhy\",\n\"pamir\",\n\"pampa\",\n\"panak\",\n\"panax\",\n\"panda\",\n\"pandy\",\n\"paned\",\n\"panel\",\n\"panes\",\n\"panga\",\n\"pangi\",\n\"pangs\",\n\"panic\",\n\"panna\",\n\"panne\",\n\"panos\",\n\"panse\",\n\"pansy\",\n\"panty\",\n\"panto\",\n\"pants\",\n\"panus\",\n\"paola\",\n\"paolo\",\n\"papal\",\n\"papas\",\n\"papaw\",\n\"papey\",\n\"paper\",\n\"papio\",\n\"papyr\",\n\"pappi\",\n\"pappy\",\n\"papua\",\n\"paque\",\n\"parah\",\n\"param\",\n\"parao\",\n\"paras\",\n\"parch\",\n\"parde\",\n\"pardi\",\n\"pardy\",\n\"pardo\",\n\"pards\",\n\"pared\",\n\"parel\",\n\"paren\",\n\"parer\",\n\"pares\",\n\"pareu\",\n\"parge\",\n\"pargo\",\n\"paris\",\n\"parka\",\n\"parky\",\n\"parks\",\n\"parle\",\n\"parli\",\n\"parly\",\n\"parma\",\n\"parol\",\n\"parra\",\n\"parry\",\n\"parrs\",\n\"parse\",\n\"parsi\",\n\"parte\",\n\"parti\",\n\"party\",\n\"parto\",\n\"parts\",\n\"parus\",\n\"parve\",\n\"pasan\",\n\"pasch\",\n\"paseo\",\n\"pases\",\n\"pasha\",\n\"pashm\",\n\"pasis\",\n\"pasmo\",\n\"passe\",\n\"passo\",\n\"passu\",\n\"pasta\",\n\"paste\",\n\"pasty\",\n\"pasts\",\n\"pasul\",\n\"patao\",\n\"patas\",\n\"patch\",\n\"pated\",\n\"patee\",\n\"patel\",\n\"paten\",\n\"pater\",\n\"pates\",\n\"pathy\",\n\"paths\",\n\"patia\",\n\"patin\",\n\"patio\",\n\"patly\",\n\"patsy\",\n\"patta\",\n\"patte\",\n\"patty\",\n\"pattu\",\n\"pauky\",\n\"paula\",\n\"pause\",\n\"pauxi\",\n\"pavan\",\n\"paved\",\n\"paven\",\n\"paver\",\n\"paves\",\n\"pavia\",\n\"pavid\",\n\"pavin\",\n\"pavis\",\n\"pawaw\",\n\"pawed\",\n\"pawer\",\n\"pawky\",\n\"pawls\",\n\"pawns\",\n\"paxes\",\n\"pbxes\",\n\"peace\",\n\"peach\",\n\"peage\",\n\"peags\",\n\"peaky\",\n\"peaks\",\n\"peals\",\n\"peans\",\n\"pearl\",\n\"pears\",\n\"peart\",\n\"pease\",\n\"peasy\",\n\"peaty\",\n\"peats\",\n\"peavy\",\n\"peban\",\n\"pecan\",\n\"pechs\",\n\"pecht\",\n\"pecky\",\n\"pecks\",\n\"pecos\",\n\"pedal\",\n\"pedee\",\n\"pedes\",\n\"pedro\",\n\"pedum\",\n\"peeke\",\n\"peeks\",\n\"peele\",\n\"peels\",\n\"peens\",\n\"peeoy\",\n\"peepy\",\n\"peeps\",\n\"peery\",\n\"peers\",\n\"peert\",\n\"peeve\",\n\"peggy\",\n\"pegma\",\n\"peine\",\n\"peins\",\n\"peise\",\n\"peize\",\n\"pekan\",\n\"pekes\",\n\"pekin\",\n\"pekoe\",\n\"peles\",\n\"pelew\",\n\"pelfs\",\n\"pelon\",\n\"pelta\",\n\"pelts\",\n\"penal\",\n\"pence\",\n\"penda\",\n\"pendn\",\n\"pends\",\n\"penes\",\n\"pengo\",\n\"penis\",\n\"penna\",\n\"penni\",\n\"penny\",\n\"pense\",\n\"pensy\",\n\"penta\",\n\"penup\",\n\"peony\",\n\"peons\",\n\"pepla\",\n\"pepos\",\n\"peppy\",\n\"pepsi\",\n\"perai\",\n\"perau\",\n\"perca\",\n\"perch\",\n\"percy\",\n\"perdy\",\n\"perdu\",\n\"peres\",\n\"peril\",\n\"peris\",\n\"perit\",\n\"perky\",\n\"perks\",\n\"perla\",\n\"perle\",\n\"perms\",\n\"perry\",\n\"perse\",\n\"perty\",\n\"perun\",\n\"pesah\",\n\"pesky\",\n\"pesos\",\n\"peste\",\n\"pests\",\n\"petal\",\n\"peter\",\n\"petit\",\n\"petos\",\n\"petre\",\n\"petri\",\n\"petro\",\n\"petti\",\n\"petty\",\n\"petto\",\n\"petum\",\n\"peuhl\",\n\"pewee\",\n\"pewit\",\n\"pflag\",\n\"pfund\",\n\"pgntt\",\n\"phaca\",\n\"phaet\",\n\"phage\",\n\"phane\",\n\"phano\",\n\"phare\",\n\"pharm\",\n\"pharo\",\n\"phase\",\n\"phasm\",\n\"pheal\",\n\"phebe\",\n\"phene\",\n\"pheny\",\n\"pheon\",\n\"phial\",\n\"phies\",\n\"phyla\",\n\"phyle\",\n\"phill\",\n\"phyma\",\n\"physa\",\n\"phlox\",\n\"phoby\",\n\"phoca\",\n\"phoma\",\n\"phone\",\n\"phony\",\n\"phono\",\n\"phons\",\n\"phora\",\n\"phose\",\n\"phoss\",\n\"photo\",\n\"phots\",\n\"phpht\",\n\"phren\",\n\"piaba\",\n\"piala\",\n\"piano\",\n\"pians\",\n\"piast\",\n\"pibal\",\n\"picae\",\n\"pical\",\n\"picas\",\n\"picea\",\n\"pyche\",\n\"pichi\",\n\"picky\",\n\"picks\",\n\"picot\",\n\"picra\",\n\"picry\",\n\"picul\",\n\"picus\",\n\"pidan\",\n\"piece\",\n\"piend\",\n\"piers\",\n\"piert\",\n\"piest\",\n\"pieta\",\n\"piete\",\n\"piety\",\n\"piezo\",\n\"pygal\",\n\"piggy\",\n\"pight\",\n\"pigly\",\n\"pigmy\",\n\"pygmy\",\n\"piing\",\n\"pyins\",\n\"pikas\",\n\"piked\",\n\"pikey\",\n\"pikel\",\n\"piker\",\n\"pikes\",\n\"pikle\",\n\"pilaf\",\n\"pilar\",\n\"pylar\",\n\"pilau\",\n\"pilaw\",\n\"pilch\",\n\"pilea\",\n\"piled\",\n\"pilei\",\n\"piler\",\n\"piles\",\n\"pylic\",\n\"pilin\",\n\"pilis\",\n\"pills\",\n\"pilmy\",\n\"pilon\",\n\"pylon\",\n\"pilot\",\n\"pilum\",\n\"pilus\",\n\"piman\",\n\"pimas\",\n\"pimps\",\n\"pinal\",\n\"pinas\",\n\"pinax\",\n\"pinch\",\n\"pinda\",\n\"pindy\",\n\"pined\",\n\"piney\",\n\"piner\",\n\"pines\",\n\"pinge\",\n\"pingo\",\n\"pings\",\n\"pinic\",\n\"pinyl\",\n\"pinky\",\n\"pinko\",\n\"pinks\",\n\"pinna\",\n\"pinny\",\n\"pinon\",\n\"pinot\",\n\"pynot\",\n\"pinta\",\n\"pinte\",\n\"pinto\",\n\"pints\",\n\"pinup\",\n\"pinus\",\n\"pyoid\",\n\"pions\",\n\"piotr\",\n\"pious\",\n\"pioxe\",\n\"pipal\",\n\"piped\",\n\"pipey\",\n\"piper\",\n\"pipes\",\n\"pipet\",\n\"pipid\",\n\"pipil\",\n\"pipit\",\n\"pippy\",\n\"pipra\",\n\"pique\",\n\"pyral\",\n\"pyran\",\n\"pyres\",\n\"pyrex\",\n\"pyric\",\n\"pirny\",\n\"pirns\",\n\"pirog\",\n\"pirol\",\n\"pirot\",\n\"pyrus\",\n\"pisay\",\n\"pisan\",\n\"pisco\",\n\"pishu\",\n\"pisky\",\n\"piste\",\n\"pisum\",\n\"pitas\",\n\"pitau\",\n\"pitch\",\n\"pithy\",\n\"piths\",\n\"piton\",\n\"pitta\",\n\"piuri\",\n\"piute\",\n\"pivot\",\n\"piwut\",\n\"pixel\",\n\"pixes\",\n\"pyxes\",\n\"pixie\",\n\"pyxie\",\n\"pyxis\",\n\"pizza\",\n\"place\",\n\"plack\",\n\"plaga\",\n\"plage\",\n\"playa\",\n\"plaid\",\n\"plain\",\n\"plays\",\n\"plait\",\n\"plane\",\n\"plang\",\n\"plank\",\n\"plans\",\n\"plant\",\n\"plash\",\n\"plasm\",\n\"plass\",\n\"plate\",\n\"platy\",\n\"plato\",\n\"plats\",\n\"platt\",\n\"plaud\",\n\"plaza\",\n\"plead\",\n\"pleas\",\n\"pleat\",\n\"plebe\",\n\"plebs\",\n\"pleck\",\n\"pleis\",\n\"plena\",\n\"pleny\",\n\"pleon\",\n\"plica\",\n\"plied\",\n\"plier\",\n\"plyer\",\n\"plies\",\n\"pliny\",\n\"plink\",\n\"pliss\",\n\"ploat\",\n\"ploce\",\n\"plock\",\n\"plods\",\n\"ploys\",\n\"plomb\",\n\"plonk\",\n\"plook\",\n\"plops\",\n\"plote\",\n\"plots\",\n\"plott\",\n\"plotx\",\n\"plouk\",\n\"plout\",\n\"plows\",\n\"pluck\",\n\"pluff\",\n\"plugs\",\n\"pluma\",\n\"plumb\",\n\"plume\",\n\"plumy\",\n\"plump\",\n\"plums\",\n\"plunk\",\n\"plupf\",\n\"plush\",\n\"pluto\",\n\"pneum\",\n\"poach\",\n\"pobby\",\n\"pocan\",\n\"poche\",\n\"pocky\",\n\"pocks\",\n\"pocul\",\n\"pocus\",\n\"podal\",\n\"poddy\",\n\"podex\",\n\"podge\",\n\"podgy\",\n\"podia\",\n\"podos\",\n\"poems\",\n\"poesy\",\n\"poets\",\n\"pogey\",\n\"pogge\",\n\"poggy\",\n\"pohna\",\n\"poilu\",\n\"poind\",\n\"point\",\n\"poyou\",\n\"poire\",\n\"poise\",\n\"pokan\",\n\"poked\",\n\"pokey\",\n\"poker\",\n\"pokes\",\n\"pokie\",\n\"pokom\",\n\"polab\",\n\"polar\",\n\"poled\",\n\"poley\",\n\"poler\",\n\"poles\",\n\"polio\",\n\"polyp\",\n\"polis\",\n\"polys\",\n\"polit\",\n\"polje\",\n\"polka\",\n\"polki\",\n\"polly\",\n\"polls\",\n\"poloi\",\n\"polos\",\n\"pomak\",\n\"pombe\",\n\"pombo\",\n\"pomey\",\n\"pomel\",\n\"pomes\",\n\"pomme\",\n\"pommy\",\n\"pompa\",\n\"pomps\",\n\"ponca\",\n\"ponce\",\n\"pondy\",\n\"pondo\",\n\"ponds\",\n\"poney\",\n\"pones\",\n\"ponga\",\n\"pongo\",\n\"ponja\",\n\"ponos\",\n\"ponto\",\n\"pooch\",\n\"poods\",\n\"poohs\",\n\"pooka\",\n\"pooli\",\n\"pooly\",\n\"pools\",\n\"poons\",\n\"poops\",\n\"poori\",\n\"poort\",\n\"pooty\",\n\"poove\",\n\"popal\",\n\"popes\",\n\"popie\",\n\"poppa\",\n\"poppy\",\n\"popsy\",\n\"poral\",\n\"porch\",\n\"pored\",\n\"porer\",\n\"pores\",\n\"poret\",\n\"porge\",\n\"porgy\",\n\"porgo\",\n\"poria\",\n\"porky\",\n\"porks\",\n\"porno\",\n\"porns\",\n\"poros\",\n\"porry\",\n\"porta\",\n\"porte\",\n\"porty\",\n\"porto\",\n\"ports\",\n\"porus\",\n\"posca\",\n\"posed\",\n\"posey\",\n\"poser\",\n\"poses\",\n\"posho\",\n\"posit\",\n\"posse\",\n\"possy\",\n\"posts\",\n\"potch\",\n\"poter\",\n\"potoo\",\n\"potsy\",\n\"potti\",\n\"potty\",\n\"potto\",\n\"potus\",\n\"pouce\",\n\"pouch\",\n\"poucy\",\n\"pouff\",\n\"poufs\",\n\"poule\",\n\"poulp\",\n\"poult\",\n\"pound\",\n\"pours\",\n\"pousy\",\n\"pouty\",\n\"pouts\",\n\"powan\",\n\"power\",\n\"powny\",\n\"poxed\",\n\"poxes\",\n\"pozzy\",\n\"praam\",\n\"prado\",\n\"prahm\",\n\"prahu\",\n\"praya\",\n\"prays\",\n\"prams\",\n\"prana\",\n\"prand\",\n\"prang\",\n\"prank\",\n\"praos\",\n\"prase\",\n\"prate\",\n\"prats\",\n\"pratt\",\n\"praus\",\n\"prawn\",\n\"predy\",\n\"preed\",\n\"preen\",\n\"prees\",\n\"preys\",\n\"prela\",\n\"prepd\",\n\"prepg\",\n\"prepn\",\n\"preps\",\n\"presa\",\n\"prese\",\n\"press\",\n\"prest\",\n\"preta\",\n\"preux\",\n\"preve\",\n\"prexy\",\n\"priam\",\n\"price\",\n\"prich\",\n\"pricy\",\n\"prick\",\n\"pride\",\n\"pridy\",\n\"pried\",\n\"prier\",\n\"pryer\",\n\"pries\",\n\"prigs\",\n\"prill\",\n\"prima\",\n\"prime\",\n\"primi\",\n\"primy\",\n\"primo\",\n\"primp\",\n\"prims\",\n\"prine\",\n\"prink\",\n\"print\",\n\"prion\",\n\"prior\",\n\"prise\",\n\"pryse\",\n\"prism\",\n\"priss\",\n\"prius\",\n\"privy\",\n\"prize\",\n\"proal\",\n\"proas\",\n\"probe\",\n\"prodd\",\n\"prods\",\n\"proem\",\n\"profs\",\n\"progs\",\n\"proke\",\n\"prole\",\n\"promo\",\n\"proms\",\n\"prone\",\n\"prong\",\n\"proof\",\n\"propr\",\n\"props\",\n\"prore\",\n\"prose\",\n\"prosy\",\n\"proso\",\n\"pross\",\n\"prost\",\n\"prote\",\n\"proto\",\n\"proud\",\n\"prove\",\n\"prowl\",\n\"prows\",\n\"proxy\",\n\"prude\",\n\"prudy\",\n\"prune\",\n\"prunt\",\n\"pruta\",\n\"psalm\",\n\"psend\",\n\"pseud\",\n\"pshav\",\n\"pshaw\",\n\"psych\",\n\"psize\",\n\"psoae\",\n\"psoai\",\n\"psoas\",\n\"psora\",\n\"pubal\",\n\"pubes\",\n\"pubic\",\n\"pubis\",\n\"puces\",\n\"pucka\",\n\"pucks\",\n\"pudda\",\n\"puddy\",\n\"pudge\",\n\"pudgy\",\n\"pudic\",\n\"pudsy\",\n\"puffy\",\n\"puffs\",\n\"puget\",\n\"puggi\",\n\"puggy\",\n\"pugil\",\n\"puist\",\n\"puked\",\n\"puker\",\n\"pukes\",\n\"pukka\",\n\"pulas\",\n\"puled\",\n\"puler\",\n\"pules\",\n\"pulex\",\n\"pulik\",\n\"pulis\",\n\"pulka\",\n\"pulli\",\n\"pulls\",\n\"pulpy\",\n\"pulps\",\n\"pulse\",\n\"pumas\",\n\"pumex\",\n\"pumps\",\n\"punan\",\n\"punas\",\n\"punce\",\n\"punch\",\n\"punct\",\n\"punga\",\n\"pungi\",\n\"pungy\",\n\"pungs\",\n\"punic\",\n\"punka\",\n\"punky\",\n\"punks\",\n\"punkt\",\n\"punny\",\n\"punta\",\n\"punti\",\n\"punty\",\n\"punto\",\n\"punts\",\n\"pupae\",\n\"pupal\",\n\"pupas\",\n\"pupil\",\n\"puppy\",\n\"purau\",\n\"purda\",\n\"purdy\",\n\"pured\",\n\"puree\",\n\"purey\",\n\"purer\",\n\"purga\",\n\"purge\",\n\"purim\",\n\"purin\",\n\"puris\",\n\"purls\",\n\"purre\",\n\"purry\",\n\"purrs\",\n\"purse\",\n\"pursy\",\n\"purty\",\n\"puses\",\n\"pushy\",\n\"pussy\",\n\"putid\",\n\"puton\",\n\"putti\",\n\"putty\",\n\"putto\",\n\"putts\",\n\"qaids\",\n\"qanat\",\n\"qatar\",\n\"qiana\",\n\"qibla\",\n\"qiyas\",\n\"qophs\",\n\"quack\",\n\"quadi\",\n\"quads\",\n\"quaff\",\n\"quags\",\n\"quail\",\n\"quais\",\n\"quays\",\n\"quake\",\n\"quaky\",\n\"quale\",\n\"qualm\",\n\"quant\",\n\"quare\",\n\"quark\",\n\"quarl\",\n\"quart\",\n\"quash\",\n\"quasi\",\n\"quass\",\n\"quata\",\n\"quate\",\n\"quauk\",\n\"quave\",\n\"quawk\",\n\"qubba\",\n\"queak\",\n\"queal\",\n\"quean\",\n\"queen\",\n\"queer\",\n\"queet\",\n\"quegh\",\n\"queys\",\n\"quell\",\n\"quelt\",\n\"queme\",\n\"quent\",\n\"query\",\n\"querl\",\n\"quern\",\n\"quest\",\n\"queue\",\n\"quica\",\n\"quick\",\n\"quids\",\n\"quiet\",\n\"quiff\",\n\"quila\",\n\"quill\",\n\"quilt\",\n\"quina\",\n\"quink\",\n\"quins\",\n\"quint\",\n\"quipo\",\n\"quips\",\n\"quipu\",\n\"quira\",\n\"quire\",\n\"quirk\",\n\"quirl\",\n\"quirt\",\n\"quist\",\n\"quite\",\n\"quito\",\n\"quits\",\n\"quitu\",\n\"quoad\",\n\"quods\",\n\"quoin\",\n\"quoit\",\n\"quota\",\n\"quote\",\n\"quoth\",\n\"quott\",\n\"qursh\",\n\"qurti\",\n\"raash\",\n\"rabal\",\n\"rabat\",\n\"rabbi\",\n\"rabic\",\n\"rabid\",\n\"rabin\",\n\"rabot\",\n\"raced\",\n\"racer\",\n\"races\",\n\"rache\",\n\"racks\",\n\"racon\",\n\"radar\",\n\"radek\",\n\"radii\",\n\"radio\",\n\"radix\",\n\"radly\",\n\"radon\",\n\"raffe\",\n\"raffs\",\n\"rafik\",\n\"rafty\",\n\"rafts\",\n\"ragas\",\n\"raged\",\n\"ragee\",\n\"rager\",\n\"rages\",\n\"raggy\",\n\"raghu\",\n\"ragis\",\n\"rahul\",\n\"raiae\",\n\"rayah\",\n\"rayan\",\n\"raias\",\n\"rayas\",\n\"rayat\",\n\"raids\",\n\"rayed\",\n\"rails\",\n\"rainy\",\n\"rains\",\n\"rayon\",\n\"raise\",\n\"rajab\",\n\"rajah\",\n\"rajas\",\n\"rajes\",\n\"rajiv\",\n\"rakan\",\n\"raked\",\n\"rakee\",\n\"raker\",\n\"rakes\",\n\"rakis\",\n\"rakit\",\n\"rales\",\n\"rally\",\n\"ralph\",\n\"ramal\",\n\"raman\",\n\"rambo\",\n\"ramed\",\n\"ramee\",\n\"ramet\",\n\"ramex\",\n\"ramie\",\n\"rammi\",\n\"rammy\",\n\"ramon\",\n\"ramps\",\n\"ramta\",\n\"ramus\",\n\"ranal\",\n\"rance\",\n\"ranch\",\n\"randy\",\n\"randn\",\n\"rands\",\n\"ranee\",\n\"range\",\n\"rangy\",\n\"ranid\",\n\"ranis\",\n\"ranks\",\n\"ranli\",\n\"ranny\",\n\"ranty\",\n\"rants\",\n\"raped\",\n\"raper\",\n\"rapes\",\n\"raphe\",\n\"rapic\",\n\"rapid\",\n\"rappe\",\n\"rarer\",\n\"rased\",\n\"rasen\",\n\"raser\",\n\"rases\",\n\"rason\",\n\"raspy\",\n\"rasps\",\n\"rasse\",\n\"rasty\",\n\"ratal\",\n\"ratan\",\n\"ratch\",\n\"rated\",\n\"ratel\",\n\"rater\",\n\"rates\",\n\"ratha\",\n\"rathe\",\n\"ratio\",\n\"ratos\",\n\"ratti\",\n\"ratty\",\n\"ratwa\",\n\"rauli\",\n\"raupo\",\n\"raved\",\n\"ravel\",\n\"raven\",\n\"raver\",\n\"raves\",\n\"ravin\",\n\"rawer\",\n\"rawin\",\n\"rawky\",\n\"rawly\",\n\"raxed\",\n\"raxes\",\n\"razed\",\n\"razee\",\n\"razer\",\n\"razes\",\n\"razoo\",\n\"razor\",\n\"reaal\",\n\"reach\",\n\"react\",\n\"readd\",\n\"ready\",\n\"readl\",\n\"reads\",\n\"reaks\",\n\"realm\",\n\"reals\",\n\"reamy\",\n\"reams\",\n\"reaps\",\n\"rearm\",\n\"rears\",\n\"reasy\",\n\"reask\",\n\"reast\",\n\"reata\",\n\"reave\",\n\"rebab\",\n\"rebag\",\n\"reban\",\n\"rebar\",\n\"rebbe\",\n\"rebec\",\n\"rebed\",\n\"rebeg\",\n\"rebel\",\n\"rebia\",\n\"rebid\",\n\"rebob\",\n\"rebop\",\n\"rebox\",\n\"rebud\",\n\"rebuy\",\n\"rebus\",\n\"rebut\",\n\"recap\",\n\"recce\",\n\"reccy\",\n\"recco\",\n\"recip\",\n\"recit\",\n\"recks\",\n\"recon\",\n\"recpt\",\n\"recta\",\n\"recti\",\n\"recto\",\n\"recur\",\n\"recut\",\n\"redan\",\n\"reddy\",\n\"redds\",\n\"reded\",\n\"redes\",\n\"redia\",\n\"redid\",\n\"redye\",\n\"redig\",\n\"redip\",\n\"redly\",\n\"redos\",\n\"redox\",\n\"redry\",\n\"redub\",\n\"redue\",\n\"redug\",\n\"redux\",\n\"reedy\",\n\"reeds\",\n\"reefy\",\n\"reefs\",\n\"reeky\",\n\"reeks\",\n\"reels\",\n\"reese\",\n\"reesk\",\n\"reest\",\n\"reeve\",\n\"refan\",\n\"refed\",\n\"refel\",\n\"refer\",\n\"reffo\",\n\"refit\",\n\"refix\",\n\"refly\",\n\"refry\",\n\"regal\",\n\"regel\",\n\"reges\",\n\"reget\",\n\"regga\",\n\"regia\",\n\"regie\",\n\"regin\",\n\"regle\",\n\"regma\",\n\"regna\",\n\"regur\",\n\"rehem\",\n\"rehid\",\n\"rehoe\",\n\"reice\",\n\"reich\",\n\"reify\",\n\"reifs\",\n\"reign\",\n\"reina\",\n\"reink\",\n\"reins\",\n\"reist\",\n\"reive\",\n\"rejig\",\n\"rekey\",\n\"relay\",\n\"relap\",\n\"relax\",\n\"reles\",\n\"relet\",\n\"relic\",\n\"relig\",\n\"relit\",\n\"relot\",\n\"reman\",\n\"remap\",\n\"remen\",\n\"remet\",\n\"remex\",\n\"remit\",\n\"remix\",\n\"remop\",\n\"remue\",\n\"remus\",\n\"renay\",\n\"renal\",\n\"rends\",\n\"rendu\",\n\"reneg\",\n\"renes\",\n\"renet\",\n\"renew\",\n\"renga\",\n\"renig\",\n\"renin\",\n\"renky\",\n\"renne\",\n\"rente\",\n\"rents\",\n\"reoil\",\n\"reown\",\n\"repad\",\n\"repay\",\n\"repas\",\n\"repeg\",\n\"repel\",\n\"repen\",\n\"repew\",\n\"repic\",\n\"repin\",\n\"reply\",\n\"repot\",\n\"repps\",\n\"repry\",\n\"repro\",\n\"reran\",\n\"reree\",\n\"rerig\",\n\"rerob\",\n\"rerow\",\n\"rerub\",\n\"rerun\",\n\"resay\",\n\"resat\",\n\"resaw\",\n\"resee\",\n\"reset\",\n\"resew\",\n\"resex\",\n\"resid\",\n\"resin\",\n\"resit\",\n\"resow\",\n\"resty\",\n\"restr\",\n\"rests\",\n\"resue\",\n\"resun\",\n\"resup\",\n\"retag\",\n\"retal\",\n\"retan\",\n\"retar\",\n\"retax\",\n\"retch\",\n\"retem\",\n\"rethe\",\n\"retia\",\n\"retie\",\n\"retin\",\n\"retip\",\n\"retry\",\n\"retro\",\n\"reuel\",\n\"reune\",\n\"reuse\",\n\"revay\",\n\"revel\",\n\"rever\",\n\"revet\",\n\"revie\",\n\"revue\",\n\"rewan\",\n\"rewax\",\n\"rewed\",\n\"rewet\",\n\"rewin\",\n\"rewon\",\n\"rexen\",\n\"rexes\",\n\"rfree\",\n\"rhamn\",\n\"rheae\",\n\"rheas\",\n\"rheda\",\n\"rheen\",\n\"rheic\",\n\"rhein\",\n\"rhema\",\n\"rheme\",\n\"rheum\",\n\"rhila\",\n\"rhyme\",\n\"rhymy\",\n\"rhina\",\n\"rhine\",\n\"rhino\",\n\"rhyta\",\n\"rhoda\",\n\"rhoeo\",\n\"rhomb\",\n\"rhumb\",\n\"rials\",\n\"riant\",\n\"riata\",\n\"ribat\",\n\"rybat\",\n\"ribby\",\n\"ribes\",\n\"riced\",\n\"ricey\",\n\"ricer\",\n\"rices\",\n\"riche\",\n\"richt\",\n\"ricin\",\n\"ricky\",\n\"ricks\",\n\"riden\",\n\"rider\",\n\"ryder\",\n\"rides\",\n\"ridge\",\n\"ridgy\",\n\"riels\",\n\"rifer\",\n\"riffi\",\n\"riffs\",\n\"rifle\",\n\"rifty\",\n\"rifts\",\n\"rigel\",\n\"right\",\n\"rigid\",\n\"rigol\",\n\"rigor\",\n\"riyal\",\n\"ryked\",\n\"rykes\",\n\"riled\",\n\"riley\",\n\"riles\",\n\"rille\",\n\"rilly\",\n\"rills\",\n\"rimal\",\n\"rimas\",\n\"rimed\",\n\"rimer\",\n\"rimes\",\n\"rimpi\",\n\"rinch\",\n\"rinde\",\n\"rindy\",\n\"rinds\",\n\"rynds\",\n\"ringe\",\n\"ringy\",\n\"rings\",\n\"rinka\",\n\"rinks\",\n\"rinse\",\n\"riots\",\n\"ryots\",\n\"ripal\",\n\"riped\",\n\"ripen\",\n\"riper\",\n\"ripes\",\n\"ripup\",\n\"risen\",\n\"riser\",\n\"rises\",\n\"rishi\",\n\"risky\",\n\"risks\",\n\"risqu\",\n\"risus\",\n\"rites\",\n\"rithe\",\n\"ritsu\",\n\"ritus\",\n\"ritzy\",\n\"rival\",\n\"rived\",\n\"rivel\",\n\"riven\",\n\"river\",\n\"rives\",\n\"rivet\",\n\"rizar\",\n\"roach\",\n\"roads\",\n\"roams\",\n\"roans\",\n\"roars\",\n\"roast\",\n\"robed\",\n\"rober\",\n\"robes\",\n\"robin\",\n\"roble\",\n\"robot\",\n\"robur\",\n\"roche\",\n\"rocky\",\n\"rocks\",\n\"rocta\",\n\"rodeo\",\n\"rodge\",\n\"rogan\",\n\"roger\",\n\"rogue\",\n\"roguy\",\n\"rohan\",\n\"rohob\",\n\"rohun\",\n\"royal\",\n\"royet\",\n\"roily\",\n\"roils\",\n\"royou\",\n\"roist\",\n\"rojak\",\n\"rokee\",\n\"rokey\",\n\"roker\",\n\"roleo\",\n\"roles\",\n\"rolfe\",\n\"rollo\",\n\"rolls\",\n\"romal\",\n\"roman\",\n\"romeo\",\n\"romic\",\n\"rompy\",\n\"romps\",\n\"rompu\",\n\"ronco\",\n\"ronde\",\n\"rondo\",\n\"ronga\",\n\"ronin\",\n\"ronni\",\n\"roods\",\n\"rooed\",\n\"roofy\",\n\"roofs\",\n\"rooky\",\n\"rooks\",\n\"roomy\",\n\"rooms\",\n\"roosa\",\n\"roose\",\n\"roost\",\n\"rooti\",\n\"rooty\",\n\"roots\",\n\"roove\",\n\"roped\",\n\"ropey\",\n\"roper\",\n\"ropes\",\n\"roque\",\n\"roral\",\n\"roric\",\n\"rorid\",\n\"rorty\",\n\"rosal\",\n\"rosed\",\n\"rosel\",\n\"roses\",\n\"roset\",\n\"roshi\",\n\"rosin\",\n\"rotal\",\n\"rotan\",\n\"rotas\",\n\"rotch\",\n\"roter\",\n\"rotes\",\n\"rotge\",\n\"rotls\",\n\"rotor\",\n\"rotos\",\n\"rotse\",\n\"rotta\",\n\"rotte\",\n\"rouen\",\n\"roues\",\n\"rouge\",\n\"rough\",\n\"rougy\",\n\"rouky\",\n\"round\",\n\"roupy\",\n\"roups\",\n\"rouse\",\n\"roust\",\n\"route\",\n\"routh\",\n\"routs\",\n\"roved\",\n\"roven\",\n\"rover\",\n\"roves\",\n\"rovet\",\n\"rowan\",\n\"rowdy\",\n\"rowed\",\n\"rowel\",\n\"rowen\",\n\"rower\",\n\"rowet\",\n\"rowte\",\n\"rowth\",\n\"rowty\",\n\"roxie\",\n\"rozum\",\n\"ruach\",\n\"ruana\",\n\"rubby\",\n\"rubes\",\n\"rubia\",\n\"rubin\",\n\"ruble\",\n\"rubor\",\n\"rubus\",\n\"ruche\",\n\"rucky\",\n\"rucks\",\n\"rudas\",\n\"ruddy\",\n\"rudds\",\n\"ruder\",\n\"rudge\",\n\"ruely\",\n\"ruers\",\n\"ruffe\",\n\"ruffs\",\n\"rufus\",\n\"rugae\",\n\"rugal\",\n\"rugby\",\n\"ruggy\",\n\"ruing\",\n\"ruins\",\n\"ruled\",\n\"ruler\",\n\"rules\",\n\"rumal\",\n\"ruman\",\n\"rumba\",\n\"rumbo\",\n\"rumen\",\n\"rumex\",\n\"rumly\",\n\"rummy\",\n\"rumor\",\n\"rumpy\",\n\"rumps\",\n\"runby\",\n\"runch\",\n\"rundi\",\n\"runed\",\n\"runer\",\n\"runes\",\n\"rungs\",\n\"runic\",\n\"runny\",\n\"runsy\",\n\"runty\",\n\"runts\",\n\"rupee\",\n\"rupia\",\n\"rupie\",\n\"rural\",\n\"ruses\",\n\"rushy\",\n\"rusin\",\n\"rusky\",\n\"rusks\",\n\"rusma\",\n\"rusot\",\n\"russe\",\n\"rusty\",\n\"rusts\",\n\"rutch\",\n\"ruths\",\n\"rutic\",\n\"rutyl\",\n\"rutin\",\n\"rutty\",\n\"ruvid\",\n\"sabal\",\n\"saban\",\n\"sabby\",\n\"sabed\",\n\"saber\",\n\"sabes\",\n\"sabia\",\n\"sabik\",\n\"sabin\",\n\"sabir\",\n\"sable\",\n\"sably\",\n\"sabot\",\n\"sabra\",\n\"sabre\",\n\"sabzi\",\n\"sacae\",\n\"sacks\",\n\"sacra\",\n\"sacre\",\n\"sacry\",\n\"sacro\",\n\"sades\",\n\"sadhe\",\n\"sadhu\",\n\"sadic\",\n\"sadie\",\n\"sadis\",\n\"sadly\",\n\"saeta\",\n\"safar\",\n\"safen\",\n\"safer\",\n\"safes\",\n\"sagai\",\n\"sagan\",\n\"sagas\",\n\"sager\",\n\"sages\",\n\"saggy\",\n\"sagos\",\n\"sagra\",\n\"sagum\",\n\"sahib\",\n\"sahme\",\n\"sayal\",\n\"saice\",\n\"saidi\",\n\"saids\",\n\"sayee\",\n\"sayer\",\n\"saify\",\n\"saiga\",\n\"saiid\",\n\"sayid\",\n\"saily\",\n\"sails\",\n\"saimy\",\n\"sains\",\n\"saint\",\n\"saiph\",\n\"sairy\",\n\"sayst\",\n\"saite\",\n\"saith\",\n\"saiva\",\n\"sajou\",\n\"sakai\",\n\"sakel\",\n\"saker\",\n\"sakes\",\n\"sakha\",\n\"sakis\",\n\"sakti\",\n\"salad\",\n\"salay\",\n\"salal\",\n\"salar\",\n\"salat\",\n\"salem\",\n\"salep\",\n\"sales\",\n\"salet\",\n\"salic\",\n\"salix\",\n\"salle\",\n\"sally\",\n\"salma\",\n\"salmi\",\n\"salmo\",\n\"salol\",\n\"salon\",\n\"salpa\",\n\"salps\",\n\"salsa\",\n\"salse\",\n\"salta\",\n\"salty\",\n\"salts\",\n\"salud\",\n\"salue\",\n\"salus\",\n\"salva\",\n\"salve\",\n\"salvy\",\n\"salvo\",\n\"samaj\",\n\"samal\",\n\"saman\",\n\"samas\",\n\"samba\",\n\"sambo\",\n\"samek\",\n\"samel\",\n\"samen\",\n\"samir\",\n\"sammy\",\n\"samoa\",\n\"sampi\",\n\"samps\",\n\"sanai\",\n\"sancy\",\n\"sanct\",\n\"sandy\",\n\"sands\",\n\"saned\",\n\"saner\",\n\"sanes\",\n\"sanga\",\n\"sangh\",\n\"sangu\",\n\"sanit\",\n\"sanka\",\n\"sansi\",\n\"santa\",\n\"santy\",\n\"santo\",\n\"sapan\",\n\"sapek\",\n\"sapid\",\n\"sapin\",\n\"sapit\",\n\"saple\",\n\"sapor\",\n\"sappy\",\n\"saqib\",\n\"saraf\",\n\"sarah\",\n\"saran\",\n\"sards\",\n\"saree\",\n\"sarge\",\n\"sargo\",\n\"sarif\",\n\"sarin\",\n\"sarip\",\n\"saris\",\n\"sarky\",\n\"sarks\",\n\"sarna\",\n\"sarod\",\n\"saron\",\n\"saros\",\n\"sarpo\",\n\"sarra\",\n\"sarsa\",\n\"sarsi\",\n\"saruk\",\n\"sarum\",\n\"sarus\",\n\"sasan\",\n\"sasin\",\n\"sasse\",\n\"sassy\",\n\"satai\",\n\"satan\",\n\"sated\",\n\"satem\",\n\"sates\",\n\"satin\",\n\"satyr\",\n\"satis\",\n\"sauba\",\n\"sauce\",\n\"sauch\",\n\"saucy\",\n\"saudi\",\n\"saugh\",\n\"sauld\",\n\"sauls\",\n\"sault\",\n\"sauna\",\n\"saunt\",\n\"saura\",\n\"saury\",\n\"saute\",\n\"sauty\",\n\"sauve\",\n\"saved\",\n\"savey\",\n\"saver\",\n\"saves\",\n\"savin\",\n\"savoy\",\n\"savor\",\n\"savvy\",\n\"sawah\",\n\"sawan\",\n\"sawed\",\n\"sawer\",\n\"sawny\",\n\"saxes\",\n\"saxon\",\n\"sazen\",\n\"scabs\",\n\"scads\",\n\"scaff\",\n\"scags\",\n\"scala\",\n\"scald\",\n\"scale\",\n\"scalf\",\n\"scaly\",\n\"scall\",\n\"scalp\",\n\"scalt\",\n\"scalx\",\n\"scalz\",\n\"scamp\",\n\"scams\",\n\"scans\",\n\"scant\",\n\"scape\",\n\"scare\",\n\"scarf\",\n\"scary\",\n\"scarn\",\n\"scarp\",\n\"scars\",\n\"scart\",\n\"scase\",\n\"scats\",\n\"scatt\",\n\"scaul\",\n\"scaum\",\n\"scaup\",\n\"scaur\",\n\"scaut\",\n\"scawd\",\n\"scawl\",\n\"sceat\",\n\"scelp\",\n\"scena\",\n\"scend\",\n\"scene\",\n\"scent\",\n\"schav\",\n\"schiz\",\n\"schmo\",\n\"schuh\",\n\"schul\",\n\"schwa\",\n\"scian\",\n\"scyld\",\n\"scind\",\n\"scion\",\n\"sciot\",\n\"scyth\",\n\"sclat\",\n\"sclav\",\n\"sclaw\",\n\"scler\",\n\"sclim\",\n\"scoad\",\n\"scobs\",\n\"scoff\",\n\"scoke\",\n\"scolb\",\n\"scold\",\n\"scomm\",\n\"scone\",\n\"scoon\",\n\"scoop\",\n\"scoot\",\n\"scopa\",\n\"scope\",\n\"scops\",\n\"score\",\n\"scorn\",\n\"scote\",\n\"scots\",\n\"scott\",\n\"scouk\",\n\"scoup\",\n\"scour\",\n\"scout\",\n\"scove\",\n\"scovy\",\n\"scowl\",\n\"scows\",\n\"scrab\",\n\"scrae\",\n\"scrag\",\n\"scray\",\n\"scram\",\n\"scran\",\n\"scrap\",\n\"scrat\",\n\"scraw\",\n\"scree\",\n\"screw\",\n\"scrim\",\n\"scrin\",\n\"scrip\",\n\"scrit\",\n\"scrob\",\n\"scrod\",\n\"scrog\",\n\"scroo\",\n\"scrow\",\n\"scrub\",\n\"scruf\",\n\"scrum\",\n\"scuba\",\n\"scudi\",\n\"scudo\",\n\"scuds\",\n\"scuff\",\n\"scuft\",\n\"sculk\",\n\"scull\",\n\"sculp\",\n\"scult\",\n\"scums\",\n\"scups\",\n\"scurf\",\n\"scuse\",\n\"scuta\",\n\"scute\",\n\"scuts\",\n\"sdump\",\n\"sealy\",\n\"seals\",\n\"seamy\",\n\"seams\",\n\"seary\",\n\"sears\",\n\"seats\",\n\"seave\",\n\"seavy\",\n\"sebat\",\n\"sebum\",\n\"secco\",\n\"secno\",\n\"secos\",\n\"secre\",\n\"sects\",\n\"secus\",\n\"sedan\",\n\"sedat\",\n\"seder\",\n\"sedge\",\n\"sedgy\",\n\"sedum\",\n\"seech\",\n\"seedy\",\n\"seeds\",\n\"seege\",\n\"seeks\",\n\"seely\",\n\"seels\",\n\"seems\",\n\"seenu\",\n\"seepy\",\n\"seeps\",\n\"seers\",\n\"segar\",\n\"seggy\",\n\"segni\",\n\"segno\",\n\"segol\",\n\"segos\",\n\"segou\",\n\"segue\",\n\"sehyo\",\n\"seige\",\n\"seine\",\n\"seise\",\n\"seism\",\n\"seity\",\n\"seize\",\n\"sekar\",\n\"seker\",\n\"sekos\",\n\"selah\",\n\"selfs\",\n\"sella\",\n\"selle\",\n\"selli\",\n\"selly\",\n\"sells\",\n\"selva\",\n\"semee\",\n\"semel\",\n\"semen\",\n\"semes\",\n\"semic\",\n\"semih\",\n\"semis\",\n\"senal\",\n\"senam\",\n\"sence\",\n\"senci\",\n\"sends\",\n\"senex\",\n\"sengi\",\n\"senit\",\n\"senna\",\n\"senor\",\n\"sensa\",\n\"sense\",\n\"senso\",\n\"sensu\",\n\"senti\",\n\"sents\",\n\"senvy\",\n\"senza\",\n\"seora\",\n\"seoul\",\n\"sepad\",\n\"sepal\",\n\"sepia\",\n\"sepic\",\n\"sepoy\",\n\"seppa\",\n\"septa\",\n\"septi\",\n\"septs\",\n\"seqed\",\n\"sequa\",\n\"seqwl\",\n\"serab\",\n\"serac\",\n\"serai\",\n\"seral\",\n\"serau\",\n\"seraw\",\n\"sered\",\n\"sereh\",\n\"serer\",\n\"seres\",\n\"serfs\",\n\"serge\",\n\"sergt\",\n\"seric\",\n\"serif\",\n\"serin\",\n\"serio\",\n\"sermo\",\n\"seron\",\n\"serow\",\n\"serra\",\n\"serry\",\n\"serta\",\n\"serum\",\n\"serut\",\n\"serve\",\n\"servo\",\n\"sesia\",\n\"sesma\",\n\"sessa\",\n\"sesti\",\n\"setae\",\n\"setal\",\n\"seton\",\n\"setup\",\n\"seugh\",\n\"seven\",\n\"sever\",\n\"sevum\",\n\"sewan\",\n\"sewar\",\n\"sewed\",\n\"sewen\",\n\"sewer\",\n\"sewin\",\n\"sexed\",\n\"sexes\",\n\"sexly\",\n\"sexto\",\n\"sexts\",\n\"sfoot\",\n\"sfree\",\n\"shack\",\n\"shade\",\n\"shady\",\n\"shado\",\n\"shads\",\n\"shaft\",\n\"shags\",\n\"shahi\",\n\"shahs\",\n\"shays\",\n\"shaka\",\n\"shake\",\n\"shaky\",\n\"shako\",\n\"shaku\",\n\"shale\",\n\"shaly\",\n\"shall\",\n\"shalt\",\n\"shama\",\n\"shame\",\n\"shams\",\n\"shane\",\n\"shang\",\n\"shank\",\n\"shant\",\n\"shape\",\n\"shapy\",\n\"shaps\",\n\"shard\",\n\"share\",\n\"shari\",\n\"shark\",\n\"sharn\",\n\"sharp\",\n\"shaul\",\n\"shaup\",\n\"shave\",\n\"shawy\",\n\"shawl\",\n\"shawm\",\n\"shawn\",\n\"shaws\",\n\"sheaf\",\n\"sheal\",\n\"shean\",\n\"shear\",\n\"sheas\",\n\"sheat\",\n\"sheds\",\n\"shedu\",\n\"sheel\",\n\"sheen\",\n\"sheep\",\n\"sheer\",\n\"sheet\",\n\"sheik\",\n\"shela\",\n\"sheld\",\n\"shelf\",\n\"shell\",\n\"shema\",\n\"shemu\",\n\"shend\",\n\"sheng\",\n\"shent\",\n\"sheol\",\n\"sherd\",\n\"sheth\",\n\"sheva\",\n\"shewa\",\n\"shewn\",\n\"shews\",\n\"shiah\",\n\"shiai\",\n\"shyam\",\n\"shice\",\n\"shick\",\n\"shide\",\n\"shied\",\n\"shiel\",\n\"shier\",\n\"shyer\",\n\"shies\",\n\"shift\",\n\"shiko\",\n\"shilf\",\n\"shilh\",\n\"shily\",\n\"shyly\",\n\"shill\",\n\"shims\",\n\"shina\",\n\"shine\",\n\"shiny\",\n\"shins\",\n\"ships\",\n\"shipt\",\n\"shire\",\n\"shirk\",\n\"shirl\",\n\"shirr\",\n\"shirt\",\n\"shish\",\n\"shisn\",\n\"shist\",\n\"shita\",\n\"shits\",\n\"shiva\",\n\"shive\",\n\"shivy\",\n\"shivs\",\n\"shlep\",\n\"shluh\",\n\"shoad\",\n\"shoal\",\n\"shoat\",\n\"shock\",\n\"shode\",\n\"shoed\",\n\"shoer\",\n\"shoes\",\n\"shogi\",\n\"shogs\",\n\"shoya\",\n\"shoyu\",\n\"shoji\",\n\"shojo\",\n\"shola\",\n\"shole\",\n\"shona\",\n\"shone\",\n\"shood\",\n\"shooi\",\n\"shook\",\n\"shool\",\n\"shoon\",\n\"shoop\",\n\"shoor\",\n\"shoos\",\n\"shoot\",\n\"shope\",\n\"shops\",\n\"shore\",\n\"shorl\",\n\"shorn\",\n\"short\",\n\"shote\",\n\"shots\",\n\"shott\",\n\"shout\",\n\"shove\",\n\"showd\",\n\"showy\",\n\"shown\",\n\"shows\",\n\"shrab\",\n\"shraf\",\n\"shrag\",\n\"shram\",\n\"shrap\",\n\"shred\",\n\"shree\",\n\"shrew\",\n\"shrip\",\n\"shris\",\n\"shrog\",\n\"shrub\",\n\"shrug\",\n\"shuba\",\n\"shuck\",\n\"shuff\",\n\"shuln\",\n\"shuls\",\n\"shune\",\n\"shuns\",\n\"shunt\",\n\"shure\",\n\"shurf\",\n\"shush\",\n\"shute\",\n\"shuts\",\n\"siafu\",\n\"sials\",\n\"sibby\",\n\"sibbs\",\n\"sibyl\",\n\"sybil\",\n\"sybow\",\n\"sicca\",\n\"sycee\",\n\"sicel\",\n\"sicer\",\n\"sices\",\n\"syces\",\n\"sicht\",\n\"sicks\",\n\"sicle\",\n\"sycon\",\n\"sided\",\n\"sider\",\n\"sides\",\n\"sidhe\",\n\"sidia\",\n\"sidle\",\n\"sidth\",\n\"siege\",\n\"siena\",\n\"siest\",\n\"sieur\",\n\"sieva\",\n\"sieve\",\n\"sievy\",\n\"sifac\",\n\"syftn\",\n\"sifts\",\n\"sighs\",\n\"sight\",\n\"sigil\",\n\"sigla\",\n\"sigma\",\n\"signa\",\n\"signs\",\n\"sikar\",\n\"siker\",\n\"sikes\",\n\"sykes\",\n\"siket\",\n\"sikhs\",\n\"sikra\",\n\"silas\",\n\"silds\",\n\"silen\",\n\"silex\",\n\"sylid\",\n\"silyl\",\n\"silky\",\n\"silks\",\n\"silly\",\n\"sills\",\n\"silos\",\n\"sylph\",\n\"silty\",\n\"silts\",\n\"silva\",\n\"sylva\",\n\"simal\",\n\"simar\",\n\"simas\",\n\"simba\",\n\"simia\",\n\"simon\",\n\"simps\",\n\"simul\",\n\"sinae\",\n\"sinal\",\n\"since\",\n\"synch\",\n\"syncs\",\n\"sines\",\n\"sinew\",\n\"singe\",\n\"singh\",\n\"sings\",\n\"sinhs\",\n\"sinic\",\n\"sinky\",\n\"sinks\",\n\"synod\",\n\"sinon\",\n\"synop\",\n\"sinto\",\n\"sintu\",\n\"sinus\",\n\"sioux\",\n\"siped\",\n\"siper\",\n\"sipes\",\n\"sipid\",\n\"sippy\",\n\"sired\",\n\"siree\",\n\"siren\",\n\"syren\",\n\"sires\",\n\"sirex\",\n\"syria\",\n\"sirih\",\n\"siris\",\n\"sirki\",\n\"sirky\",\n\"syrma\",\n\"siroc\",\n\"sirop\",\n\"siros\",\n\"sirra\",\n\"sirup\",\n\"syrup\",\n\"syrus\",\n\"sisal\",\n\"sisel\",\n\"sises\",\n\"sysin\",\n\"sissy\",\n\"sissu\",\n\"sitao\",\n\"sitar\",\n\"sitch\",\n\"sited\",\n\"sites\",\n\"sithe\",\n\"sitio\",\n\"sitka\",\n\"sitta\",\n\"situp\",\n\"situs\",\n\"siums\",\n\"siusi\",\n\"sivan\",\n\"siver\",\n\"siwan\",\n\"sixer\",\n\"sixes\",\n\"sixmo\",\n\"sixte\",\n\"sixth\",\n\"sixty\",\n\"sizal\",\n\"sizar\",\n\"sized\",\n\"sizer\",\n\"sizes\",\n\"sjaak\",\n\"skaff\",\n\"skags\",\n\"skail\",\n\"skair\",\n\"skald\",\n\"skart\",\n\"skate\",\n\"skats\",\n\"skean\",\n\"skeat\",\n\"skeed\",\n\"skeeg\",\n\"skeel\",\n\"skeen\",\n\"skeer\",\n\"skees\",\n\"skeet\",\n\"skegs\",\n\"skeif\",\n\"skein\",\n\"skelf\",\n\"skell\",\n\"skelp\",\n\"skemp\",\n\"skene\",\n\"skeps\",\n\"skere\",\n\"skers\",\n\"skete\",\n\"skewy\",\n\"skewl\",\n\"skews\",\n\"skice\",\n\"skidi\",\n\"skids\",\n\"skied\",\n\"skyed\",\n\"skiey\",\n\"skyey\",\n\"skier\",\n\"skies\",\n\"skiff\",\n\"skift\",\n\"skiis\",\n\"skill\",\n\"skime\",\n\"skimo\",\n\"skimp\",\n\"skims\",\n\"skink\",\n\"skins\",\n\"skint\",\n\"skips\",\n\"skyre\",\n\"skirl\",\n\"skirp\",\n\"skirr\",\n\"skirt\",\n\"skite\",\n\"skyte\",\n\"skits\",\n\"skive\",\n\"skivy\",\n\"skiwy\",\n\"skoal\",\n\"skoot\",\n\"skout\",\n\"skuas\",\n\"skulk\",\n\"skull\",\n\"skulp\",\n\"skunk\",\n\"skuse\",\n\"slabs\",\n\"slack\",\n\"slade\",\n\"slags\",\n\"slain\",\n\"slays\",\n\"slait\",\n\"slake\",\n\"slaky\",\n\"slamp\",\n\"slams\",\n\"slane\",\n\"slang\",\n\"slank\",\n\"slant\",\n\"slape\",\n\"slaps\",\n\"slare\",\n\"slart\",\n\"slash\",\n\"slask\",\n\"slate\",\n\"slath\",\n\"slaty\",\n\"slats\",\n\"slaum\",\n\"slave\",\n\"slavi\",\n\"slavs\",\n\"slaws\",\n\"sleck\",\n\"sleds\",\n\"sleek\",\n\"sleep\",\n\"sleer\",\n\"sleet\",\n\"sleys\",\n\"slent\",\n\"slept\",\n\"slete\",\n\"slews\",\n\"slice\",\n\"slich\",\n\"slick\",\n\"slide\",\n\"slier\",\n\"slyer\",\n\"slily\",\n\"slyly\",\n\"slime\",\n\"slimy\",\n\"slims\",\n\"sline\",\n\"sling\",\n\"slink\",\n\"slipe\",\n\"slype\",\n\"slips\",\n\"slipt\",\n\"slirt\",\n\"slish\",\n\"slite\",\n\"slits\",\n\"slive\",\n\"sloan\",\n\"sloat\",\n\"slobs\",\n\"slock\",\n\"sloes\",\n\"slogs\",\n\"sloid\",\n\"sloyd\",\n\"slojd\",\n\"sloka\",\n\"sloke\",\n\"slone\",\n\"slonk\",\n\"sloom\",\n\"sloop\",\n\"sloot\",\n\"slope\",\n\"slopy\",\n\"slops\",\n\"slorp\",\n\"slosh\",\n\"slote\",\n\"sloth\",\n\"slots\",\n\"slour\",\n\"slows\",\n\"slubs\",\n\"slued\",\n\"sluer\",\n\"slues\",\n\"sluff\",\n\"slugs\",\n\"sluig\",\n\"sluit\",\n\"slump\",\n\"slums\",\n\"slung\",\n\"slunk\",\n\"slurb\",\n\"slurp\",\n\"slurs\",\n\"slush\",\n\"sluts\",\n\"smack\",\n\"smaik\",\n\"small\",\n\"smalm\",\n\"smalt\",\n\"smarm\",\n\"smart\",\n\"smash\",\n\"smaze\",\n\"smear\",\n\"smeek\",\n\"smeer\",\n\"smell\",\n\"smelt\",\n\"smerk\",\n\"smeth\",\n\"smews\",\n\"smich\",\n\"smift\",\n\"smile\",\n\"smily\",\n\"smirk\",\n\"smite\",\n\"smith\",\n\"smyth\",\n\"smock\",\n\"smogs\",\n\"smoke\",\n\"smoky\",\n\"smoko\",\n\"smolt\",\n\"smook\",\n\"smoos\",\n\"smoot\",\n\"smore\",\n\"smote\",\n\"smous\",\n\"smout\",\n\"smrgs\",\n\"smurr\",\n\"smuse\",\n\"smush\",\n\"smuts\",\n\"snack\",\n\"snaff\",\n\"snafu\",\n\"snags\",\n\"snail\",\n\"snake\",\n\"snaky\",\n\"snape\",\n\"snapy\",\n\"snaps\",\n\"snare\",\n\"snary\",\n\"snark\",\n\"snarl\",\n\"snash\",\n\"snast\",\n\"snath\",\n\"snaws\",\n\"snead\",\n\"sneak\",\n\"sneap\",\n\"sneck\",\n\"sneds\",\n\"sneer\",\n\"snell\",\n\"snerp\",\n\"snibs\",\n\"snick\",\n\"snide\",\n\"snyed\",\n\"snies\",\n\"snyes\",\n\"sniff\",\n\"snift\",\n\"snigs\",\n\"snipe\",\n\"snipy\",\n\"snips\",\n\"snirl\",\n\"snirt\",\n\"snite\",\n\"snits\",\n\"snitz\",\n\"snivy\",\n\"snobs\",\n\"snock\",\n\"snoek\",\n\"snoga\",\n\"snoke\",\n\"snood\",\n\"snook\",\n\"snool\",\n\"snoop\",\n\"snoot\",\n\"snore\",\n\"snork\",\n\"snort\",\n\"snots\",\n\"snout\",\n\"snowy\",\n\"snowk\",\n\"snowl\",\n\"snows\",\n\"snubs\",\n\"snuck\",\n\"snuff\",\n\"snugs\",\n\"snurl\",\n\"snurp\",\n\"snurt\",\n\"soaky\",\n\"soaks\",\n\"soapi\",\n\"soapy\",\n\"soaps\",\n\"soary\",\n\"soars\",\n\"soave\",\n\"sobby\",\n\"sober\",\n\"socht\",\n\"socii\",\n\"socky\",\n\"socko\",\n\"socks\",\n\"socle\",\n\"sodas\",\n\"soddy\",\n\"sodic\",\n\"sodio\",\n\"sodom\",\n\"sofar\",\n\"sofas\",\n\"sofer\",\n\"sofia\",\n\"softa\",\n\"softy\",\n\"softs\",\n\"soger\",\n\"soget\",\n\"soggy\",\n\"soyas\",\n\"soign\",\n\"soily\",\n\"soils\",\n\"soyot\",\n\"sojas\",\n\"soken\",\n\"sokes\",\n\"solay\",\n\"solan\",\n\"solar\",\n\"soldi\",\n\"soldo\",\n\"solea\",\n\"soled\",\n\"solen\",\n\"soler\",\n\"soles\",\n\"solfa\",\n\"solid\",\n\"solio\",\n\"solod\",\n\"solon\",\n\"solos\",\n\"solum\",\n\"solus\",\n\"solve\",\n\"somal\",\n\"somas\",\n\"somet\",\n\"somma\",\n\"somne\",\n\"sonar\",\n\"soncy\",\n\"sonde\",\n\"sones\",\n\"songy\",\n\"songo\",\n\"songs\",\n\"sonic\",\n\"sonja\",\n\"sonly\",\n\"sonny\",\n\"sonsy\",\n\"sooey\",\n\"sooke\",\n\"sooky\",\n\"soony\",\n\"soord\",\n\"sooth\",\n\"sooty\",\n\"soots\",\n\"sophy\",\n\"sophs\",\n\"sopor\",\n\"soppy\",\n\"soral\",\n\"soras\",\n\"sorbs\",\n\"sorda\",\n\"sordo\",\n\"sords\",\n\"soree\",\n\"sorel\",\n\"sorer\",\n\"sores\",\n\"sorex\",\n\"sorgo\",\n\"sorns\",\n\"sorra\",\n\"sorry\",\n\"sorty\",\n\"sorts\",\n\"sorus\",\n\"sorva\",\n\"sosia\",\n\"sosie\",\n\"soter\",\n\"sotho\",\n\"soths\",\n\"sotie\",\n\"sotik\",\n\"sotol\",\n\"sough\",\n\"souly\",\n\"souls\",\n\"soulx\",\n\"soulz\",\n\"sound\",\n\"soupy\",\n\"soups\",\n\"sourd\",\n\"soury\",\n\"sours\",\n\"souse\",\n\"south\",\n\"sowan\",\n\"sowar\",\n\"sowed\",\n\"sowel\",\n\"sower\",\n\"sowle\",\n\"sowse\",\n\"sowte\",\n\"sozin\",\n\"sozly\",\n\"spaad\",\n\"space\",\n\"spacy\",\n\"spack\",\n\"spade\",\n\"spado\",\n\"spaed\",\n\"spaer\",\n\"spaes\",\n\"spahi\",\n\"spaid\",\n\"spaik\",\n\"spail\",\n\"spain\",\n\"spair\",\n\"spays\",\n\"spait\",\n\"spake\",\n\"spald\",\n\"spale\",\n\"spall\",\n\"spalt\",\n\"spane\",\n\"spang\",\n\"spank\",\n\"spann\",\n\"spans\",\n\"spare\",\n\"spary\",\n\"spark\",\n\"sparm\",\n\"spars\",\n\"spart\",\n\"spasm\",\n\"spass\",\n\"spate\",\n\"spath\",\n\"spats\",\n\"spave\",\n\"spawl\",\n\"spawn\",\n\"speak\",\n\"speal\",\n\"spean\",\n\"spear\",\n\"spece\",\n\"speck\",\n\"specs\",\n\"spect\",\n\"speed\",\n\"speel\",\n\"speen\",\n\"speer\",\n\"speil\",\n\"speir\",\n\"spekt\",\n\"spelk\",\n\"spell\",\n\"spelt\",\n\"spend\",\n\"spent\",\n\"speos\",\n\"spere\",\n\"sperm\",\n\"spete\",\n\"spewy\",\n\"spews\",\n\"sphex\",\n\"spial\",\n\"spica\",\n\"spice\",\n\"spicy\",\n\"spick\",\n\"spics\",\n\"spied\",\n\"spiel\",\n\"spier\",\n\"spyer\",\n\"spies\",\n\"spiff\",\n\"spike\",\n\"spiky\",\n\"spiks\",\n\"spile\",\n\"spill\",\n\"spilt\",\n\"spina\",\n\"spine\",\n\"spiny\",\n\"spink\",\n\"spins\",\n\"spira\",\n\"spire\",\n\"spiry\",\n\"spiro\",\n\"spirt\",\n\"spise\",\n\"spiss\",\n\"spite\",\n\"spits\",\n\"spitz\",\n\"spivs\",\n\"splad\",\n\"splay\",\n\"splat\",\n\"splet\",\n\"split\",\n\"spock\",\n\"spode\",\n\"spoil\",\n\"spoke\",\n\"spoky\",\n\"spole\",\n\"spong\",\n\"spoof\",\n\"spook\",\n\"spool\",\n\"spoom\",\n\"spoon\",\n\"spoor\",\n\"spoot\",\n\"spore\",\n\"sport\",\n\"sposh\",\n\"spots\",\n\"spout\",\n\"sprad\",\n\"sprag\",\n\"spray\",\n\"sprat\",\n\"spree\",\n\"spret\",\n\"sprew\",\n\"sprig\",\n\"sprit\",\n\"sprod\",\n\"sprot\",\n\"sprue\",\n\"sprug\",\n\"spuds\",\n\"spued\",\n\"spues\",\n\"spuke\",\n\"spume\",\n\"spumy\",\n\"spung\",\n\"spunk\",\n\"spurl\",\n\"spurn\",\n\"spurs\",\n\"spurt\",\n\"sputa\",\n\"spute\",\n\"squab\",\n\"squad\",\n\"squam\",\n\"squat\",\n\"squaw\",\n\"squeg\",\n\"squet\",\n\"squib\",\n\"squid\",\n\"squin\",\n\"squit\",\n\"squiz\",\n\"sruti\",\n\"ssing\",\n\"ssort\",\n\"sstor\",\n\"staab\",\n\"stabs\",\n\"stacc\",\n\"stacy\",\n\"stack\",\n\"stade\",\n\"staff\",\n\"stage\",\n\"stagy\",\n\"stags\",\n\"staia\",\n\"staid\",\n\"staig\",\n\"stail\",\n\"stain\",\n\"staio\",\n\"stair\",\n\"stays\",\n\"stake\",\n\"stale\",\n\"stalk\",\n\"stall\",\n\"stamp\",\n\"stand\",\n\"stane\",\n\"stang\",\n\"stank\",\n\"staph\",\n\"stare\",\n\"stary\",\n\"stark\",\n\"starn\",\n\"starr\",\n\"stars\",\n\"start\",\n\"starw\",\n\"stash\",\n\"state\",\n\"stats\",\n\"stauk\",\n\"staun\",\n\"staup\",\n\"stave\",\n\"stawn\",\n\"stchi\",\n\"stead\",\n\"steak\",\n\"steal\",\n\"steam\",\n\"stean\",\n\"stech\",\n\"steed\",\n\"steek\",\n\"steel\",\n\"steem\",\n\"steen\",\n\"steep\",\n\"steer\",\n\"stegh\",\n\"steid\",\n\"stein\",\n\"stela\",\n\"stele\",\n\"stell\",\n\"stema\",\n\"stems\",\n\"stend\",\n\"steng\",\n\"steno\",\n\"stent\",\n\"steps\",\n\"stept\",\n\"stere\",\n\"steri\",\n\"sterk\",\n\"stern\",\n\"stero\",\n\"stert\",\n\"stets\",\n\"steve\",\n\"stewy\",\n\"stews\",\n\"styan\",\n\"styca\",\n\"stich\",\n\"stick\",\n\"stied\",\n\"styed\",\n\"sties\",\n\"styes\",\n\"stife\",\n\"stiff\",\n\"stilb\",\n\"stile\",\n\"style\",\n\"styli\",\n\"still\",\n\"stylo\",\n\"stilt\",\n\"stime\",\n\"stimy\",\n\"stymy\",\n\"stine\",\n\"sting\",\n\"stink\",\n\"stint\",\n\"stion\",\n\"stipa\",\n\"stipe\",\n\"stipo\",\n\"stire\",\n\"stirk\",\n\"stirp\",\n\"stirs\",\n\"stite\",\n\"stith\",\n\"stive\",\n\"stivy\",\n\"stoae\",\n\"stoai\",\n\"stoas\",\n\"stoat\",\n\"stobs\",\n\"stock\",\n\"stoep\",\n\"stoff\",\n\"stoga\",\n\"stogy\",\n\"stoic\",\n\"stoit\",\n\"stoke\",\n\"stola\",\n\"stold\",\n\"stole\",\n\"stoma\",\n\"stomp\",\n\"stond\",\n\"stone\",\n\"stong\",\n\"stony\",\n\"stonk\",\n\"stood\",\n\"stoof\",\n\"stook\",\n\"stool\",\n\"stoon\",\n\"stoop\",\n\"stoot\",\n\"stopa\",\n\"stope\",\n\"stops\",\n\"stopt\",\n\"store\",\n\"story\",\n\"stork\",\n\"storm\",\n\"stosh\",\n\"stoss\",\n\"stott\",\n\"stoun\",\n\"stoup\",\n\"stour\",\n\"stout\",\n\"stove\",\n\"stowp\",\n\"stows\",\n\"strad\",\n\"strae\",\n\"strag\",\n\"stray\",\n\"stram\",\n\"strap\",\n\"straw\",\n\"stree\",\n\"strey\",\n\"strep\",\n\"stret\",\n\"strew\",\n\"stria\",\n\"strid\",\n\"strig\",\n\"strip\",\n\"strit\",\n\"strix\",\n\"stroy\",\n\"strom\",\n\"strop\",\n\"strow\",\n\"strub\",\n\"strue\",\n\"strum\",\n\"strut\",\n\"struv\",\n\"stubb\",\n\"stube\",\n\"stubs\",\n\"stuck\",\n\"stude\",\n\"study\",\n\"studs\",\n\"stuff\",\n\"stull\",\n\"stulm\",\n\"stump\",\n\"stums\",\n\"stung\",\n\"stunk\",\n\"stuns\",\n\"stunt\",\n\"stupa\",\n\"stupe\",\n\"stupp\",\n\"sturk\",\n\"sturt\",\n\"stuss\",\n\"suade\",\n\"suant\",\n\"suave\",\n\"subah\",\n\"subas\",\n\"subch\",\n\"suber\",\n\"subet\",\n\"subra\",\n\"subst\",\n\"succi\",\n\"sucks\",\n\"sucre\",\n\"sudan\",\n\"suddy\",\n\"sudds\",\n\"sudes\",\n\"sudic\",\n\"sudor\",\n\"sudra\",\n\"sudsy\",\n\"suede\",\n\"suent\",\n\"suers\",\n\"suety\",\n\"suets\",\n\"sueve\",\n\"suevi\",\n\"sugan\",\n\"sugar\",\n\"sugat\",\n\"sughs\",\n\"sugih\",\n\"sugis\",\n\"suina\",\n\"suine\",\n\"suing\",\n\"suint\",\n\"suyog\",\n\"suist\",\n\"suite\",\n\"suity\",\n\"suits\",\n\"sukey\",\n\"sulci\",\n\"sulea\",\n\"sulfa\",\n\"sulfo\",\n\"sulka\",\n\"sulky\",\n\"sulks\",\n\"sulla\",\n\"sully\",\n\"sumac\",\n\"sumak\",\n\"sumen\",\n\"summa\",\n\"sumos\",\n\"sumph\",\n\"sumps\",\n\"sumpt\",\n\"sunil\",\n\"sunna\",\n\"sunni\",\n\"sunny\",\n\"sunns\",\n\"sunup\",\n\"suomi\",\n\"supai\",\n\"super\",\n\"supes\",\n\"suppl\",\n\"supra\",\n\"supvr\",\n\"surah\",\n\"sural\",\n\"suras\",\n\"surat\",\n\"surds\",\n\"sured\",\n\"surer\",\n\"sures\",\n\"surfy\",\n\"surfs\",\n\"surge\",\n\"surgy\",\n\"surya\",\n\"surly\",\n\"surma\",\n\"surra\",\n\"susan\",\n\"sushi\",\n\"susie\",\n\"sussy\",\n\"susso\",\n\"sutor\",\n\"sutra\",\n\"sutta\",\n\"suzan\",\n\"svelt\",\n\"swabs\",\n\"swack\",\n\"swage\",\n\"swags\",\n\"swail\",\n\"swain\",\n\"sways\",\n\"swale\",\n\"swami\",\n\"swamy\",\n\"swamp\",\n\"swang\",\n\"swank\",\n\"swans\",\n\"swape\",\n\"swaps\",\n\"sward\",\n\"sware\",\n\"swarf\",\n\"swarm\",\n\"swart\",\n\"swash\",\n\"swath\",\n\"swati\",\n\"swats\",\n\"swazi\",\n\"sweal\",\n\"swear\",\n\"sweat\",\n\"swede\",\n\"sweep\",\n\"sweer\",\n\"sweet\",\n\"swego\",\n\"swell\",\n\"swelp\",\n\"swelt\",\n\"swept\",\n\"swerd\",\n\"swick\",\n\"swift\",\n\"swigs\",\n\"swile\",\n\"swill\",\n\"swimy\",\n\"swims\",\n\"swine\",\n\"swing\",\n\"swink\",\n\"swipe\",\n\"swipy\",\n\"swird\",\n\"swire\",\n\"swirl\",\n\"swish\",\n\"swiss\",\n\"swith\",\n\"swive\",\n\"swizz\",\n\"swobs\",\n\"swoln\",\n\"swonk\",\n\"swoon\",\n\"swoop\",\n\"swops\",\n\"sword\",\n\"swore\",\n\"sworn\",\n\"swosh\",\n\"swots\",\n\"swoun\",\n\"swung\",\n\"swure\",\n\"taata\",\n\"tabac\",\n\"tabby\",\n\"tabel\",\n\"taber\",\n\"tabes\",\n\"tabet\",\n\"tabic\",\n\"tabid\",\n\"tabis\",\n\"tabla\",\n\"table\",\n\"tabog\",\n\"taboo\",\n\"tabor\",\n\"tabus\",\n\"tabut\",\n\"tacan\",\n\"tacca\",\n\"taces\",\n\"tacet\",\n\"tache\",\n\"tachi\",\n\"tachs\",\n\"tacit\",\n\"tacky\",\n\"tacks\",\n\"tacos\",\n\"tacso\",\n\"tacts\",\n\"taels\",\n\"taffy\",\n\"tafia\",\n\"tagal\",\n\"tagel\",\n\"taggy\",\n\"tagua\",\n\"tagus\",\n\"tahar\",\n\"tahil\",\n\"tahin\",\n\"tahrs\",\n\"tahua\",\n\"taich\",\n\"tayer\",\n\"taiga\",\n\"tayir\",\n\"taily\",\n\"tails\",\n\"taino\",\n\"tains\",\n\"taint\",\n\"taipi\",\n\"taipo\",\n\"tayra\",\n\"tairn\",\n\"taise\",\n\"taish\",\n\"tajes\",\n\"tajik\",\n\"takao\",\n\"takar\",\n\"taked\",\n\"taken\",\n\"taker\",\n\"takes\",\n\"takin\",\n\"takyr\",\n\"talak\",\n\"talao\",\n\"talar\",\n\"talas\",\n\"talck\",\n\"talcs\",\n\"taled\",\n\"taler\",\n\"tales\",\n\"talio\",\n\"talis\",\n\"talky\",\n\"talks\",\n\"talli\",\n\"tally\",\n\"talma\",\n\"talon\",\n\"talpa\",\n\"taluk\",\n\"talus\",\n\"tamal\",\n\"tamas\",\n\"tambo\",\n\"tamed\",\n\"tamer\",\n\"tames\",\n\"tamil\",\n\"tamis\",\n\"tammy\",\n\"tampa\",\n\"tamps\",\n\"tamul\",\n\"tamus\",\n\"tanak\",\n\"tanan\",\n\"tandy\",\n\"tanga\",\n\"tangi\",\n\"tangy\",\n\"tango\",\n\"tangs\",\n\"tanha\",\n\"tania\",\n\"tanya\",\n\"tanka\",\n\"tanks\",\n\"tanna\",\n\"tanny\",\n\"tanoa\",\n\"tansy\",\n\"tanti\",\n\"tanto\",\n\"tanzy\",\n\"tapas\",\n\"taped\",\n\"tapen\",\n\"taper\",\n\"tapes\",\n\"tapet\",\n\"tapia\",\n\"tapir\",\n\"tapis\",\n\"tapit\",\n\"tapoa\",\n\"tappa\",\n\"tapul\",\n\"taqua\",\n\"taraf\",\n\"tarai\",\n\"tarau\",\n\"tarde\",\n\"tardy\",\n\"tardo\",\n\"tarea\",\n\"tared\",\n\"tareq\",\n\"tares\",\n\"tarfa\",\n\"targe\",\n\"tarie\",\n\"tarin\",\n\"tarmi\",\n\"tarns\",\n\"taroc\",\n\"tarok\",\n\"taros\",\n\"tarot\",\n\"tarps\",\n\"tarre\",\n\"tarri\",\n\"tarry\",\n\"tarse\",\n\"tarsi\",\n\"tarte\",\n\"tarts\",\n\"tarve\",\n\"tasco\",\n\"tasks\",\n\"tasse\",\n\"taste\",\n\"tasty\",\n\"tatar\",\n\"tater\",\n\"tates\",\n\"tatie\",\n\"tatoo\",\n\"tatou\",\n\"tatta\",\n\"tatty\",\n\"taube\",\n\"taula\",\n\"tauli\",\n\"taunt\",\n\"taupe\",\n\"taupo\",\n\"tauri\",\n\"tauts\",\n\"taver\",\n\"tavoy\",\n\"tawed\",\n\"tawer\",\n\"tawgi\",\n\"tawie\",\n\"tawny\",\n\"tawpi\",\n\"tawpy\",\n\"tawse\",\n\"taxed\",\n\"taxer\",\n\"taxes\",\n\"taxin\",\n\"taxir\",\n\"taxis\",\n\"taxon\",\n\"taxor\",\n\"taxus\",\n\"tazia\",\n\"tazza\",\n\"tazze\",\n\"tcawi\",\n\"tchai\",\n\"tchwi\",\n\"teach\",\n\"teaey\",\n\"teaer\",\n\"teaks\",\n\"teals\",\n\"teams\",\n\"teary\",\n\"tears\",\n\"teart\",\n\"tease\",\n\"teasy\",\n\"teaty\",\n\"teats\",\n\"teave\",\n\"teaze\",\n\"tebet\",\n\"techy\",\n\"tecla\",\n\"tecon\",\n\"tecta\",\n\"tecum\",\n\"teddy\",\n\"tedge\",\n\"teems\",\n\"teeny\",\n\"teens\",\n\"teest\",\n\"teeth\",\n\"teety\",\n\"teffs\",\n\"tegua\",\n\"tehee\",\n\"teian\",\n\"teiid\",\n\"teind\",\n\"teise\",\n\"tejon\",\n\"tekya\",\n\"tekke\",\n\"telae\",\n\"telar\",\n\"teleg\",\n\"telei\",\n\"teles\",\n\"telex\",\n\"telia\",\n\"telic\",\n\"telyn\",\n\"telly\",\n\"tells\",\n\"tellt\",\n\"teloi\",\n\"telos\",\n\"teman\",\n\"tembe\",\n\"tembu\",\n\"temin\",\n\"temne\",\n\"tempe\",\n\"tempi\",\n\"tempo\",\n\"temps\",\n\"tempt\",\n\"temse\",\n\"tenai\",\n\"tench\",\n\"tendo\",\n\"tends\",\n\"tenet\",\n\"tenez\",\n\"tengu\",\n\"tenia\",\n\"tenio\",\n\"tenla\",\n\"tenne\",\n\"tenno\",\n\"tennu\",\n\"tenon\",\n\"tenor\",\n\"tense\",\n\"tenso\",\n\"tenth\",\n\"tenty\",\n\"tents\",\n\"tenue\",\n\"tepal\",\n\"tepas\",\n\"tepee\",\n\"tepid\",\n\"tepor\",\n\"terai\",\n\"terap\",\n\"teras\",\n\"terce\",\n\"terek\",\n\"teres\",\n\"tereu\",\n\"terga\",\n\"terma\",\n\"terms\",\n\"terna\",\n\"terne\",\n\"terns\",\n\"terra\",\n\"terre\",\n\"terri\",\n\"terry\",\n\"terse\",\n\"terzo\",\n\"tesla\",\n\"testa\",\n\"teste\",\n\"testy\",\n\"tests\",\n\"tetch\",\n\"tetel\",\n\"teths\",\n\"teton\",\n\"tetra\",\n\"tetty\",\n\"tetum\",\n\"teuch\",\n\"teugh\",\n\"tewed\",\n\"tewel\",\n\"tewer\",\n\"tewit\",\n\"tewly\",\n\"texan\",\n\"texas\",\n\"texts\",\n\"thack\",\n\"thais\",\n\"thala\",\n\"thana\",\n\"thane\",\n\"thank\",\n\"tharf\",\n\"tharm\",\n\"thatd\",\n\"thatn\",\n\"thats\",\n\"thave\",\n\"thawy\",\n\"thawn\",\n\"thaws\",\n\"theah\",\n\"theat\",\n\"theca\",\n\"theek\",\n\"theer\",\n\"theet\",\n\"theft\",\n\"thegn\",\n\"theyd\",\n\"thein\",\n\"their\",\n\"thema\",\n\"theme\",\n\"thens\",\n\"theol\",\n\"theor\",\n\"theos\",\n\"theow\",\n\"there\",\n\"therm\",\n\"these\",\n\"theta\",\n\"thete\",\n\"thewy\",\n\"thews\",\n\"thick\",\n\"thief\",\n\"thigh\",\n\"thilk\",\n\"thill\",\n\"thyme\",\n\"thymi\",\n\"thymy\",\n\"thyms\",\n\"thine\",\n\"thing\",\n\"think\",\n\"thins\",\n\"thiol\",\n\"third\",\n\"thirl\",\n\"thirt\",\n\"thisn\",\n\"thoft\",\n\"thoke\",\n\"thole\",\n\"tholi\",\n\"thone\",\n\"thong\",\n\"thoom\",\n\"thore\",\n\"thorn\",\n\"thoro\",\n\"thorp\",\n\"thort\",\n\"those\",\n\"thous\",\n\"thowt\",\n\"thram\",\n\"thrap\",\n\"thraw\",\n\"thrax\",\n\"three\",\n\"threw\",\n\"thrip\",\n\"throb\",\n\"throe\",\n\"throu\",\n\"throw\",\n\"thrum\",\n\"thruv\",\n\"thuan\",\n\"thuds\",\n\"thugs\",\n\"thuya\",\n\"thuja\",\n\"thule\",\n\"thulr\",\n\"thumb\",\n\"thump\",\n\"thund\",\n\"thung\",\n\"thuoc\",\n\"thurl\",\n\"thurm\",\n\"thurt\",\n\"tiang\",\n\"tiara\",\n\"tibby\",\n\"tibbu\",\n\"tibey\",\n\"tiber\",\n\"tibet\",\n\"tibia\",\n\"tical\",\n\"ticca\",\n\"ticer\",\n\"tyche\",\n\"ticky\",\n\"ticks\",\n\"ticul\",\n\"tidal\",\n\"tiddy\",\n\"tided\",\n\"tides\",\n\"tydie\",\n\"tyees\",\n\"tiens\",\n\"tiers\",\n\"tiffy\",\n\"tiffs\",\n\"tiger\",\n\"tight\",\n\"tigon\",\n\"tigre\",\n\"tigua\",\n\"tyigh\",\n\"tying\",\n\"tyken\",\n\"tikes\",\n\"tykes\",\n\"tikis\",\n\"tikka\",\n\"tikor\",\n\"tikur\",\n\"tilak\",\n\"tilda\",\n\"tilde\",\n\"tiled\",\n\"tiler\",\n\"tyler\",\n\"tiles\",\n\"tilia\",\n\"tilly\",\n\"tills\",\n\"tilth\",\n\"tilty\",\n\"tilts\",\n\"tylus\",\n\"timar\",\n\"timbe\",\n\"timbo\",\n\"timed\",\n\"timer\",\n\"times\",\n\"timet\",\n\"timid\",\n\"timne\",\n\"timon\",\n\"timor\",\n\"tinct\",\n\"tinea\",\n\"tined\",\n\"tyned\",\n\"tines\",\n\"tynes\",\n\"tinge\",\n\"tingi\",\n\"tings\",\n\"tinne\",\n\"tinni\",\n\"tinny\",\n\"tinsy\",\n\"tinta\",\n\"tinty\",\n\"tints\",\n\"typal\",\n\"typed\",\n\"typey\",\n\"typer\",\n\"types\",\n\"typha\",\n\"typic\",\n\"tipis\",\n\"tipit\",\n\"tiple\",\n\"typos\",\n\"tippy\",\n\"typps\",\n\"tipsy\",\n\"tipup\",\n\"tiraz\",\n\"tired\",\n\"tyred\",\n\"tirer\",\n\"tires\",\n\"tyres\",\n\"tirls\",\n\"tirma\",\n\"tiros\",\n\"tyros\",\n\"tirve\",\n\"tisar\",\n\"tisic\",\n\"tissu\",\n\"tyste\",\n\"titan\",\n\"titar\",\n\"titer\",\n\"tithe\",\n\"tythe\",\n\"titis\",\n\"title\",\n\"titre\",\n\"titty\",\n\"titus\",\n\"tiver\",\n\"tiwaz\",\n\"tizzy\",\n\"tlaco\",\n\"tmema\",\n\"toady\",\n\"toads\",\n\"toast\",\n\"today\",\n\"toddy\",\n\"todea\",\n\"todus\",\n\"toffy\",\n\"toffs\",\n\"tofts\",\n\"tofus\",\n\"togae\",\n\"togas\",\n\"toged\",\n\"togue\",\n\"toher\",\n\"toyed\",\n\"toyer\",\n\"toile\",\n\"toils\",\n\"toyon\",\n\"toyos\",\n\"toise\",\n\"toist\",\n\"toity\",\n\"toits\",\n\"tokay\",\n\"toked\",\n\"token\",\n\"tokes\",\n\"tokyo\",\n\"tolan\",\n\"tolas\",\n\"toldo\",\n\"toled\",\n\"toles\",\n\"tolyl\",\n\"tolly\",\n\"tolls\",\n\"tolus\",\n\"toman\",\n\"tomas\",\n\"tombe\",\n\"tombs\",\n\"tomes\",\n\"tomia\",\n\"tomin\",\n\"tommy\",\n\"tonal\",\n\"tondi\",\n\"tondo\",\n\"toned\",\n\"toner\",\n\"tones\",\n\"tonga\",\n\"tongs\",\n\"tonic\",\n\"tonka\",\n\"tonna\",\n\"tonne\",\n\"tonto\",\n\"tonus\",\n\"tools\",\n\"toona\",\n\"toons\",\n\"toosh\",\n\"tooth\",\n\"toots\",\n\"topas\",\n\"topau\",\n\"topaz\",\n\"toped\",\n\"topee\",\n\"toper\",\n\"topes\",\n\"tophe\",\n\"tophi\",\n\"tophs\",\n\"topia\",\n\"topic\",\n\"topis\",\n\"topog\",\n\"topoi\",\n\"topos\",\n\"toppy\",\n\"topsy\",\n\"topsl\",\n\"toque\",\n\"torah\",\n\"toral\",\n\"toran\",\n\"toras\",\n\"torch\",\n\"torcs\",\n\"tored\",\n\"tores\",\n\"toret\",\n\"toric\",\n\"torii\",\n\"torma\",\n\"toros\",\n\"torse\",\n\"torsi\",\n\"torsk\",\n\"torso\",\n\"torta\",\n\"torte\",\n\"torts\",\n\"torus\",\n\"torve\",\n\"tosca\",\n\"toshy\",\n\"tossy\",\n\"total\",\n\"toted\",\n\"totem\",\n\"toter\",\n\"totes\",\n\"totty\",\n\"totum\",\n\"touch\",\n\"tough\",\n\"tould\",\n\"tourn\",\n\"tours\",\n\"tourt\",\n\"touse\",\n\"tousy\",\n\"toust\",\n\"touts\",\n\"tovah\",\n\"tovar\",\n\"tovet\",\n\"towai\",\n\"towan\",\n\"towed\",\n\"towel\",\n\"tower\",\n\"towie\",\n\"towny\",\n\"towns\",\n\"towsy\",\n\"toxic\",\n\"toxin\",\n\"toxon\",\n\"tozee\",\n\"tozer\",\n\"trabu\",\n\"trace\",\n\"tracy\",\n\"track\",\n\"tract\",\n\"trade\",\n\"trady\",\n\"tragi\",\n\"traik\",\n\"trail\",\n\"train\",\n\"trays\",\n\"trait\",\n\"trama\",\n\"trame\",\n\"tramp\",\n\"trams\",\n\"trank\",\n\"trans\",\n\"trant\",\n\"trapa\",\n\"traps\",\n\"trapt\",\n\"trash\",\n\"trasy\",\n\"trass\",\n\"trave\",\n\"trawl\",\n\"tread\",\n\"treas\",\n\"treat\",\n\"treed\",\n\"treey\",\n\"treen\",\n\"trees\",\n\"trefa\",\n\"treys\",\n\"treks\",\n\"trema\",\n\"trend\",\n\"trent\",\n\"tress\",\n\"trest\",\n\"trets\",\n\"trews\",\n\"triac\",\n\"triad\",\n\"trial\",\n\"trias\",\n\"tribe\",\n\"trica\",\n\"trice\",\n\"trick\",\n\"tried\",\n\"trier\",\n\"tries\",\n\"trifa\",\n\"triga\",\n\"trigo\",\n\"trigs\",\n\"trike\",\n\"trill\",\n\"tryma\",\n\"trims\",\n\"tryms\",\n\"trina\",\n\"trine\",\n\"trink\",\n\"triol\",\n\"trior\",\n\"trios\",\n\"trypa\",\n\"tripe\",\n\"tripy\",\n\"tripl\",\n\"trips\",\n\"tript\",\n\"trist\",\n\"tryst\",\n\"trite\",\n\"trixy\",\n\"troad\",\n\"troak\",\n\"troat\",\n\"troca\",\n\"troch\",\n\"trock\",\n\"troco\",\n\"trode\",\n\"troft\",\n\"trogs\",\n\"troic\",\n\"trois\",\n\"troys\",\n\"troke\",\n\"troll\",\n\"tromp\",\n\"trona\",\n\"tronc\",\n\"trone\",\n\"tronk\",\n\"troop\",\n\"troot\",\n\"trooz\",\n\"trope\",\n\"troth\",\n\"trots\",\n\"troue\",\n\"trout\",\n\"trouv\",\n\"trove\",\n\"trows\",\n\"trubu\",\n\"truce\",\n\"truck\",\n\"trudy\",\n\"trued\",\n\"truer\",\n\"trues\",\n\"truff\",\n\"truly\",\n\"trull\",\n\"trump\",\n\"trunk\",\n\"trush\",\n\"truss\",\n\"trust\",\n\"truth\",\n\"tsade\",\n\"tsadi\",\n\"tsars\",\n\"tsere\",\n\"tsine\",\n\"tsked\",\n\"tsuba\",\n\"tsubo\",\n\"tsuga\",\n\"tsuma\",\n\"tuant\",\n\"tuarn\",\n\"tuart\",\n\"tuath\",\n\"tubae\",\n\"tubal\",\n\"tubar\",\n\"tubas\",\n\"tubba\",\n\"tubby\",\n\"tubed\",\n\"tuber\",\n\"tubes\",\n\"tubig\",\n\"tubik\",\n\"tucky\",\n\"tucks\",\n\"tucum\",\n\"tudel\",\n\"tudor\",\n\"tufan\",\n\"tufas\",\n\"tuffs\",\n\"tufty\",\n\"tufts\",\n\"tugui\",\n\"tuyer\",\n\"tuism\",\n\"tukra\",\n\"tules\",\n\"tulip\",\n\"tulle\",\n\"tulsa\",\n\"tulsi\",\n\"tumid\",\n\"tumli\",\n\"tummy\",\n\"tumor\",\n\"tumps\",\n\"tunal\",\n\"tunas\",\n\"tunca\",\n\"tuned\",\n\"tuner\",\n\"tunes\",\n\"tunga\",\n\"tungo\",\n\"tungs\",\n\"tunic\",\n\"tunis\",\n\"tunka\",\n\"tunna\",\n\"tunny\",\n\"tupek\",\n\"tupik\",\n\"tuple\",\n\"tuque\",\n\"turbo\",\n\"turco\",\n\"turds\",\n\"turfy\",\n\"turfs\",\n\"turgy\",\n\"turio\",\n\"turki\",\n\"turks\",\n\"turma\",\n\"turns\",\n\"turps\",\n\"turse\",\n\"turus\",\n\"turvy\",\n\"tushy\",\n\"tushs\",\n\"tusky\",\n\"tusks\",\n\"tutee\",\n\"tutin\",\n\"tutly\",\n\"tutor\",\n\"tutti\",\n\"tutty\",\n\"tutto\",\n\"tutus\",\n\"tuxes\",\n\"tuzla\",\n\"twaes\",\n\"twain\",\n\"twait\",\n\"twale\",\n\"twalt\",\n\"twana\",\n\"twang\",\n\"twank\",\n\"twant\",\n\"twats\",\n\"tweag\",\n\"tweak\",\n\"tweed\",\n\"tweeg\",\n\"tweel\",\n\"tween\",\n\"tweet\",\n\"tweil\",\n\"twere\",\n\"twerp\",\n\"twice\",\n\"twick\",\n\"twier\",\n\"twyer\",\n\"twigs\",\n\"twill\",\n\"twilt\",\n\"twine\",\n\"twiny\",\n\"twink\",\n\"twins\",\n\"twint\",\n\"twire\",\n\"twirk\",\n\"twirl\",\n\"twirp\",\n\"twist\",\n\"twite\",\n\"twits\",\n\"twixt\",\n\"twoes\",\n\"tzaam\",\n\"tzars\",\n\"uayeb\",\n\"ualis\",\n\"uaupe\",\n\"uchee\",\n\"uckia\",\n\"udasi\",\n\"udder\",\n\"udell\",\n\"udish\",\n\"ugali\",\n\"uglis\",\n\"ugric\",\n\"uhlan\",\n\"uhllo\",\n\"uhuru\",\n\"uigur\",\n\"uinal\",\n\"uinta\",\n\"ukase\",\n\"ulama\",\n\"ulans\",\n\"ulcer\",\n\"ulcus\",\n\"ulema\",\n\"uller\",\n\"ulmic\",\n\"ulmin\",\n\"ulmus\",\n\"ulnad\",\n\"ulnae\",\n\"ulnar\",\n\"ulnas\",\n\"uloid\",\n\"ulpan\",\n\"ultra\",\n\"uluhi\",\n\"ululu\",\n\"ulvan\",\n\"ulvas\",\n\"umaua\",\n\"umbel\",\n\"umber\",\n\"umble\",\n\"umbos\",\n\"umbra\",\n\"umbre\",\n\"umest\",\n\"umiac\",\n\"umiak\",\n\"umiaq\",\n\"umiri\",\n\"umist\",\n\"ummps\",\n\"umped\",\n\"umpty\",\n\"umset\",\n\"unact\",\n\"unadd\",\n\"unais\",\n\"unami\",\n\"unamo\",\n\"unapt\",\n\"unary\",\n\"unark\",\n\"unarm\",\n\"unaus\",\n\"unbag\",\n\"unbay\",\n\"unbar\",\n\"unbed\",\n\"unbet\",\n\"unbid\",\n\"unbit\",\n\"unbog\",\n\"unboy\",\n\"unbow\",\n\"unbox\",\n\"unbud\",\n\"uncap\",\n\"uncia\",\n\"uncle\",\n\"uncoy\",\n\"uncos\",\n\"uncow\",\n\"uncus\",\n\"uncut\",\n\"undam\",\n\"undee\",\n\"unden\",\n\"under\",\n\"undid\",\n\"undye\",\n\"undig\",\n\"undim\",\n\"undog\",\n\"undon\",\n\"undry\",\n\"undub\",\n\"undue\",\n\"undug\",\n\"uneye\",\n\"unfar\",\n\"unfed\",\n\"unfew\",\n\"unfit\",\n\"unfix\",\n\"unfur\",\n\"ungag\",\n\"unget\",\n\"ungka\",\n\"ungod\",\n\"ungot\",\n\"ungum\",\n\"unhad\",\n\"unhap\",\n\"unhat\",\n\"unhex\",\n\"unhid\",\n\"unhip\",\n\"unhit\",\n\"unhot\",\n\"uniat\",\n\"unice\",\n\"unify\",\n\"uninn\",\n\"union\",\n\"unism\",\n\"unist\",\n\"unite\",\n\"unity\",\n\"units\",\n\"unius\",\n\"unjam\",\n\"unked\",\n\"unkey\",\n\"unken\",\n\"unket\",\n\"unkid\",\n\"unkin\",\n\"unlay\",\n\"unlap\",\n\"unlaw\",\n\"unlax\",\n\"unled\",\n\"unlet\",\n\"unlid\",\n\"unlie\",\n\"unlit\",\n\"unmad\",\n\"unman\",\n\"unmet\",\n\"unmew\",\n\"unmix\",\n\"unnet\",\n\"unnew\",\n\"unode\",\n\"unoil\",\n\"unold\",\n\"unona\",\n\"unorn\",\n\"unown\",\n\"unpay\",\n\"unpeg\",\n\"unpen\",\n\"unpin\",\n\"unpot\",\n\"unput\",\n\"unray\",\n\"unram\",\n\"unred\",\n\"unrid\",\n\"unrig\",\n\"unrip\",\n\"unrow\",\n\"unrra\",\n\"unrun\",\n\"unsad\",\n\"unsay\",\n\"unsee\",\n\"unset\",\n\"unsew\",\n\"unsex\",\n\"unshy\",\n\"unsin\",\n\"unsly\",\n\"unson\",\n\"unsty\",\n\"unsun\",\n\"untap\",\n\"untar\",\n\"untax\",\n\"untie\",\n\"until\",\n\"untin\",\n\"untop\",\n\"unurn\",\n\"unuse\",\n\"unwan\",\n\"unwax\",\n\"unweb\",\n\"unwed\",\n\"unwet\",\n\"unwig\",\n\"unwit\",\n\"unwon\",\n\"unwry\",\n\"unzen\",\n\"unzip\",\n\"upaya\",\n\"uparm\",\n\"upbay\",\n\"upbar\",\n\"upbid\",\n\"upbye\",\n\"upbuy\",\n\"upcry\",\n\"upcut\",\n\"updos\",\n\"updry\",\n\"upeat\",\n\"upend\",\n\"upfly\",\n\"upget\",\n\"upher\",\n\"upjet\",\n\"uplay\",\n\"upleg\",\n\"uplit\",\n\"upmix\",\n\"upped\",\n\"upper\",\n\"uppop\",\n\"uprid\",\n\"uprip\",\n\"uprun\",\n\"upsey\",\n\"upset\",\n\"upsit\",\n\"upsun\",\n\"upsup\",\n\"uptie\",\n\"upupa\",\n\"upway\",\n\"upwax\",\n\"uraei\",\n\"urali\",\n\"urare\",\n\"urari\",\n\"urase\",\n\"urate\",\n\"urban\",\n\"urbic\",\n\"urdee\",\n\"ureal\",\n\"ureas\",\n\"uredo\",\n\"ureic\",\n\"ureid\",\n\"urena\",\n\"urent\",\n\"urged\",\n\"urger\",\n\"urges\",\n\"uriah\",\n\"urial\",\n\"urian\",\n\"uriel\",\n\"urine\",\n\"urite\",\n\"urlar\",\n\"urled\",\n\"urman\",\n\"urnae\",\n\"urnal\",\n\"ursae\",\n\"ursal\",\n\"ursid\",\n\"urson\",\n\"ursuk\",\n\"ursus\",\n\"urubu\",\n\"urucu\",\n\"urutu\",\n\"usage\",\n\"usant\",\n\"usara\",\n\"usent\",\n\"users\",\n\"ushak\",\n\"ushas\",\n\"usher\",\n\"usine\",\n\"using\",\n\"uskok\",\n\"usnea\",\n\"usnic\",\n\"usnin\",\n\"usque\",\n\"uster\",\n\"usual\",\n\"usure\",\n\"usury\",\n\"usurp\",\n\"utchy\",\n\"utees\",\n\"utend\",\n\"uteri\",\n\"utero\",\n\"uther\",\n\"utick\",\n\"utile\",\n\"utrum\",\n\"utsuk\",\n\"utter\",\n\"uvala\",\n\"uvate\",\n\"uveal\",\n\"uveas\",\n\"uviol\",\n\"uvito\",\n\"uvres\",\n\"uvrou\",\n\"uvula\",\n\"uvver\",\n\"uzara\",\n\"uzbak\",\n\"uzbeg\",\n\"uzbek\",\n\"vache\",\n\"vacoa\",\n\"vacua\",\n\"vacuo\",\n\"vadim\",\n\"vadis\",\n\"vagal\",\n\"vagas\",\n\"vague\",\n\"vagus\",\n\"vails\",\n\"vaire\",\n\"vairy\",\n\"vairs\",\n\"vajra\",\n\"vakia\",\n\"vakil\",\n\"vales\",\n\"valet\",\n\"valew\",\n\"valid\",\n\"valyl\",\n\"valmy\",\n\"valor\",\n\"valsa\",\n\"valse\",\n\"value\",\n\"valva\",\n\"valve\",\n\"vamos\",\n\"vamps\",\n\"vance\",\n\"vanda\",\n\"vaned\",\n\"vanes\",\n\"vangs\",\n\"vanir\",\n\"vapid\",\n\"vapor\",\n\"vappa\",\n\"varan\",\n\"varas\",\n\"varda\",\n\"vardy\",\n\"varec\",\n\"varia\",\n\"vario\",\n\"varix\",\n\"varna\",\n\"varus\",\n\"varve\",\n\"vasal\",\n\"vases\",\n\"vasty\",\n\"vasts\",\n\"vates\",\n\"vatic\",\n\"vaudy\",\n\"vault\",\n\"vaunt\",\n\"vealy\",\n\"veals\",\n\"vedda\",\n\"vedet\",\n\"vedic\",\n\"vedro\",\n\"veena\",\n\"veeps\",\n\"veery\",\n\"veers\",\n\"vefry\",\n\"vegan\",\n\"vegas\",\n\"vehme\",\n\"veily\",\n\"veils\",\n\"veiny\",\n\"veins\",\n\"vejoz\",\n\"velal\",\n\"velar\",\n\"velds\",\n\"veldt\",\n\"velic\",\n\"velte\",\n\"velum\",\n\"venae\",\n\"venal\",\n\"vends\",\n\"vened\",\n\"venge\",\n\"venie\",\n\"venin\",\n\"venom\",\n\"venta\",\n\"vents\",\n\"venue\",\n\"venus\",\n\"vepse\",\n\"veray\",\n\"verby\",\n\"verbs\",\n\"verde\",\n\"verdi\",\n\"verey\",\n\"verek\",\n\"verge\",\n\"vergi\",\n\"verpa\",\n\"verre\",\n\"verry\",\n\"versa\",\n\"verse\",\n\"verso\",\n\"verst\",\n\"verty\",\n\"verts\",\n\"vertu\",\n\"verus\",\n\"verve\",\n\"vespa\",\n\"vesta\",\n\"vests\",\n\"vetch\",\n\"veter\",\n\"vetus\",\n\"veuve\",\n\"vexed\",\n\"vexer\",\n\"vexes\",\n\"vexil\",\n\"viage\",\n\"vials\",\n\"viand\",\n\"vyase\",\n\"vibes\",\n\"vibex\",\n\"vibix\",\n\"vicar\",\n\"viced\",\n\"vices\",\n\"vichy\",\n\"vicia\",\n\"vicki\",\n\"vicky\",\n\"vicua\",\n\"vicus\",\n\"video\",\n\"vidya\",\n\"vidry\",\n\"vidua\",\n\"viers\",\n\"viewy\",\n\"views\",\n\"vifda\",\n\"vigas\",\n\"vigia\",\n\"vigil\",\n\"vigor\",\n\"vying\",\n\"vijay\",\n\"vijao\",\n\"viler\",\n\"villa\",\n\"ville\",\n\"villi\",\n\"vills\",\n\"vimen\",\n\"vimpa\",\n\"vinal\",\n\"vinas\",\n\"vinca\",\n\"vince\",\n\"vinci\",\n\"vinea\",\n\"vined\",\n\"viner\",\n\"vines\",\n\"vinet\",\n\"vinew\",\n\"vingt\",\n\"vinic\",\n\"vinyl\",\n\"vinny\",\n\"vinod\",\n\"vinos\",\n\"vinta\",\n\"vinum\",\n\"viola\",\n\"viols\",\n\"viper\",\n\"viral\",\n\"vireo\",\n\"vires\",\n\"virga\",\n\"virge\",\n\"virgo\",\n\"virid\",\n\"virls\",\n\"viron\",\n\"virtu\",\n\"virus\",\n\"visas\",\n\"vised\",\n\"vises\",\n\"visie\",\n\"visit\",\n\"visne\",\n\"vison\",\n\"visor\",\n\"vista\",\n\"visto\",\n\"vitae\",\n\"vital\",\n\"vitis\",\n\"vitra\",\n\"vitry\",\n\"vitro\",\n\"vitta\",\n\"viuva\",\n\"vivas\",\n\"vivat\",\n\"vivax\",\n\"vivda\",\n\"vivek\",\n\"viver\",\n\"vives\",\n\"vivid\",\n\"vivos\",\n\"vivre\",\n\"vixen\",\n\"vizir\",\n\"vizor\",\n\"vizzy\",\n\"vlach\",\n\"vobis\",\n\"vocab\",\n\"vocal\",\n\"vocat\",\n\"voces\",\n\"voder\",\n\"vodka\",\n\"vodum\",\n\"vodun\",\n\"vogie\",\n\"vogue\",\n\"vogul\",\n\"voice\",\n\"voids\",\n\"voila\",\n\"voile\",\n\"volar\",\n\"voled\",\n\"voles\",\n\"volet\",\n\"volga\",\n\"volow\",\n\"volta\",\n\"volte\",\n\"volti\",\n\"volto\",\n\"volts\",\n\"volva\",\n\"vomer\",\n\"vomit\",\n\"voraz\",\n\"votal\",\n\"voted\",\n\"voter\",\n\"votes\",\n\"vouch\",\n\"vouge\",\n\"vouli\",\n\"voust\",\n\"vowed\",\n\"vowel\",\n\"vower\",\n\"vraic\",\n\"vroom\",\n\"vrouw\",\n\"vrows\",\n\"vucom\",\n\"vuggy\",\n\"vuggs\",\n\"vughs\",\n\"vulgo\",\n\"vulva\",\n\"waapa\",\n\"waasi\",\n\"wabby\",\n\"wacke\",\n\"wacky\",\n\"wacks\",\n\"waddy\",\n\"waded\",\n\"wader\",\n\"wades\",\n\"wadge\",\n\"wadis\",\n\"wadna\",\n\"waefu\",\n\"wafer\",\n\"waffs\",\n\"wafty\",\n\"wafts\",\n\"waged\",\n\"wager\",\n\"wages\",\n\"waget\",\n\"wagga\",\n\"waggy\",\n\"wagon\",\n\"wahoo\",\n\"wayao\",\n\"waifs\",\n\"waily\",\n\"wails\",\n\"wayne\",\n\"wains\",\n\"waird\",\n\"wairs\",\n\"waise\",\n\"waist\",\n\"waits\",\n\"waive\",\n\"wakan\",\n\"wakas\",\n\"waked\",\n\"waken\",\n\"waker\",\n\"wakes\",\n\"wakhi\",\n\"wakif\",\n\"wakon\",\n\"waled\",\n\"waler\",\n\"wales\",\n\"walks\",\n\"walla\",\n\"wally\",\n\"walls\",\n\"walsh\",\n\"walth\",\n\"walty\",\n\"waltz\",\n\"wamel\",\n\"wames\",\n\"wamus\",\n\"wandy\",\n\"wands\",\n\"waned\",\n\"waney\",\n\"wanes\",\n\"wanga\",\n\"wanky\",\n\"wanle\",\n\"wanly\",\n\"wanna\",\n\"wanny\",\n\"wanty\",\n\"wants\",\n\"wanze\",\n\"wappo\",\n\"warch\",\n\"wards\",\n\"wared\",\n\"wares\",\n\"warks\",\n\"warly\",\n\"warms\",\n\"warns\",\n\"warnt\",\n\"warps\",\n\"warri\",\n\"warse\",\n\"warst\",\n\"warth\",\n\"warty\",\n\"warts\",\n\"warua\",\n\"warve\",\n\"wasat\",\n\"wasco\",\n\"wasel\",\n\"washy\",\n\"washo\",\n\"wasir\",\n\"wasnt\",\n\"waspy\",\n\"wasps\",\n\"waste\",\n\"wasty\",\n\"wasts\",\n\"watap\",\n\"watch\",\n\"water\",\n\"watts\",\n\"wauch\",\n\"waugh\",\n\"wauks\",\n\"wauls\",\n\"wauns\",\n\"waura\",\n\"wauve\",\n\"waved\",\n\"wavey\",\n\"waver\",\n\"waves\",\n\"wawah\",\n\"wawls\",\n\"waxed\",\n\"waxen\",\n\"waxer\",\n\"waxes\",\n\"wazir\",\n\"weaky\",\n\"weald\",\n\"weals\",\n\"weans\",\n\"weary\",\n\"wears\",\n\"weave\",\n\"webby\",\n\"weber\",\n\"wecht\",\n\"wedel\",\n\"wedge\",\n\"wedgy\",\n\"weeda\",\n\"weedy\",\n\"weeds\",\n\"weeks\",\n\"weeny\",\n\"weens\",\n\"weent\",\n\"weepy\",\n\"weeps\",\n\"weesh\",\n\"weest\",\n\"weety\",\n\"weets\",\n\"weeze\",\n\"wefty\",\n\"wefts\",\n\"wehee\",\n\"weigh\",\n\"weird\",\n\"weirs\",\n\"weism\",\n\"wekas\",\n\"wekau\",\n\"welch\",\n\"welds\",\n\"welly\",\n\"wells\",\n\"welsh\",\n\"welts\",\n\"wemmy\",\n\"wench\",\n\"wende\",\n\"wendi\",\n\"wendy\",\n\"wends\",\n\"wenny\",\n\"weren\",\n\"wersh\",\n\"weste\",\n\"westy\",\n\"wests\",\n\"wetly\",\n\"wevet\",\n\"wezen\",\n\"whack\",\n\"whale\",\n\"whaly\",\n\"whalm\",\n\"whalp\",\n\"whame\",\n\"whamp\",\n\"whams\",\n\"whand\",\n\"whang\",\n\"whank\",\n\"whaps\",\n\"whare\",\n\"wharf\",\n\"wharl\",\n\"wharp\",\n\"whart\",\n\"whase\",\n\"whata\",\n\"whatd\",\n\"whats\",\n\"whauk\",\n\"whaup\",\n\"whaur\",\n\"wheal\",\n\"wheam\",\n\"wheat\",\n\"wheel\",\n\"wheem\",\n\"wheen\",\n\"wheep\",\n\"wheer\",\n\"wheft\",\n\"whein\",\n\"wheys\",\n\"wheki\",\n\"whelk\",\n\"whelm\",\n\"whelp\",\n\"whens\",\n\"where\",\n\"whets\",\n\"whewl\",\n\"whews\",\n\"whewt\",\n\"whiba\",\n\"which\",\n\"whick\",\n\"whids\",\n\"whiff\",\n\"whift\",\n\"whigs\",\n\"while\",\n\"whilk\",\n\"whill\",\n\"whils\",\n\"whims\",\n\"whine\",\n\"whing\",\n\"whiny\",\n\"whins\",\n\"whips\",\n\"whipt\",\n\"whirl\",\n\"whirr\",\n\"whirs\",\n\"whish\",\n\"whisk\",\n\"whisp\",\n\"whiss\",\n\"whist\",\n\"white\",\n\"whity\",\n\"whits\",\n\"whizz\",\n\"whole\",\n\"wholl\",\n\"whomp\",\n\"whone\",\n\"whoof\",\n\"whoop\",\n\"whoot\",\n\"whops\",\n\"whore\",\n\"whory\",\n\"whorl\",\n\"whort\",\n\"whose\",\n\"whoso\",\n\"whsle\",\n\"whuff\",\n\"whulk\",\n\"whump\",\n\"whush\",\n\"whute\",\n\"wicca\",\n\"wicht\",\n\"wicky\",\n\"wicks\",\n\"widdy\",\n\"widen\",\n\"wider\",\n\"wides\",\n\"widow\",\n\"width\",\n\"wield\",\n\"wierd\",\n\"wifed\",\n\"wifes\",\n\"wifie\",\n\"wigan\",\n\"wiggy\",\n\"wight\",\n\"wiyat\",\n\"wiyot\",\n\"wilco\",\n\"wilds\",\n\"wiled\",\n\"wyled\",\n\"wiles\",\n\"wyles\",\n\"wilga\",\n\"willi\",\n\"willy\",\n\"wills\",\n\"wilts\",\n\"wince\",\n\"winch\",\n\"windy\",\n\"winds\",\n\"wynds\",\n\"windz\",\n\"wined\",\n\"winey\",\n\"winer\",\n\"wines\",\n\"wingy\",\n\"wings\",\n\"winks\",\n\"winly\",\n\"winna\",\n\"wynne\",\n\"wynns\",\n\"winos\",\n\"winze\",\n\"wiped\",\n\"wiper\",\n\"wipes\",\n\"wired\",\n\"wirer\",\n\"wires\",\n\"wiros\",\n\"wirra\",\n\"wised\",\n\"wisen\",\n\"wiser\",\n\"wises\",\n\"wisha\",\n\"wishy\",\n\"wisht\",\n\"wyson\",\n\"wispy\",\n\"wisps\",\n\"wisse\",\n\"wiste\",\n\"wysty\",\n\"wists\",\n\"witan\",\n\"witch\",\n\"wited\",\n\"wyted\",\n\"witen\",\n\"wites\",\n\"wytes\",\n\"withe\",\n\"withy\",\n\"witty\",\n\"wived\",\n\"wiver\",\n\"wyver\",\n\"wives\",\n\"wizen\",\n\"wizes\",\n\"wlity\",\n\"wloka\",\n\"woady\",\n\"woads\",\n\"woald\",\n\"wocas\",\n\"woden\",\n\"wodge\",\n\"wodgy\",\n\"woful\",\n\"wogul\",\n\"woibe\",\n\"wokas\",\n\"woken\",\n\"woldy\",\n\"wolds\",\n\"wolfs\",\n\"wolly\",\n\"wolof\",\n\"wolve\",\n\"woman\",\n\"womby\",\n\"wombs\",\n\"women\",\n\"wonga\",\n\"wonky\",\n\"wonna\",\n\"wonts\",\n\"woody\",\n\"woods\",\n\"wooed\",\n\"wooer\",\n\"woofy\",\n\"woofs\",\n\"woold\",\n\"woolf\",\n\"wooly\",\n\"wools\",\n\"woomp\",\n\"woons\",\n\"woops\",\n\"woosh\",\n\"wootz\",\n\"woozy\",\n\"wopsy\",\n\"wordy\",\n\"words\",\n\"worky\",\n\"works\",\n\"world\",\n\"wormy\",\n\"worms\",\n\"worry\",\n\"worse\",\n\"worst\",\n\"worth\",\n\"worts\",\n\"wouch\",\n\"wough\",\n\"would\",\n\"wound\",\n\"woven\",\n\"wowed\",\n\"wrack\",\n\"wramp\",\n\"wrang\",\n\"wraps\",\n\"wrapt\",\n\"wrast\",\n\"wrath\",\n\"wrawl\",\n\"wreak\",\n\"wreat\",\n\"wreck\",\n\"wrens\",\n\"wrest\",\n\"wrick\",\n\"wride\",\n\"wried\",\n\"wrier\",\n\"wryer\",\n\"wries\",\n\"wryly\",\n\"wring\",\n\"wrist\",\n\"write\",\n\"writh\",\n\"writs\",\n\"wrive\",\n\"wroke\",\n\"wrong\",\n\"wroot\",\n\"wrote\",\n\"wroth\",\n\"wrung\",\n\"wudge\",\n\"wunna\",\n\"wurly\",\n\"wurst\",\n\"wuzzy\",\n\"xebec\",\n\"xenia\",\n\"xenic\",\n\"xenyl\",\n\"xenon\",\n\"xenos\",\n\"xeres\",\n\"xeric\",\n\"xerox\",\n\"xerus\",\n\"xicak\",\n\"xylan\",\n\"xylem\",\n\"xylia\",\n\"xylic\",\n\"xylyl\",\n\"xylol\",\n\"xylon\",\n\"xinca\",\n\"xyrid\",\n\"xyris\",\n\"xysti\",\n\"xysts\",\n\"xoana\",\n\"xurel\",\n\"xviii\",\n\"xxiii\",\n\"zabra\",\n\"zabti\",\n\"zayat\",\n\"zayin\",\n\"zaire\",\n\"zakah\",\n\"zakat\",\n\"zaman\",\n\"zambo\",\n\"zamia\",\n\"zande\",\n\"zante\",\n\"zanza\",\n\"zanze\",\n\"zapas\",\n\"zapus\",\n\"zaque\",\n\"zarfs\",\n\"zaxes\",\n\"zazen\",\n\"zeals\",\n\"zebec\",\n\"zebra\",\n\"zebub\",\n\"zebus\",\n\"zeins\",\n\"zeism\",\n\"zeiss\",\n\"zeist\",\n\"zemmi\",\n\"zemni\",\n\"zendo\",\n\"zerda\",\n\"zerma\",\n\"zeros\",\n\"zesty\",\n\"zests\",\n\"zetas\",\n\"zhmud\",\n\"ziara\",\n\"zibet\",\n\"ziega\",\n\"ziffs\",\n\"zygal\",\n\"zigan\",\n\"zygon\",\n\"zihar\",\n\"zilch\",\n\"zilla\",\n\"zills\",\n\"zimbi\",\n\"zymes\",\n\"zymic\",\n\"zymin\",\n\"zimme\",\n\"zimmi\",\n\"zimmy\",\n\"zincy\",\n\"zinco\",\n\"zincs\",\n\"zineb\",\n\"zingy\",\n\"zings\",\n\"zinke\",\n\"zinky\",\n\"zippy\",\n\"zirai\",\n\"zirak\",\n\"ziram\",\n\"zitis\",\n\"zizel\",\n\"zizia\",\n\"zizit\",\n\"zlote\",\n\"zloty\",\n\"zmudz\",\n\"zoaea\",\n\"zocco\",\n\"zoeae\",\n\"zoeal\",\n\"zoeas\",\n\"zogan\",\n\"zohak\",\n\"zoism\",\n\"zoist\",\n\"zokor\",\n\"zolle\",\n\"zombi\",\n\"zonal\",\n\"zonar\",\n\"zonda\",\n\"zoned\",\n\"zoner\",\n\"zones\",\n\"zonic\",\n\"zonta\",\n\"zooid\",\n\"zooks\",\n\"zooms\",\n\"zoona\",\n\"zoons\",\n\"zooty\",\n\"zoque\",\n\"zoril\",\n\"zoris\",\n\"zorro\",\n\"zosma\",\n\"zowie\",\n\"zucco\",\n\"zudda\",\n\"zulus\",\n\"zunis\",\n}\n\n# Just in case there are any in `targets` that aren't in `all`.\nall = all.union(targets)\n",
            "type": "text"
          }
        ]
      },
      {
        "title": "Pyllusion",
        "about": "Visual illusions",
        "files": [
          {
            "name": "app.py",
            "content": "# Demo app for Pyllusion, from\n# https://realitybending.github.io/Pyllusion/introduction.html\n\nfrom shiny import App, render, ui\nimport pyllusion\n\n\napp_ui = ui.page_fluid(\n    ui.layout_sidebar(\n        ui.panel_sidebar(\n            ui.input_select(\n                \"illusion\",\n                \"Illusion Type\",\n                [\n                    \"Delboeuf\",\n                    \"Ebbinghaus\",\n                    \"MullerLyer\",\n                    \"Ponzo\",\n                    \"VerticalHorizontal\",\n                    \"Zollner\",\n                    \"Poggendorff\",\n                    \"Contrast\",\n                    \"White\",\n                    \"Autostereogram\",\n                    \"Pareidolia\",\n                ],\n            ),\n            ui.output_ui(\"controls\"),\n            # The following dummy slider is needed because the HTML deps for dynamic UI\n            # doesn't work.\n            ui.div(\n                {\"style\": \"display: none\"},\n                ui.input_slider(\"XX\", \"XX\", 1, 2, 1, step=1),\n            ),\n        ),\n        ui.panel_main(\n            ui.output_plot(\"plot\"),\n        ),\n    ),\n)\n\n\ndef server(input, output, session):\n    @output\n    @render.ui\n    def controls():\n        illusion = input.illusion()\n        if illusion in [\"Delboeuf\", \"Ebbinghaus\"]:\n            return ui.TagList(\n                ui.input_slider(\"strength\", \"Illusion Strength\", 0, 5, 3, step=0.5),\n                ui.input_slider(\"diff\", \"Difference\", -1, 1, 0, step=0.2),\n            )\n        elif illusion in [\n            \"MullerLyer\",\n            \"Ponzo\",\n            \"VerticalHorizontal\",\n            \"Zollner\",\n            \"Poggendorff\",\n            \"Contrast\",\n            \"White\",\n        ]:\n            return ui.TagList(\n                ui.input_slider(\"strength\", \"Illusion Strength\", -60, 60, 0, step=5),\n                ui.input_slider(\"diff\", \"Difference\", -1, 1, 0, step=0.2),\n            )\n        elif illusion in [\"Autostereogram\"]:\n            return ui.TagList(\n                ui.input_file(\"image\", \"Choose an image to upload:\", multiple=True),\n                ui.input_select(\"pattern\", \"Background pattern\", [\"Noise\", \"Circles\"]),\n            )\n        elif illusion in [\"Pareidolia\"]:\n            return ui.TagList(ui.input_text(\"stimulus\", \"Stimulus\", value=\"Hello\"))\n\n        # if (input.illusion() == \"Delboeuf\"):\n\n    @output\n    @render.plot\n    def plot():\n        if input.strength() is None or input.diff() is None:\n            return None\n\n        strength = input.strength()\n        diff = input.diff()\n        width = input[\".clientdata_output_plot_width\"]()\n        height = input[\".clientdata_output_plot_height\"]()\n\n        if input.illusion() == \"Delboeuf\":\n            img = pyllusion.Delboeuf(strength, diff)\n        elif input.illusion() == \"Ebbinghaus\":\n            img = pyllusion.Ebbinghaus(strength, diff)\n        elif input.illusion() == \"MullerLyer\":\n            img = pyllusion.MullerLyer(strength, diff)\n        elif input.illusion() == \"Ponzo\":\n            img = pyllusion.Ponzo(strength, diff)\n        elif input.illusion() == \"VerticalHorizontal\":\n            img = pyllusion.VerticalHorizontal(strength, diff)\n        elif input.illusion() == \"Zollner\":\n            img = pyllusion.Zollner(strength, diff)\n        elif input.illusion() == \"Poggendorff\":\n            img = pyllusion.Poggendorff(strength, diff)\n        elif input.illusion() == \"Contrast\":\n            img = pyllusion.Contrast(strength, diff)\n        elif input.illusion() == \"White\":\n            img = pyllusion.White(strength, diff)\n        elif input.illusion() == \"Autostereogram\":\n            stimulus = input.image()\n            if not stimulus:\n                return None\n\n            if input.pattern() == \"Circles\":\n                kwargs = {\n                    \"pattern\": pyllusion.image_circles,\n                    \"color\": \"blackwhite\",\n                    \"alpha\": 0.75,\n                    \"size_min\": 0.01,\n                    \"size_max\": 0.04,\n                    \"n\": 600,\n                }\n            else:\n                kwargs = {\n                    \"pattern\": pyllusion.image_noise,\n                    \"blackwhite\": True,\n                }\n\n            img = pyllusion.Autostereogram(stimulus=stimulus[0][\"datapath\"], **kwargs)\n            return img.draw(guide=True)\n        else:\n            return None\n\n        return img.to_image(width=width, height=height)\n\n\napp = App(app_ui, server)\n",
            "type": "text"
          },
          {
            "name": "requirements.txt",
            "content": "pyllusion\n",
            "type": "text"
          }
        ]
      },
      {
        "title": "Map",
        "about": "Interactive map with ipyleaflet",
        "files": [
          {
            "name": "app.py",
            "content": "from htmltools import css\nfrom shiny import App, reactive, render, ui\nfrom shinywidgets import output_widget, reactive_read, register_widget\n\nimport ipyleaflet as L\n\napp_ui = ui.page_fluid(\n    ui.div(\n        ui.input_slider(\"zoom\", \"Map zoom level\", value=12, min=1, max=18),\n        ui.output_ui(\"map_bounds\"),\n        style=css(\n            display=\"flex\", justify_content=\"center\", align_items=\"center\", gap=\"2rem\"\n        ),\n    ),\n    output_widget(\"map\"),\n)\n\n\ndef server(input, output, session):\n    # Initialize and display when the session starts (1)\n    map = L.Map(center=(51.476852, -0.000500), zoom=12, scroll_wheel_zoom=True)\n    # Add a distance scale\n    map.add_control(L.leaflet.ScaleControl(position=\"bottomleft\"))\n    register_widget(\"map\", map)\n\n    # When the slider changes, update the map's zoom attribute (2)\n    @reactive.Effect\n    def _():\n        map.zoom = input.zoom()\n\n    # When zooming directly on the map, update the slider's value (2 and 3)\n    @reactive.Effect\n    def _():\n        ui.update_slider(\"zoom\", value=reactive_read(map, \"zoom\"))\n\n    # Everytime the map's bounds change, update the output message (3)\n    @output\n    @render.ui\n    def map_bounds():\n        center = reactive_read(map, \"center\")\n        if len(center) == 0:\n            return\n\n        lat = round(center[0], 4)\n        lon = (center[1] + 180) % 360 - 180\n        lon = round(lon, 4)\n\n        return ui.p(f\"Latitude: {lat}\", ui.br(), f\"Longitude: {lon}\")\n\n\napp = App(app_ui, server)\n",
            "type": "text"
          }
        ]
      },
      {
        "title": "Camera",
        "about": "Use a phone camera for input",
        "files": [
          {
            "name": "app.py",
            "content": "# This app uses a phone or tablet's camera to take a picture and process it. It cannot\n# use a desktop computer's webcam. If opened on a desktop computer, it will open up an\n# ordinary file chooser dialog.\n#\n# This particular application uses some memory-intensive libraries, like skimage, and so\n# it may not work properly on all phones. However, the camera input part should still\n# work on most phones.\n\nimport numpy as np\nimport skimage\nfrom PIL import Image, ImageOps\n\nfrom shiny import App, render, ui\nfrom shiny.types import FileInfo, ImgData, SilentException\n\napp_ui = ui.page_fluid(\n    ui.input_file(\n        \"file\",\n        None,\n        button_label=\"Open camera\",\n        # This tells it to accept still photos only (not videos).\n        accept=\"image/*\",\n        # This tells it to use the phone's rear camera. Use \"user\" for the front camera.\n        capture=\"environment\",\n    ),\n    ui.output_image(\"image\"),\n)\n\n\ndef server(input, output, session):\n    @output\n    @render.image\n    async def image() -> ImgData:\n        file_infos: list[FileInfo] = input.file()\n        if not file_infos:\n            raise SilentException()\n\n        file_info = file_infos[0]\n        img = Image.open(file_info[\"datapath\"])\n\n        # Resize to 1000 pixels wide\n        basewidth = 1000\n        wpercent = basewidth / float(img.size[0])\n        hsize = int((float(img.size[1]) * float(wpercent)))\n        img = img.resize((basewidth, hsize), Image.ANTIALIAS)\n\n        # Convert to grayscale\n        img = ImageOps.grayscale(img)\n\n        # Rotate image based on EXIF tag\n        img = ImageOps.exif_transpose(img)\n\n        # Convert to numpy array for skimage processing\n        image_data = np.array(img)\n\n        # Apply thresholding\n        val = skimage.filters.threshold_otsu(image_data)\n        mask = image_data < val\n\n        # Save for render.image\n        skimage.io.imsave(\"small.png\", skimage.util.img_as_ubyte(mask))\n        return {\"src\": \"small.png\", \"width\": \"100%\"}\n\n\napp = App(app_ui, server)\n",
            "type": "text"
          }
        ]
      }
    ]
  },
  {
    "category": "Intermediate",
    "apps": [
      {
        "title": "Multiple source files",
        "about": "",
        "files": [
          {
            "name": "app.py",
            "content": "from shiny import App, render, ui\nfrom utils import square\n\napp_ui = ui.page_fluid(\n    ui.input_slider(\"n\", \"N\", 0, 100, 20),\n    ui.output_text_verbatim(\"txt\"),\n)\n\n\ndef server(input, output, session):\n    @output\n    @render.text\n    def txt():\n        val = square(input.n())\n        return f\"{input.n()} squared is {val}\"\n\n\napp = App(app_ui, server, debug=True)\n",
            "type": "text"
          },
          {
            "name": "utils.py",
            "content": "def square(n):\n    return n * n\n",
            "type": "text"
          }
        ]
      },
      {
        "title": "Read local CSV",
        "about": "Load a CSV file and display as an HTML table",
        "files": [
          {
            "name": "app.py",
            "content": "from pathlib import Path\nimport pandas\nfrom shiny import App, render, ui\n\napp_ui = ui.page_fluid(\n    ui.output_table(\"table\"),\n)\n\n\ndef server(input, output, session):\n    @output\n    @render.table\n    def table():\n        infile = Path(__file__).parent / \"mtcars.csv\"\n        df = pandas.read_csv(infile)\n        # Use the DataFrame's to_html() function to convert it to an HTML table, and\n        # then wrap with ui.HTML() so Shiny knows to treat it as raw HTML.\n        return df\n\n\napp = App(app_ui, server)\n",
            "type": "text"
          },
          {
            "name": "mtcars.csv",
            "content": "\"mpg\",\"cyl\",\"disp\",\"hp\",\"drat\",\"wt\",\"qsec\",\"vs\",\"am\",\"gear\",\"carb\"\n21,6,160,110,3.9,2.62,16.46,0,1,4,4\n21,6,160,110,3.9,2.875,17.02,0,1,4,4\n22.8,4,108,93,3.85,2.32,18.61,1,1,4,1\n21.4,6,258,110,3.08,3.215,19.44,1,0,3,1\n18.7,8,360,175,3.15,3.44,17.02,0,0,3,2\n18.1,6,225,105,2.76,3.46,20.22,1,0,3,1\n14.3,8,360,245,3.21,3.57,15.84,0,0,3,4\n24.4,4,146.7,62,3.69,3.19,20,1,0,4,2\n22.8,4,140.8,95,3.92,3.15,22.9,1,0,4,2\n19.2,6,167.6,123,3.92,3.44,18.3,1,0,4,4\n17.8,6,167.6,123,3.92,3.44,18.9,1,0,4,4\n16.4,8,275.8,180,3.07,4.07,17.4,0,0,3,3\n17.3,8,275.8,180,3.07,3.73,17.6,0,0,3,3\n15.2,8,275.8,180,3.07,3.78,18,0,0,3,3\n10.4,8,472,205,2.93,5.25,17.98,0,0,3,4\n10.4,8,460,215,3,5.424,17.82,0,0,3,4\n14.7,8,440,230,3.23,5.345,17.42,0,0,3,4\n32.4,4,78.7,66,4.08,2.2,19.47,1,1,4,1\n30.4,4,75.7,52,4.93,1.615,18.52,1,1,4,2\n33.9,4,71.1,65,4.22,1.835,19.9,1,1,4,1\n21.5,4,120.1,97,3.7,2.465,20.01,1,0,3,1\n15.5,8,318,150,2.76,3.52,16.87,0,0,3,2\n15.2,8,304,150,3.15,3.435,17.3,0,0,3,2\n13.3,8,350,245,3.73,3.84,15.41,0,0,3,4\n19.2,8,400,175,3.08,3.845,17.05,0,0,3,2\n27.3,4,79,66,4.08,1.935,18.9,1,1,4,1\n26,4,120.3,91,4.43,2.14,16.7,0,1,5,2\n30.4,4,95.1,113,3.77,1.513,16.9,1,1,5,2\n15.8,8,351,264,4.22,3.17,14.5,0,1,5,4\n19.7,6,145,175,3.62,2.77,15.5,0,1,5,6\n15,8,301,335,3.54,3.57,14.6,0,1,5,8\n21.4,4,121,109,4.11,2.78,18.6,1,1,4,2\n",
            "type": "text"
          },
          {
            "name": "requirements.txt",
            "content": "# Pandas needs Jinja2 for table styling, but it doesn't (yet) load automatically\n# in Pyodide, so we need to explicitly list it here.\nJinja2\n",
            "type": "text"
          }
        ]
      },
      {
        "title": "File upload",
        "about": "",
        "files": [
          {
            "name": "app.py",
            "content": "import mimetypes\nfrom math import ceil\nfrom typing import List\nfrom shiny import App, render, ui\n\napp_ui = ui.page_fluid(\n    ui.input_file(\"file1\", \"Choose a file to upload:\", multiple=True),\n    ui.input_radio_buttons(\"type\", \"Type:\", [\"Binary\", \"Text\"]),\n    ui.output_text_verbatim(\"file_content\"),\n)\n\n\ndef server(input, output, session):\n    MAX_SIZE = 50000\n\n    @output\n    @render.text\n    def file_content():\n        file_infos = input.file1()\n        if not file_infos:\n            return\n\n        # file_infos is a list of dicts; each dict represents one file. Example:\n        # [\n        #   {\n        #     'name': 'data.csv',\n        #     'size': 2601,\n        #     'type': 'text/csv',\n        #     'datapath': '/tmp/fileupload-1wnx_7c2/tmpga4x9mps/0.csv'\n        #   }\n        # ]\n        out_str = \"\"\n        for file_info in file_infos:\n            out_str += (\n                \"=\" * 47\n                + \"\\n\"\n                + file_info[\"name\"]\n                + \"\\nMIME type: \"\n                + str(mimetypes.guess_type(file_info[\"name\"])[0])\n            )\n            if file_info[\"size\"] > MAX_SIZE:\n                out_str += f\"\\nTruncating at {MAX_SIZE} bytes.\"\n\n            out_str += \"\\n\" + \"=\" * 47 + \"\\n\"\n\n            if input.type() == \"Text\":\n                with open(file_info[\"datapath\"], \"r\") as f:\n                    out_str += f.read(MAX_SIZE)\n            else:\n                with open(file_info[\"datapath\"], \"rb\") as f:\n                    data = f.read(MAX_SIZE)\n                    out_str += format_hexdump(data)\n\n        return out_str\n\n\ndef format_hexdump(data: bytes) -> str:\n    hex_vals = [\"{:02x}\".format(b) for b in data]\n    hex_vals = group_into_blocks(hex_vals, 16)\n    hex_vals = [\" \".join(row) for row in hex_vals]\n    hex_vals = \"\\n\".join(hex_vals)\n    return hex_vals\n\n\ndef group_into_blocks(x: List[str], blocksize: int):\n    \"\"\"\n    Given a list, return a list of lists, where the inner lists each have `blocksize`\n    elements.\n    \"\"\"\n    return [\n        x[i * blocksize : (i + 1) * blocksize] for i in range(ceil(len(x) / blocksize))\n    ]\n\n\napp = App(app_ui, server)\n",
            "type": "text"
          }
        ]
      },
      {
        "title": "File download",
        "about": "",
        "files": [
          {
            "name": "app.py",
            "content": "import asyncio\nimport io\nfrom datetime import date\nfrom pathlib import Path\n\nimport matplotlib.pyplot as plt\nimport numpy as np\nfrom shiny import App, ui\n\n\n# A card component wrapper.\ndef ui_card(title, *args):\n    return (\n        ui.div(\n            {\"class\": \"card mb-4\"},\n            ui.div(title, class_=\"card-header\"),\n            ui.div({\"class\": \"card-body\"}, *args),\n        ),\n    )\n\n\napp_ui = ui.page_fluid(\n    ui_card(\n        \"Download a pre-existing file, using its existing name on disk.\",\n        ui.download_button(\"download1\", \"Download CSV\"),\n    ),\n    ui_card(\n        \"Download a PNG that is generated dynamically.\",\n        ui.input_text(\"title\", \"Plot title\", \"Random scatter plot\"),\n        ui.input_slider(\"num_points\", \"Number of data points\", 1, 100, 50),\n        ui.download_button(\"download2\", \"Download PNG\"),\n    ),\n    ui_card(\n        \"Download a file with name that is generated dynamically.\",\n        ui.download_button(\"download3\", \"Download CSV\"),\n    ),\n)\n\n\ndef server(input, output, session):\n    @session.download()\n    def download1():\n        # This is the simplest case. The implementation simply returns the path to a\n        # file on disk.\n        path = Path(__file__).parent / \"mtcars.csv\"\n        return str(path)\n\n    @session.download(filename=\"image.png\")\n    def download2():\n        # Another way to implement a file download is by yielding bytes; either all at\n        # once, like in this case, or by yielding multiple times. When using this\n        # approach, you should pass a filename argument to @session.download, which\n        # determines what the browser will name the downloaded file.\n        x = np.random.uniform(size=input.num_points())\n        y = np.random.uniform(size=input.num_points())\n        plt.figure()\n        plt.scatter(x, y)\n        plt.title(input.title())\n        with io.BytesIO() as buf:\n            plt.savefig(buf, format=\"png\")\n            yield buf.getvalue()\n\n    @session.download(\n        filename=lambda: f\"data-{date.today().isoformat()}-{np.random.randint(100,999)}.csv\"\n    )\n    async def download3():\n        # This version uses a function to generate the filename. It also yields data\n        # multiple times.\n        await asyncio.sleep(0.25)\n        yield \"one,two,three\\n\"\n        yield \"新,1,2\\n\"\n        yield \"型,4,5\\n\"\n\n\napp = App(app_ui, server)\n",
            "type": "text"
          },
          {
            "name": "mtcars.csv",
            "content": "\"mpg\",\"cyl\",\"disp\",\"hp\",\"drat\",\"wt\",\"qsec\",\"vs\",\"am\",\"gear\",\"carb\"\n21,6,160,110,3.9,2.62,16.46,0,1,4,4\n21,6,160,110,3.9,2.875,17.02,0,1,4,4\n22.8,4,108,93,3.85,2.32,18.61,1,1,4,1\n21.4,6,258,110,3.08,3.215,19.44,1,0,3,1\n18.7,8,360,175,3.15,3.44,17.02,0,0,3,2\n18.1,6,225,105,2.76,3.46,20.22,1,0,3,1\n14.3,8,360,245,3.21,3.57,15.84,0,0,3,4\n24.4,4,146.7,62,3.69,3.19,20,1,0,4,2\n22.8,4,140.8,95,3.92,3.15,22.9,1,0,4,2\n19.2,6,167.6,123,3.92,3.44,18.3,1,0,4,4\n17.8,6,167.6,123,3.92,3.44,18.9,1,0,4,4\n16.4,8,275.8,180,3.07,4.07,17.4,0,0,3,3\n17.3,8,275.8,180,3.07,3.73,17.6,0,0,3,3\n15.2,8,275.8,180,3.07,3.78,18,0,0,3,3\n10.4,8,472,205,2.93,5.25,17.98,0,0,3,4\n10.4,8,460,215,3,5.424,17.82,0,0,3,4\n14.7,8,440,230,3.23,5.345,17.42,0,0,3,4\n32.4,4,78.7,66,4.08,2.2,19.47,1,1,4,1\n30.4,4,75.7,52,4.93,1.615,18.52,1,1,4,2\n33.9,4,71.1,65,4.22,1.835,19.9,1,1,4,1\n21.5,4,120.1,97,3.7,2.465,20.01,1,0,3,1\n15.5,8,318,150,2.76,3.52,16.87,0,0,3,2\n15.2,8,304,150,3.15,3.435,17.3,0,0,3,2\n13.3,8,350,245,3.73,3.84,15.41,0,0,3,4\n19.2,8,400,175,3.08,3.845,17.05,0,0,3,2\n27.3,4,79,66,4.08,1.935,18.9,1,1,4,1\n26,4,120.3,91,4.43,2.14,16.7,0,1,5,2\n30.4,4,95.1,113,3.77,1.513,16.9,1,1,5,2\n15.8,8,351,264,4.22,3.17,14.5,0,1,5,4\n19.7,6,145,175,3.62,2.77,15.5,0,1,5,6\n15,8,301,335,3.54,3.57,14.6,0,1,5,8\n21.4,4,121,109,4.11,2.78,18.6,1,1,4,2\n",
            "type": "text"
          }
        ]
      },
      {
        "title": "Dynamically inserting UI",
        "about": "",
        "files": [
          {
            "name": "app.py",
            "content": "from shiny import App, reactive, render, ui\n\n# For plot rendering\nimport matplotlib.pyplot as plt\nimport numpy as np\n\napp_ui = ui.page_fluid(\n    ui.layout_sidebar(\n        ui.panel_sidebar(\n            ui.h2(\"Dynamic UI\"),\n            ui.output_ui(\"ui\"),\n            ui.input_action_button(\"btn\", \"Trigger insert/remove ui\"),\n        ),\n        ui.panel_main(\n            ui.output_text_verbatim(\"txt\"),\n            ui.output_plot(\"plot\"),\n        ),\n    ),\n)\n\n\ndef server(input, output, session):\n    @reactive.Calc\n    def r():\n        return input.n() * 2\n\n    @output\n    @render.text\n    def txt():\n        return f\"n*2 is {r()}, session id is {session.id}\"\n\n    @output\n    @render.plot(alt=\"A histogram\")\n    def plot():\n        np.random.seed(19680801)\n        x = 100 + 15 * np.random.randn(437)\n\n        fig, ax = plt.subplots()\n        ax.hist(x, input.n(), density=True)\n        return fig\n\n    @output(id=\"ui\")\n    @render.ui\n    def _():\n        return ui.input_slider(\n            \"N\", \"This slider is rendered via @render.ui\", 0, 100, 20\n        )\n\n    @reactive.Effect\n    def _():\n        btn = input.btn()\n        if btn % 2 == 1:\n            ui.insert_ui(ui.tags.p(\"Thanks for clicking!\", id=\"thanks\"), \"body\")\n        elif btn > 0:\n            ui.remove_ui(\"#thanks\")\n\n\napp = App(app_ui, server, debug=True)\n",
            "type": "text"
          }
        ]
      },
      {
        "title": "Dynamically updating inputs",
        "about": "",
        "files": [
          {
            "name": "app.py",
            "content": "from datetime import date\n\nfrom shiny import App, reactive, ui\nfrom shiny.ui import tags, h2\n\napp_ui = ui.page_fluid(\n    ui.panel_title(\"Changing the values of inputs from the server\"),\n    ui.row(\n        ui.column(\n            4,\n            ui.panel_well(\n                tags.h4(\"These inputs control the other inputs on the page\"),\n                ui.input_text(\n                    \"control_label\", \"This controls some of the labels:\", \"LABEL TEXT\"\n                ),\n                ui.input_slider(\n                    \"control_num\", \"This controls values:\", min=1, max=20, value=15\n                ),\n            ),\n        ),\n        ui.column(\n            4,\n            ui.panel_well(\n                tags.h4(\"These inputs are controlled by the other inputs\"),\n                ui.input_text(\"inText\", \"Text input:\", value=\"start text\"),\n                ui.input_numeric(\n                    \"inNumber\", \"Number input:\", min=1, max=20, value=5, step=0.5\n                ),\n                ui.input_numeric(\n                    \"inNumber2\", \"Number input 2:\", min=1, max=20, value=5, step=0.5\n                ),\n                ui.input_slider(\"inSlider\", \"Slider input:\", min=1, max=20, value=15),\n                ui.input_slider(\n                    \"inSlider2\", \"Slider input 2:\", min=1, max=20, value=(5, 15)\n                ),\n                ui.input_slider(\n                    \"inSlider3\", \"Slider input 3:\", min=1, max=20, value=(5, 15)\n                ),\n                ui.input_date(\"inDate\", \"Date input:\"),\n                ui.input_date_range(\"inDateRange\", \"Date range input:\"),\n            ),\n        ),\n        ui.column(\n            4,\n            ui.panel_well(\n                ui.input_checkbox(\"inCheckbox\", \"Checkbox input\", value=False),\n                ui.input_checkbox_group(\n                    \"inCheckboxGroup\",\n                    \"Checkbox group input:\",\n                    {\n                        \"option1\": \"label 1\",\n                        \"option2\": \"label 2\",\n                    },\n                ),\n                ui.input_radio_buttons(\n                    \"inRadio\",\n                    \"Radio buttons:\",\n                    {\n                        \"option1\": \"label 1\",\n                        \"option2\": \"label 2\",\n                    },\n                ),\n                ui.input_select(\n                    \"inSelect\",\n                    \"Select input:\",\n                    {\n                        \"option1\": \"label 1\",\n                        \"option2\": \"label 2\",\n                    },\n                ),\n                ui.input_select(\n                    \"inSelect2\",\n                    \"Select input 2:\",\n                    {\n                        \"option1\": \"label 1\",\n                        \"option2\": \"label 2\",\n                    },\n                    multiple=True,\n                ),\n            ),\n            ui.navset_tab(\n                ui.nav(\"panel1\", h2(\"This is the first panel.\")),\n                ui.nav(\"panel2\", h2(\"This is the second panel.\")),\n                id=\"inTabset\",\n            ),\n        ),\n    ),\n)\n\n\ndef server(input, output, session):\n    @reactive.Effect\n    def _():\n        # We'll use these multiple times, so use short var names for\n        # convenience.\n        c_label = input.control_label()\n        c_num = input.control_num()\n\n        # Text =====================================================\n        # Change both the label and the text\n        ui.update_text(\n            \"inText\",\n            label=\"New \" + c_label,\n            value=\"New text \" + str(c_num),\n        )\n\n        # Number ===================================================\n        # Change the value\n        ui.update_numeric(\"inNumber\", value=c_num)\n\n        # Change the label, value, min, and max\n        ui.update_numeric(\n            \"inNumber2\",\n            label=\"Number \" + c_label,\n            value=c_num,\n            min=c_num - 10,\n            max=c_num + 10,\n            step=5,\n        )\n\n        # Slider input =============================================\n        # Only label and value can be set for slider\n        ui.update_slider(\"inSlider\", label=\"Slider \" + c_label, value=c_num)\n\n        # Slider range input =======================================\n        # For sliders that pick out a range, pass in a vector of 2\n        # values.\n        ui.update_slider(\"inSlider2\", value=(c_num - 1, c_num + 1))\n\n        # Only change the upper handle\n        ui.update_slider(\"inSlider3\", value=(input.inSlider3()[0], c_num + 2))\n\n        # Date input ===============================================\n        # Only label and value can be set for date input\n        ui.update_date(\"inDate\", label=\"Date \" + c_label, value=date(2013, 4, c_num))\n\n        # Date range input =========================================\n        # Only label and value can be set for date range input\n        ui.update_date_range(\n            \"inDateRange\",\n            label=\"Date range \" + c_label,\n            start=date(2013, 1, c_num),\n            end=date(2013, 12, c_num),\n            min=date(2001, 1, c_num),\n            max=date(2030, 1, c_num),\n        )\n\n        # # Checkbox ===============================================\n        ui.update_checkbox(\"inCheckbox\", value=c_num % 2)\n\n        # Checkbox group ===========================================\n        # Create a list of new options, where the name of the items\n        # is something like 'option label x A', and the values are\n        # 'option-x-A'.\n        opt_labels = [f\"option label {c_num} {type}\" for type in [\"A\", \"B\"]]\n        opt_vals = [f\"option-{c_num}-{type}\" for type in [\"A\", \"B\"]]\n        opts_dict = dict(zip(opt_vals, opt_labels))\n\n        # Set the label, choices, and selected item\n        ui.update_checkbox_group(\n            \"inCheckboxGroup\",\n            label=\"Checkbox group \" + c_label,\n            choices=opts_dict,\n            selected=f\"option-{c_num}-A\",\n        )\n\n        # Radio group ==============================================\n        ui.update_radio_buttons(\n            \"inRadio\",\n            label=\"Radio \" + c_label,\n            choices=opts_dict,\n            selected=f\"option-{c_num}-A\",\n        )\n        # Select input =============================================\n        # Create a list of new options, where the name of the items\n        # is something like 'option label x A', and the values are\n        # 'option-x-A'.\n        ui.update_select(\n            \"inSelect\",\n            label=\"Select \" + c_label,\n            choices=opts_dict,\n            selected=f\"option-{c_num}-A\",\n        )\n\n        # Can also set the label and select an item (or more than\n        # one if it's a multi-select)\n        ui.update_select(\n            \"inSelect2\",\n            label=\"Select label \" + c_label,\n            choices=opts_dict,\n            selected=f\"option-{c_num}-B\",\n        )\n\n        # Tabset input =============================================\n        # Change the selected tab.\n        # The tabsetPanel must have been created with an 'id' argument\n        ui.update_navs(\"inTabset\", selected=\"panel2\" if c_num % 2 else \"panel1\")\n\n\napp = App(app_ui, server, debug=True)\n",
            "type": "text"
          }
        ]
      },
      {
        "title": "Modules",
        "about": "Reusable Shiny components",
        "files": [
          {
            "name": "app.py",
            "content": "from shiny import App, Inputs, Outputs, Session, module, reactive, render, ui\n\n\n# ============================================================\n# Counter module\n# ============================================================\n@module.ui\ndef counter_ui(label: str = \"Increment counter\") -> ui.TagChildArg:\n    return ui.div(\n        {\"style\": \"border: 1px solid #ccc; border-radius: 5px; margin: 5px 0;\"},\n        ui.h2(\"This is \" + label),\n        ui.input_action_button(id=\"button\", label=label),\n        ui.output_text_verbatim(id=\"out\"),\n    )\n\n\n@module.server\ndef counter_server(\n    input: Inputs, output: Outputs, session: Session, starting_value: int = 0\n):\n    count: reactive.Value[int] = reactive.Value(starting_value)\n\n    @reactive.Effect\n    @reactive.event(input.button)\n    def _():\n        count.set(count() + 1)\n\n    @output\n    @render.text\n    def out() -> str:\n        return f\"Click count is {count()}\"\n\n\n# =============================================================================\n# App that uses module\n# =============================================================================\napp_ui = ui.page_fluid(\n    counter_ui(\"counter1\", \"Counter 1\"),\n    counter_ui(\"counter2\", \"Counter 2\"),\n)\n\n\ndef server(input: Inputs, output: Outputs, session: Session):\n    counter_server(\"counter1\")\n    counter_server(\"counter2\")\n\n\napp = App(app_ui, server)\n",
            "type": "text"
          }
        ]
      },
      {
        "title": "Extra packages",
        "about": "Install extra packages from requirements.txt",
        "files": [
          {
            "name": "app.py",
            "content": "from shiny import App, ui\n\nimport isodate\nimport attrs\nimport tabulate\n\napp_ui = ui.page_fluid(\n    ui.markdown(\n        \"\"\"\n        This application doesn't actually do anything -- it simply demonstrates how to\n        import extra packages from PyPI, by using a `requirements.txt` file.\n\n        Packages listed in `requirements.txt` will be installed by micropip just before\n        the app is started. This means that each time someone visits the app, the\n        packages will be downloaded and installed into the browser's Pyodide\n        environment.\n\n        If you want test whether a package can be installed this way, either edit\n        `requirements.txt` and reload this app, or try running this in the terminal:\n\n        ```\n        import micropip\n        micropip.install(\"mypackage\")\n        import mypackage\n        ```\n        \"\"\"\n    ),\n)\n\napp = App(app_ui, None)\n",
            "type": "text"
          },
          {
            "name": "requirements.txt",
            "content": "# Packages listed in this file will be installed by micropip just before the app\n# is started. This means that each time someone visits the app, the packages\n# will be downloaded and installed into the browser's Pyodide environment.\n#\n# Each line must contain either a requirements specification or the URL for a\n# wheel file.\nisodate\nattrs==21.4.0\nhttps://files.pythonhosted.org/packages/ca/80/7c0cad11bd99985cfe7c09427ee0b4f9bd6b048bd13d4ffb32c6db237dfb/tabulate-0.8.9-py3-none-any.whl\n",
            "type": "text"
          }
        ]
      },
      {
        "title": "Static content",
        "about": "Serve files from a subdirectory",
        "files": [
          {
            "name": "app.py",
            "content": "from pathlib import Path\nfrom shiny import App, render, ui\n\napp_ui = ui.page_fluid(\n    ui.row(\n        ui.column(\n            6, ui.input_slider(\"n\", \"Make a Shiny square:\", min=0, max=6, value=2)\n        ),\n        ui.column(\n            6,\n            ui.output_ui(\"images\"),\n        ),\n    )\n)\n\n\ndef square(x: ui.TagChildArg, n: int) -> ui.Tag:\n    row = ui.div([x] * n)\n    return ui.div([row] * n)\n\n\ndef server(input, output, session):\n    @output\n    @render.ui\n    def images() -> ui.Tag:\n        img = ui.img(src=\"logo.png\", style=\"width: 40px;\")\n        return square(img, input.n())\n\n\nwww_dir = Path(__file__).parent / \"www\"\napp = App(app_ui, server, static_assets=www_dir)\n",
            "type": "text"
          },
          {
            "name": "www/logo.png",
            "content": "iVBORw0KGgoAAAANSUhEUgAAACgAAAAuCAYAAABap1twAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAhGVYSWZNTQAqAAAACAAFARIAAwAAAAEAAQAAARoABQAAAAEAAABKARsABQAAAAEAAABSASgAAwAAAAEAAgAAh2kABAAAAAEAAABaAAAAAAAAANgAAAABAAAA2AAAAAEAA6ABAAMAAAABAAEAAKACAAQAAAABAAAAKKADAAQAAAABAAAALgAAAAC4n/brAAAACXBIWXMAACE4AAAhOAFFljFgAAACzGlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNi4wLjAiPgogICA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogICAgICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgICAgICAgICB4bWxuczp0aWZmPSJodHRwOi8vbnMuYWRvYmUuY29tL3RpZmYvMS4wLyIKICAgICAgICAgICAgeG1sbnM6ZXhpZj0iaHR0cDovL25zLmFkb2JlLmNvbS9leGlmLzEuMC8iPgogICAgICAgICA8dGlmZjpZUmVzb2x1dGlvbj4yMTY8L3RpZmY6WVJlc29sdXRpb24+CiAgICAgICAgIDx0aWZmOlJlc29sdXRpb25Vbml0PjI8L3RpZmY6UmVzb2x1dGlvblVuaXQ+CiAgICAgICAgIDx0aWZmOlhSZXNvbHV0aW9uPjIxNjwvdGlmZjpYUmVzb2x1dGlvbj4KICAgICAgICAgPHRpZmY6T3JpZW50YXRpb24+MTwvdGlmZjpPcmllbnRhdGlvbj4KICAgICAgICAgPGV4aWY6UGl4ZWxYRGltZW5zaW9uPjEzODwvZXhpZjpQaXhlbFhEaW1lbnNpb24+CiAgICAgICAgIDxleGlmOkNvbG9yU3BhY2U+MTwvZXhpZjpDb2xvclNwYWNlPgogICAgICAgICA8ZXhpZjpQaXhlbFlEaW1lbnNpb24+MTYwPC9leGlmOlBpeGVsWURpbWVuc2lvbj4KICAgICAgPC9yZGY6RGVzY3JpcHRpb24+CiAgIDwvcmRmOlJERj4KPC94OnhtcG1ldGE+CnBoIjkAAAxoSURBVFjDvVkJUFXnFX4xSZOmnWaSbjNN0k6XadM0y6TKezxkkU1BVIwRY0zaJjPN0maaiQIPeCw+lbiCCC4YSYymRtlliUhcMAqyPXYFF1ziLuKKSPQ94PT7/ndRIEpcSJk5c++79//P+f5zvvP99150unv4G2HZ9kDPuXtkzlOGsIwM57DMLFdL/q97rg99+6MHdf/vv6D09Pt1FssQDeTDxojsmGHBqR3O5lyhDQte942LOcsy1JL/iJogcp+a873/AVTvrLmac6boQ9MO6yNyxSM6TyYmldsnLq6w85zXnELTjriYc1/vk3GLDBl8YMhA71K5ROQb9aaMHfrw9eIamSuB8TtsU1Lqu19LaRDalJSG7sD4YptrZI7ow3PEEJpe4hadO7xP2eFzULD155mzKXOVU2i6GM054jd7i/2V5bWdU1J2yeTldYJzZTwHSHklubbLb84WO8c6hWaIITzrs9787O37nnjmn1TwkHNYVtSwkNQr5JjXjILul5dY7a+u2AVAdTIpuVYde1vPtVdXNAjHcg7nOoGrxrDsGHK3hzZ3xs9+PHMxZ0/Wh6YfNMC5exTKmVBqm7S8XiYh+MRlNRK0rFaCkm9huMcxHMs5gQllNveoPKEvcheZndKXn5Yht80z14gcA3j2lQE8G44S+c/fbpuYXNsdlFwvLy+t0az2Ns0xnnMnJtd109dwgoRvA7hMTg/Iz94ZM0bmP2EIy1rp4Fmu+MRusr+0pLpzIpxPWFIjOJcJCHY3pubCB33Rp0/sZo2f6QINXU2OfxuTltahH1U9CJ6Z9cGpl8kVj5gN3WMXVdgnLKOzGhm/uFrG8zgYBl/0OWFZnYxdVGlnLMXPkNR2ZDTa/z8FD/XGpoP6TzKY0ps5iLLhH7fTNn5pXTedBSZVy7jFDgvsZyzbxKUMWHPT+wPZuCSHBSrQtSomYzuboaEmcD4se7IDnCljozEyT4wROeI6c6tt1MKqrkBMGJtYJWNgCgic0OhwLGwM7CWAcppfKc/OrRDfhKrr9+7YEIPGmL4Lrd1us4psxEJMwLZFp3doWpfXgopO7/gq8ZxfIaPirRKQiJLCgc/CKnl8Vrn8fnaFjF7kAMLrzwPY4g3Nsn1Xi7z/aYOMwJxxiQxYrbIesAgLSbx9GxlfqWITA7EYI3I70Qui009bd9k1ptBxAwO8FlTKCGQmIMEqQ+dVyBsf1cra7V/Lii8PqpV6xFXKCwCX9MV+2X+yTbbWncK9A/JUbDmyWg0/VhmGeQFYjD+Mi/JPcNjoRTeMvnjkuLEwb8RlbC8NpOv0Qhk27XObzil4XcfwmAJe7AZyNYgZ/MOsMrGkNsrB0+1SWH1SGo9elGPnOiTi893yBMDwfN2OI5JfeUKmrt4lrpjng3lvYkHTU5sEVJHAxGoFgBnnuZ8GlNec5lXKyIVW8caC75teKk5zKsQnTstiXJUQEwB2aQA3qosEyJXQXpxdLkfOXJFNNSdF91aRBK9ukCu2bolau1vmZ++VUxeuyorCA1JYdVJ+icW8DBCPziyTjJIj0nD4guhidsoLCOqMbOpmlMqTsWXiiwUQlBMqEPrZLgkEUF+AWl7QLB+srJehc8rFl/EVwI03Aaj4Vyl/grOINbsUoGXgGYO9kVwjM9OaRBdRIlX7z0ntwfOSX35cpqCLn/mwXJWJxyB2Kco3fV2jJOXvl3dS6mRzzSnZWHVCjfktFlPSeEaajl4SXeROKao7LefabfIaNNII4CPjBgK4wDHgOQSaCuJf7OiUfcfbZDwcD8Pqngbwl3DOzDJLhQjK1f8TZX0EWUrI3ScHTl6WAGRpS+0pudopkg4aFKOR2rFY+olGBb7B9dkZTfJDS6mcabsmWzGWYMeC9y4A6RM/QInJQYL8PVZase+sXOsWqT90QV3/MwB+mN6kgLPE5Xta5VqXyMdoEp25RI6Dl7uPXBRd8A61gBPnv0HgEpVBLkoXWixF9aflxDlcj9op8ev3qipxYbroneIMcEFJVTJigVVcb5VBTwAZjQwYMJhlPdJ6Ra14M7k4bYesLz2mQLH0LGMb0vTex3US9t9d0mHvlvlZe2QcMnEJk1LR/brwYjmJxRDkw8jY2cs22d7QohaxF9VheZk5KgcXxWzrZpSLt+UmANlBJO0z6FI2yhMzHZ1Mp+ev2OVNACb3DrcgGx9sl+LdLY4shRXLtnoHlx4AiC/R9e1YxVso/WtLq1XGZ6U1KsBImGTtPCqrNh9SYypRpcngLcvM+Wu3HRadBfFnFPYF6BVnVaUluFiU8d0VdQokG2QDpITZId+Oozx5ZcdEZyqWY2c7FNdGYR5B1Bw4L+HIJBdzuKVdnsQCybW2q13SfOKyZJUcFSsarOXSNclFJThmz7FLsqbosKpI+d5WZBJVRLK+VWIS032eo0nIpTmZe+QXM8oUN1IgJxcQdCnEmcFnIKsecESC02kuADeCe8xIzYFzcrS1A0DOKuL/G+X/GhkvbWpFuUtk9dZDiqdFEHjSYN1XXyvecX4IpIz667fwJl3sC4AeWonZAHRCwK8g/Ycg1izP+tKjKhuB4AyzS34ySAw6k6ApPyzrOytq5e94UHWHP3Ylu5o0WLXlkOIfOUr/+5FVyhbBLcHimQyO9bqZzLDELBW1jMFIWOrcWqxwqTaZTlhmBtVDhE2fNagGIVfZVBxDORoKkWdHchHcHRiU3NwJ/SNv2fX0//4n9YoWn246qLp9DMbd2Em+o0l02H7Y0c8D8KNwzsnUQcoPu5y/CcIVWR6H7Yu/qXMEQ/PHrkFwHuhOF4z5HebRV2LePknK2y8JOfuUxn66uRc4tR9XDCzUntpePEYLQgkYrYHhVkTwDwIwF/AjHH+snfe3n4O/FHwf+GMnm7C1LYLekXN1UALSIw46SD28AW4AgCyxN24SFLc7gvmBFpzg/oYtjR1Kcf0EJSInc9AcBejwTZAVykwZhJsla1T8alNdyk4np09fvKokiV3Lbmacx7D7BPQBNwBAH1w0zi1XPLofwEj0leDGDggnBZXOqVOUEzaKwzqV/FDbeGxts0kztrqKvWelwHpCyUciyklB/xf2ZD+AUhlGDDYQf/cFdwuAbvjhge3ldWzYdMpVEgw7tA1GUOfa7UqwCaLl4jX1m9cJKK/8GB4kGmVCouNhgABYOmroT7BYSsdf0Tju4CNBkTI+3wL2HQBd5lvFBB3KLMbmvvuMkhYHMJsS1laAI0BqH0HzfjI62lOJealqguHzHE02WmsUHv0UZazq+q1BfVeJowtQYquSh57VMzABkEcsJ4EpcDgn1xiQVKDTAA0Ir/U8GXtq5nXH1u+B1fHI7+hiH9wcra2cg8kX7iwEdEkrNbeqxwCM8kJg3ncN5BbW88jPDAavvabDe6h6o8NNu0NqtMduLTMEQqAUWZb7VfDUCR3uf1OC34s5HvU0ues0mnO7nMOz8dJkykhz1l7z3GO32bzjrF3XNVF7w+OuwScOblXUtlHfAzjGhHURg3rlBCZ9aEa2ejc2mHN99aFptfzU4RKZLx5zim3qJSrOen134Y7wLMDx3HMQy6n0F7EYk7GJwRCaXm8Mz/ZzfGYLuvHpCyl9Vx+S1mLEQJeoDeI5t9TueE+tVCJOPt4LIN+4XsC0cnrOK7MPj94gjKkPSW01hGW/d/0TYA+2Pp91w794zDksMx7d3cVJbpYvO9VLvcbPHq7ciY3Uss43xRG9Xs7dLJs6GQOxuvGSnmC0FD4+0MfNPp/fDBE5zxjCMnKcw7PU6hz8rOrq/e5yuxl7AdRgs/Gt0LymsetFS5HNNSpf2AT60Mw8F3P2s33/KzDQ52GLZUhvoM5h6/0NprQ6xc+ovvzsKVV/89ayxt2Di5m2qkHmZu3rtqyptY2I+UJ9IDKY0htcwrICbv8DZv9PwKh/b34awQ19aOoZZpOcIXd6+NkbKIFxS2M5/4GH1sS8ZknMabKPiy2U34TkyNCQdWddIrLfv1Wce/qITo6QK+SMg5+b+vDTE9n6y4dlSj+j1jbimW9v59tJX3X+CsCem7pWPCKykkZY8n82KB/RB+InOQP9zCeH+vLTikey3bI4v7lrWkq57WlTrvwxOFPcwjM3eFtyn799ng3SP3LIIWhWgwuEdRh4NT6u1A6e2T3BsydD1ouLKX23V0zO2Lvm2V3/i6Ifb5zBKQj9WT1APkWeBaee8zRnT+35GH7PPBsMfir9NGWkuIVlrPSenf3TweLZ/wCcqWM7JqSdpQAAAABJRU5ErkJggg==",
            "type": "binary"
          }
        ]
      },
      {
        "title": "Fetch data from a web API",
        "about": "",
        "files": [
          {
            "name": "app.py",
            "content": "# Normally in Python, you would use urllib.request.urlopen() to fetch data from a web\n# API. However, it won't work in Pyodide because sockets are not available.\n#\n# Instead, you can pyodide.http.pyfetch(), which is a wrapper for the JavaScript fetch()\n# function. Note that when running shinylive, the endpoint MUST use https. This is\n# because shinylive must be served over https (unless you are running on localhost),\n# and browsers will not allow a https page to fetch data with http.\n#\n# One important difference between urllib.request.urlopen() and pyodide.http.pyfetch()\n# is that the latter is asynchronous. In a Shiny app, this just means that the\n# reactive.Calc's and outputs must have `async` in front of the function definitions,\n# and when they're called, they must have `await` in front of them.\n#\n# If you want to write code that works in both regular Python and Pyodide, see the\n# download.py file for a wrapper function that can be used to make requests in both\n# regular Python and Pyodide. (Note that the function isn't actually used in this app.)\n\nfrom pprint import pformat\nimport pyodide.http\nfrom shiny import App, reactive, render, ui\n\napp_ui = ui.page_fluid(\n    ui.input_selectize(\n        \"city\",\n        \"Select a city:\",\n        [\n            \"\",\n            \"Berlin\",\n            \"Cairo\",\n            \"Chicago\",\n            \"Kyiv\",\n            \"London\",\n            \"Lima\",\n            \"Los Angeles\",\n            \"Mexico City\",\n            \"Mumbai\",\n            \"New York\",\n            \"Paris\",\n            \"São Paulo\",\n            \"Seoul\",\n            \"Shanghai\",\n            \"Taipei\",\n            \"Tokyo\",\n        ],\n    ),\n    ui.input_radio_buttons(\n        \"data_type\",\n        \"Data conversion type\",\n        {\n            \"json\": \"Parse JSON and return dict/list\",\n            \"string\": \"String\",\n            \"bytes\": \"Byte object\",\n        },\n    ),\n    ui.output_text_verbatim(\"info\"),\n)\n\n\ndef server(input, output, session):\n    # Weather data API: https://github.com/robertoduessmann/weather-api\n    @reactive.Calc\n    def url():\n        return f\"https://goweather.herokuapp.com/weather/{input.city()}\"\n\n    @reactive.Calc\n    async def weather_data():\n        if input.city() == \"\":\n            return\n\n        response = await pyodide.http.pyfetch(url())\n        if response.status != 200:\n            raise Exception(f\"Error fetching {url()}: {response.status}\")\n\n        if input.data_type() == \"json\":\n            # .json() parses the response as JSON and converts to dictionary.\n            data = await response.json()\n        elif input.data_type() == \"string\":\n            # .string() returns the response as a string.\n            data = await response.string()\n        else:\n            # .bytes() returns the response as a byte object.\n            data = await response.bytes()\n\n        return data\n\n    @output\n    @render.text\n    async def info():\n        if input.city() == \"\":\n            return \"\"\n\n        data = await weather_data()\n        if isinstance(data, (str, bytes)):\n            data_str = data\n        else:\n            data_str = pformat(data)\n        return f\"Request URL: {url()}\\nResult type: {type(data)}\\n{data_str}\"\n\n\napp = App(app_ui, server)\n",
            "type": "text"
          },
          {
            "name": "download.py",
            "content": "import json\nfrom typing import Any, Literal\n\n\nclass HttpResponse:\n    def __init__(self, status: int, data: Any):\n        self.status = status\n        self.data = data\n\n\nasync def get_url(\n    url: str, type: Literal[\"string\", \"bytes\", \"json\"] = \"string\"\n) -> HttpResponse:\n    \"\"\"\n    An async wrapper function for http requests that works in both regular Python and\n    Pyodide.\n\n    In Pyodide, it uses the pyodide.http.pyfetch() function, which is a wrapper for the\n    JavaScript fetch() function. pyfetch() is asynchronous, so this whole function must\n    also be async.\n\n    In regular Python, it uses the urllib.request.urlopen() function.\n\n    Args:\n        url: The URL to download.\n\n        type: How to parse the content. If \"string\", it returns the response as a\n        string. If \"bytes\", it returns the response as a bytes object. If \"json\", it\n        parses the reponse as JSON, then converts it to a Python object, usually a\n        dictionary or list.\n\n    Returns:\n        A HttpResponse object\n    \"\"\"\n    import sys\n\n    if \"pyodide\" in sys.modules:\n        import pyodide.http\n\n        response = await pyodide.http.pyfetch(url)\n\n        if type == \"json\":\n            # .json() parses the response as JSON and converts to dictionary.\n            data = await response.json()\n        elif type == \"string\":\n            # .string() returns the response as a string.\n            data = await response.string()\n        elif type == \"bytes\":\n            # .bytes() returns the response as a byte object.\n            data = await response.bytes()\n\n        return HttpResponse(response.status, data)\n\n    else:\n        import urllib.request\n\n        response = urllib.request.urlopen(url)\n        if type == \"json\":\n            data = json.loads(response.read().decode(\"utf-8\"))\n        elif type == \"string\":\n            data = response.read().decode(\"utf-8\")\n        elif type == \"bytes\":\n            data = response.read()\n\n        return HttpResponse(response.status, data)\n",
            "type": "text"
          }
        ]
      },
      {
        "title": "ipywidgets",
        "about": "Basic use of ipywidgets",
        "files": [
          {
            "name": "app.py",
            "content": "from shiny import App, render, ui\nfrom shinywidgets import output_widget, reactive_read, render_widget\nimport ipywidgets as ipy\nfrom ipywidgets.widgets.widget import Widget\n\napp_ui = ui.page_fluid(output_widget(\"slider\", height=\"50px\"), ui.output_text(\"value\"))\n\n\ndef server(input, output, session):\n    s = ipy.IntSlider(\n        value=5,\n        min=0,\n        max=10,\n        step=1,\n        description=\"Test:\",\n        continuous_update=True,\n        orientation=\"horizontal\",\n        readout=False,\n    )\n\n    @output\n    @render_widget\n    def slider():\n        return s\n\n    @output\n    @render.text\n    def value():\n        return f\"The value of the slider is: {reactive_read(s, 'value')}\"\n\n\napp = App(app_ui, server, debug=True)\n",
            "type": "text"
          }
        ]
      }
    ]
  },
  {
    "category": "Inputs",
    "apps": [
      {
        "title": "Text input",
        "about": "",
        "files": [
          {
            "name": "app.py",
            "content": "from shiny import App, render, ui\n\napp_ui = ui.page_fluid(\n    ui.input_text(\"x\", \"Text input\", placeholder=\"Enter text\"),\n    ui.output_text_verbatim(\"txt\"),\n)\n\n\ndef server(input, output, session):\n    @output\n    @render.text\n    def txt():\n        return f'x: \"{input.x()}\"'\n\n\napp = App(app_ui, server, debug=True)\n",
            "type": "text"
          }
        ]
      },
      {
        "title": "Numeric input",
        "about": "",
        "files": [
          {
            "name": "app.py",
            "content": "from shiny import App, render, ui\n\napp_ui = ui.page_fluid(\n    ui.input_numeric(\"x\", \"Number input\", value=100),\n    ui.output_text_verbatim(\"txt\"),\n)\n\n\ndef server(input, output, session):\n    @output\n    @render.text\n    def txt():\n        return f\"x: {input.x()}\"\n\n\napp = App(app_ui, server, debug=True)\n",
            "type": "text"
          }
        ]
      },
      {
        "title": "Slider input",
        "about": "",
        "files": [
          {
            "name": "app.py",
            "content": "from shiny import App, render, ui\n\napp_ui = ui.page_fluid(\n    ui.input_slider(\"x\", \"Slider input\", min=0, max=20, value=10),\n    ui.output_text_verbatim(\"txt\"),\n)\n\n\ndef server(input, output, session):\n    @output\n    @render.text\n    def txt():\n        return f\"x: {input.x()}\"\n\n\napp = App(app_ui, server, debug=True)\n",
            "type": "text"
          }
        ]
      },
      {
        "title": "Checkbox input",
        "about": "",
        "files": [
          {
            "name": "app.py",
            "content": "from shiny import App, render, ui\n\napp_ui = ui.page_fluid(\n    ui.input_checkbox(\"x\", \"Checkbox input\"),\n    ui.output_text_verbatim(\"txt\"),\n)\n\n\ndef server(input, output, session):\n    @output\n    @render.text\n    def txt():\n        return f\"x: {input.x()}\"\n\n\napp = App(app_ui, server, debug=True)\n",
            "type": "text"
          }
        ]
      },
      {
        "title": "Checkbox group input",
        "about": "",
        "files": [
          {
            "name": "app.py",
            "content": "from shiny import App, render, ui\n\napp_ui = ui.page_fluid(\n    ui.input_checkbox_group(\n        \"x\", \"Checkbox group input\", {\"a\": \"Choice A\", \"b\": \"Choice B\"}\n    ),\n    ui.output_text_verbatim(\"txt\"),\n)\n\n\ndef server(input, output, session):\n    @output\n    @render.text\n    def txt():\n        return f\"x: {input.x()}\"\n\n\napp = App(app_ui, server, debug=True)\n",
            "type": "text"
          }
        ]
      },
      {
        "title": "Select input",
        "about": "",
        "files": [
          {
            "name": "app.py",
            "content": "from shiny import App, render, ui\n\napp_ui = ui.page_fluid(\n    ui.input_select(\"x\", \"Select input\", {\"a\": \"Choice A\", \"b\": \"Choice B\"}),\n    ui.output_text_verbatim(\"txt\"),\n)\n\n\ndef server(input, output, session):\n    @output\n    @render.text\n    def txt():\n        return f'x: \"{input.x()}\"'\n\n\napp = App(app_ui, server, debug=True)\n",
            "type": "text"
          }
        ]
      },
      {
        "title": "Radio buttons input",
        "about": "",
        "files": [
          {
            "name": "app.py",
            "content": "from shiny import App, render, ui\n\napp_ui = ui.page_fluid(\n    ui.input_radio_buttons(\n        \"x\", \"Radio buttons input\", {\"a\": \"Choice A\", \"b\": \"Choice B\"}\n    ),\n    ui.output_text_verbatim(\"txt\"),\n)\n\n\ndef server(input, output, session):\n    @output\n    @render.text\n    def txt():\n        return f'x: \"{input.x()}\"'\n\n\napp = App(app_ui, server, debug=True)\n",
            "type": "text"
          }
        ]
      },
      {
        "title": "Text area input",
        "about": "",
        "files": [
          {
            "name": "app.py",
            "content": "from shiny import App, render, ui\n\napp_ui = ui.page_fluid(\n    ui.input_text_area(\"x\", \"Text area input\", placeholder=\"Enter text\"),\n    ui.output_text_verbatim(\"txt\"),\n)\n\n\ndef server(input, output, session):\n    @output\n    @render.text\n    def txt():\n        return f'x: \"{input.x()}\"'\n\n\napp = App(app_ui, server, debug=True)\n",
            "type": "text"
          }
        ]
      },
      {
        "title": "Date input",
        "about": "",
        "files": [
          {
            "name": "app.py",
            "content": "from shiny import App, render, ui\n\napp_ui = ui.page_fluid(\n    ui.input_date(\"x\", \"Date input\"),\n    ui.output_text_verbatim(\"txt\"),\n)\n\n\ndef server(input, output, session):\n    @output\n    @render.text\n    def txt():\n        return f\"x: {input.x()}\"\n\n\napp = App(app_ui, server, debug=True)\n",
            "type": "text"
          }
        ]
      },
      {
        "title": "Date range input",
        "about": "",
        "files": [
          {
            "name": "app.py",
            "content": "from shiny import App, render, ui\n\napp_ui = ui.page_fluid(\n    ui.input_date_range(\"x\", \"Date range input\"),\n    ui.output_text_verbatim(\"txt\"),\n)\n\n\ndef server(input, output, session):\n    @output\n    @render.text\n    def txt():\n        return f\"x: {input.x()}\"\n\n\napp = App(app_ui, server, debug=True)\n",
            "type": "text"
          }
        ]
      },
      {
        "title": "Password input",
        "about": "",
        "files": [
          {
            "name": "app.py",
            "content": "from shiny import App, render, ui\n\napp_ui = ui.page_fluid(\n    ui.input_password(\"x\", \"Password input\", placeholder=\"Enter password\"),\n    ui.output_text_verbatim(\"txt\"),\n)\n\n\ndef server(input, output, session):\n    @output\n    @render.text\n    def txt():\n        return f'x: \"{input.x()}\"'\n\n\napp = App(app_ui, server, debug=True)\n",
            "type": "text"
          }
        ]
      }
    ]
  },
  {
    "category": "Outputs",
    "apps": [
      {
        "title": "Text output",
        "about": "",
        "files": [
          {
            "name": "app.py",
            "content": "from shiny import App, render, ui\n\napp_ui = ui.page_fluid(\n    ui.input_text(\"x\", \"Text input\", placeholder=\"Enter text\"),\n    ui.output_text(\"txt\"),\n)\n\n\ndef server(input, output, session):\n    @output\n    @render.text\n    def txt():\n        return f'x: \"{input.x()}\"'\n\n\napp = App(app_ui, server, debug=True)\n",
            "type": "text"
          }
        ]
      },
      {
        "title": "Verbatim text output",
        "about": "",
        "files": [
          {
            "name": "app.py",
            "content": "from shiny import App, render, ui\n\napp_ui = ui.page_fluid(\n    ui.input_text(\"x\", \"Text input\", placeholder=\"Enter text\"),\n    ui.output_text_verbatim(\"txt\"),\n)\n\n\ndef server(input, output, session):\n    @output\n    @render.text\n    def txt():\n        return f'x: \"{input.x()}\"'\n\n\napp = App(app_ui, server, debug=True)\n",
            "type": "text"
          }
        ]
      },
      {
        "title": "UI output",
        "about": "",
        "files": [
          {
            "name": "app.py",
            "content": "from shiny import App, render, ui\n\napp_ui = ui.page_fluid(\n    ui.input_radio_buttons(\n        \"type\",\n        \"Input Type\",\n        choices=[\"text\", \"select\", \"date\", \"slider\", \"other\"],\n    ),\n    ui.output_ui(\"dyn_ui\"),\n)\n\n\ndef server(input, output, session):\n    @output\n    @render.ui\n    def dyn_ui():\n        if input.type() == \"text\":\n            return ui.TagList(\n                ui.input_text(\"x\", \"Text input\", placeholder=\"Enter text\"),\n                ui.output_text(\"txt\"),\n            )\n\n        elif input.type() == \"select\":\n            return ui.TagList(\n                ui.input_select(\n                    \"x\",\n                    \"Select\",\n                    {\"a\": \"Choice A\", \"b\": \"Choice B\", \"c\": \"Choice C\"},\n                ),\n                ui.output_text(\"txt\"),\n            )\n\n        elif input.type() == \"date\":\n            return ui.TagList(\n                ui.input_date(\"x\", \"Choose a date\"),\n                ui.output_text_verbatim(\"txt\"),\n            )\n\n        elif input.type() == \"slider\":\n            return ui.TagList(\n                ui.input_slider(\"x\", \"Select a number\", 1, 100, 50),\n                ui.output_text_verbatim(\"txt\"),\n            )\n\n        else:\n            return ui.div(\"You selected\", ui.tags.b(\"other\", style=\"color: red;\"))\n\n    @output\n    @render.text\n    def txt():\n        return f'x is: \"{input.x()}\"'\n\n\napp = App(app_ui, server, debug=True)\n",
            "type": "text"
          }
        ]
      },
      {
        "title": "Plot output",
        "about": "",
        "files": [
          {
            "name": "app.py",
            "content": "from shiny import App, render, ui\n\n# Import modules for plot rendering\nimport numpy as np\nimport matplotlib.pyplot as plt\n\napp_ui = ui.page_fluid(\n    ui.input_slider(\"n\", \"Number of bins\", 0, 100, 20),\n    ui.output_plot(\"plot\"),\n)\n\n\ndef server(input, output, session):\n    @output\n    @render.plot(alt=\"A histogram\")\n    def plot():\n        np.random.seed(19680801)\n        x = 100 + 15 * np.random.randn(437)\n\n        fig, ax = plt.subplots()\n        ax.hist(x, input.n(), density=True)\n        return fig\n\n\napp = App(app_ui, server, debug=True)\n",
            "type": "text"
          }
        ]
      },
      {
        "title": "Table output",
        "about": "",
        "files": [
          {
            "name": "app.py",
            "content": "import pathlib\n\nimport palmerpenguins\nimport pandas as pd\nfrom shiny import App, render, ui\n\npenguins = palmerpenguins.load_penguins()\n\nnumeric_cols = [\n    \"bill_length_mm\",\n    \"bill_depth_mm\",\n    \"flipper_length_mm\",\n    \"body_mass_g\",\n]\n\napp_ui = ui.page_fluid(\n    ui.input_checkbox(\"highlight\", \"Highlight min/max values\"),\n    ui.output_table(\"result\"),\n    # Legend\n    ui.panel_conditional(\n        \"input.highlight\",\n        ui.panel_absolute(\n            ui.span(\"minimum\", style=\"background-color: silver;\"),\n            ui.span(\"maximum\", style=\"background-color: yellow;\"),\n            top=\"6px\",\n            right=\"6px\",\n            class_=\"p-1 bg-light border\",\n        ),\n    ),\n    class_=\"p-3\",\n)\n\n\ndef server(input, output, session):\n    @output\n    @render.table\n    def result():\n        if not input.highlight():\n            # If we're not highlighting values, we can simply\n            # return the pandas data frame as-is; @render.table\n            # will call .to_html() on it.\n            return penguins\n        else:\n            # We need to use the pandas Styler API. The default\n            # formatting options for Styler are not the same as\n            # DataFrame.to_html(), so we set a few options to\n            # make them match.\n            return (\n                penguins.style.set_table_attributes(\n                    'class=\"dataframe shiny-table table w-auto\"'\n                )\n                .hide(axis=\"index\")\n                .format(\n                    {\n                        \"bill_length_mm\": \"{0:0.1f}\",\n                        \"bill_depth_mm\": \"{0:0.1f}\",\n                        \"flipper_length_mm\": \"{0:0.0f}\",\n                        \"body_mass_g\": \"{0:0.0f}\",\n                    }\n                )\n                .set_table_styles(\n                    [\n                        dict(selector=\"th\", props=[(\"text-align\", \"right\")]),\n                        dict(\n                            selector=\"tr>td\",\n                            props=[\n                                (\"padding-top\", \"0.1rem\"),\n                                (\"padding-bottom\", \"0.1rem\"),\n                            ],\n                        ),\n                    ]\n                )\n                .highlight_min(color=\"silver\", subset=numeric_cols)\n                .highlight_max(color=\"yellow\", subset=numeric_cols)\n            )\n\n\napp = App(app_ui, server)\n",
            "type": "text"
          },
          {
            "name": "requirements.txt",
            "content": "# Pandas needs Jinja2 for table styling, but it doesn't (yet) load automatically\n# in Pyodide, so we need to explicitly list it here.\nJinja2\n",
            "type": "text"
          }
        ]
      }
    ]
  },
  {
    "category": "Layout",
    "apps": [
      {
        "title": "Sidebar",
        "about": "",
        "files": [
          {
            "name": "app.py",
            "content": "from shiny import App, render, ui\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Note that if the window is narrow, then the sidebar will be shown above the\n# main content, instead of being on the left.\n\napp_ui = ui.page_fluid(\n    ui.layout_sidebar(\n        ui.panel_sidebar(ui.input_slider(\"n\", \"N\", 0, 100, 20)),\n        ui.panel_main(ui.output_plot(\"plot\")),\n    ),\n)\n\n\ndef server(input, output, session):\n    @output\n    @render.plot(alt=\"A histogram\")\n    def plot() -> object:\n        np.random.seed(19680801)\n        x = 100 + 15 * np.random.randn(437)\n\n        fig, ax = plt.subplots()\n        ax.hist(x, input.n(), density=True)\n        return fig\n\n\napp = App(app_ui, server)\n",
            "type": "text"
          }
        ]
      },
      {
        "title": "Two columns",
        "about": "",
        "files": [
          {
            "name": "app.py",
            "content": "from shiny import App, ui\n\n\napp_ui = app_ui = ui.page_fluid(\n    ui.tags.style(\n        \"\"\"\n        .app-col {\n            border: 1px solid black;\n            border-radius: 5px;\n            background-color: #eee;\n            padding: 8px;\n            margin-top: 5px;\n            margin-bottom: 5px;\n        }\n        \"\"\"\n    ),\n    ui.h2({\"style\": \"text-align: center;\"}, \"App Title\"),\n    ui.row(\n        ui.column(\n            12,\n            ui.div(\n                {\"class\": \"app-col\"},\n                ui.p(\n                    \"\"\"\n                    This is a column that spans the entire width of the page.\n                    \"\"\",\n                ),\n                ui.p(\n                    \"\"\"\n                    Here's some more text in another paragraph.\n                    \"\"\",\n                ),\n            ),\n        )\n    ),\n    ui.row(\n        ui.column(\n            6,\n            ui.div(\n                {\"class\": \"app-col\"},\n                \"\"\"\n                Here's some text in a column. Note that if the page is very\n                narrow, the two columns will be be stacked on top of each other\n                instead of being side-by-side.\n                \"\"\",\n            ),\n        ),\n        ui.column(\n            6,\n            ui.div(\n                {\"class\": \"app-col\"},\n                \"\"\"\n                Here's some text in another column.\n                \"\"\",\n            ),\n        ),\n    ),\n)\n\n\ndef server(input, output, session):\n    pass\n\n\napp = App(app_ui, server)\n",
            "type": "text"
          }
        ]
      }
    ]
  },
  {
    "category": "Reactivity",
    "apps": [
      {
        "title": "Event decorator",
        "about": "",
        "files": [
          {
            "name": "app.py",
            "content": "# A reactive Effect is run for its side effects, not for its return value. These\n# side effects can include printing messages to the console, writing files to\n# disk, or sending messages to a server.\n\nfrom shiny import App, reactive, render, ui\n\napp_ui = ui.page_fluid(\n    ui.input_slider(\"n\", \"N\", 0, 20, 10),\n    ui.input_action_button(\"btn\", \"Click me\"),\n    ui.tags.br(),\n    \"The value of the slider when the button was last clicked:\",\n    ui.output_text_verbatim(\"txt\", placeholder=True),\n)\n\n\ndef server(input, output, session):\n\n    # The @reactive.event() causes the function to run only when input.btn is\n    # invalidated.\n    @reactive.Effect\n    @reactive.event(input.btn)\n    def _():\n        print(f\"You clicked the button!\")\n        # You can do other things here, like write data to disk.\n\n    # This output updates only when input.btn is invalidated.\n    @output\n    @render.text\n    @reactive.event(input.btn)\n    def txt():\n        return f\"Last value: {input.n()}\"\n\n\napp = App(app_ui, server)\n",
            "type": "text"
          }
        ]
      },
      {
        "title": "Reactive effect",
        "about": "",
        "files": [
          {
            "name": "app.py",
            "content": "# A reactive Effect is run for its side effects, not for its return value. These\n# side effects can include printing messages to the console, writing files to\n# disk, or sending messages to a server.\n\nfrom shiny import App, reactive, ui\n\napp_ui = ui.page_fluid(\n    ui.input_text(\"x\", \"Text input\", placeholder=\"Enter text\"),\n)\n\n\ndef server(input, output, session):\n    @reactive.Effect\n    def _():\n        print(f\"x has changed to {input.x()}\")\n\n\napp = App(app_ui, server)\n",
            "type": "text"
          }
        ]
      },
      {
        "title": "Reactive calc",
        "about": "",
        "files": [
          {
            "name": "app.py",
            "content": "# A reactive Calc is used for its return value. It intelligently caches its value, and\n# only re-runs after it has been invalidated -- that is, when upstream reactive inputs\n# change.\n\nfrom shiny import App, reactive, render, ui\n\napp_ui = ui.page_fluid(\n    ui.input_slider(\"x\", \"Choose a number\", 1, 100, 50),\n    ui.output_text_verbatim(\"txt1\"),\n    ui.output_text_verbatim(\"txt2\"),\n)\n\n\ndef server(input, output, session):\n    # Each time input.x() changes, it invalidates this reactive.Calc object. If someone\n    # then calls x_times_2(), it will execute the user function and return the value.\n    # The value is cached, so if another function calls x_times_2(), it will simply\n    # return the cached value, without re-running the function.  When input.x() changes\n    # again, it will invalidate this reactive.Calc, and the cache will be cleared.\n    @reactive.Calc\n    def x_times_2():\n        val = input.x() * 2\n        print(f\"Running x_times_2(). Result is {val}.\")\n        return val\n\n    @output\n    @render.text\n    def txt1():\n        return f'x times 2 is: \"{x_times_2()}\"'\n\n    @output\n    @render.text\n    def txt2():\n        return f'x times 2 is: \"{x_times_2()}\"'\n\n\napp = App(app_ui, server)\n",
            "type": "text"
          }
        ]
      },
      {
        "title": "Reactive value",
        "about": "",
        "files": [
          {
            "name": "app.py",
            "content": "# When a reactive Value's value changes, it will invalidate (and trigger re-execution)\n# of any reactive objects (Calcs, Effects, and outputs) that depend on it. Typically, a\n# reactive Value will be set with a reactive Effect. The Effect, in turn, may be driven\n# by a user input (like a button), or something else, like a timer.\n#\n# Reactive Values are often used for tracking or accumulating state over time.\n#\n# In this example, a button press triggers an Effect which adds the current timestamp to\n# a reactive Value containing an array of timestamps. Importantly, the Effect sets the\n# reactive Value's value, which causes all downstream reactive objects to be\n# invalidated.\n#\n# There is also an output which reads the reactive Value and returns a string. When the\n# reactive Value changes, it invalidates this output, causing it to re-execute and\n# return a new string.\n\nfrom datetime import datetime\nimport textwrap\nfrom shiny import App, reactive, render, ui\n\napp_ui = ui.page_fluid(\n    ui.h3(\"Press the button:\"),\n    ui.input_action_button(\"btn\", \"Time\"),\n    ui.h3(\"Time between button presses:\"),\n    ui.output_text_verbatim(\"txt\", placeholder=True),\n)\n\n\ndef server(input, output, session):\n    # A reactive.Value with an array tracking timestamps of all button presses.\n    all_times = reactive.Value([datetime.now().timestamp()])\n\n    # This Effect is triggered by pressing the button. It makes a copy of last_vals(),\n    # because we don't want to modify the original, then appends the new timestamp,\n    # then sets last_vals() to the new, longer array.\n    @reactive.Effect\n    @reactive.event(input.btn)\n    def _():\n        x = all_times().copy()\n        x.append(datetime.now().timestamp())\n        all_times.set(x)\n\n    # This text output is invalidated when all_times() changes. It calculates the\n    # differences between each timestamp and returns the array of differences as a\n    # string.\n    @output\n    @render.text\n    def txt():\n        x = all_times()\n        x = [round(j - i, 2) for i, j in zip(x[:-1], x[1:])]\n        return \"\\n\".join(textwrap.wrap(str(x), width=45))\n\n\napp = App(app_ui, server)\n",
            "type": "text"
          }
        ]
      }
    ]
  },
  {
    "category": "Non-Apps",
    "apps": [
      {
        "title": "Hello, World",
        "about": "A non-application example",
        "files": [
          {
            "name": "hello.py",
            "content": "# Python code that is not part of a Shiny app can also be used for examples.\n# You can run this line-by-line by pressing cmd- or ctrl-Enter, or you can\n# select a block of text and run it with cmd-/ctrl-Enter.\ndef hello():\n    print(\"Hello, world!\")\n\n\nhello()\n",
            "type": "text"
          }
        ]
      }
    ]
  }
]